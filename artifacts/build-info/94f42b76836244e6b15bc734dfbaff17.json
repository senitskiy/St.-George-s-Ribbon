{
	"id": "94f42b76836244e6b15bc734dfbaff17",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"MoonCats_flat.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n\n// File: contracts/MoonCats.sol\n\n\npragma solidity ^0.8.4;\n\n\n\n\n\n\ncontract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n\n    constructor() ERC721(\"MoonCats\", \"MCATS\") {}\n\n    function safeMint(address to, string memory uri) public payable {\n        require(msg.value == 2 ether, 'Only 2 glmr allowed to be transfered.');\n        \n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(to, tokenId);\n        _setTokenURI(tokenId, uri);\n    }\n\n    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {\n        super._burn(tokenId);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function withdraw() public  payable  {\n        address owner = owner();\n        require(owner == msg.sender);\n        address payable to = payable(msg.sender);\n        to.transfer(address(this).balance);   \n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MoonCats_flat.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MoonCats_flat.sol\":7023:14752  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MoonCats_flat.sol\":7023:14752  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dda8198026a51cec12ce9dd1b601487d62c2fdf4172ff536b4c0f67001cac34864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dda8198026a51cec12ce9dd1b601487d62c2fdf4172ff536b4c0f67001cac34864736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xA8 NOT DUP1 0x26 0xA5 SHR 0xEC SLT 0xCE SWAP14 0xD1 0xB6 ADD BASEFEE PUSH30 0x62C2FDF4172FF536B4C0F67001CAC34864736F6C63430008070033000000 ",
							"sourceMap": "7023:7729:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7023:7729:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dda8198026a51cec12ce9dd1b601487d62c2fdf4172ff536b4c0f67001cac34864736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xA8 NOT DUP1 0x26 0xA5 SHR 0xEC SLT 0xCE SWAP14 0xD1 0xB6 ADD BASEFEE PUSH30 0x62C2FDF4172FF536B4C0F67001CAC34864736F6C63430008070033000000 ",
							"sourceMap": "7023:7729:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7023,
									"end": 14752,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dda8198026a51cec12ce9dd1b601487d62c2fdf4172ff536b4c0f67001cac34864736f6c63430008070033",
									".code": [
										{
											"begin": 7023,
											"end": 14752,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7023,
											"end": 14752,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MoonCats_flat.sol\":478:1449  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MoonCats_flat.sol\":478:1449  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ad323b1d4e49c7b9850bf0eb53c72ed950b6f7ae48499cc52ca9b07e2e27e6d764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad323b1d4e49c7b9850bf0eb53c72ed950b6f7ae48499cc52ca9b07e2e27e6d764736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD ORIGIN EXTCODESIZE SAR 0x4E 0x49 0xC7 0xB9 DUP6 SIGNEXTEND CREATE 0xEB MSTORE8 0xC7 0x2E 0xD9 POP 0xB6 0xF7 0xAE BASEFEE 0x49 SWAP13 0xC5 0x2C 0xA9 0xB0 PUSH31 0x2E27E6D764736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "478:971:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;478:971:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ad323b1d4e49c7b9850bf0eb53c72ed950b6f7ae48499cc52ca9b07e2e27e6d764736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD ORIGIN EXTCODESIZE SAR 0x4E 0x49 0xC7 0xB9 DUP6 SIGNEXTEND CREATE 0xEB MSTORE8 0xC7 0x2E 0xD9 POP 0xB6 0xF7 0xAE BASEFEE 0x49 SWAP13 0xC5 0x2C 0xA9 0xB0 PUSH31 0x2E27E6D764736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "478:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 478,
									"end": 1449,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ad323b1d4e49c7b9850bf0eb53c72ed950b6f7ae48499cc52ca9b07e2e27e6d764736f6c63430008070033",
									".code": [
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 478,
											"end": 1449,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MoonCats_flat.sol\":23541:36547  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"MoonCats_flat.sol\":24303:24416  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"MoonCats_flat.sol\":24369:24382  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"MoonCats_flat.sol\":24369:24374  _name */\n  0x00\n  swap1\n    /* \"MoonCats_flat.sol\":24369:24382  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"MoonCats_flat.sol\":24392:24409  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"MoonCats_flat.sol\":24392:24399  _symbol */\n  0x01\n  swap1\n    /* \"MoonCats_flat.sol\":24392:24409  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"MoonCats_flat.sol\":24303:24416  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MoonCats_flat.sol\":23541:36547  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:143   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:143   */\ntag_24:\n    /* \"#utility.yul\":162:175   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":224:234   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":221:257   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:476   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:619   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:619   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:869   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:869   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":14:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1084   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1084   */\ntag_36:\n    /* \"#utility.yul\":1107:1123   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1172:1186   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1169:1203   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1203   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1378   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1378   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":904:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1851   */\ntag_11:\n    /* \"#utility.yul\":1550:1551   */\n  0x01\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1675   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1675   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1845   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1767:1777   */\n  0x4e487b71\n    /* \"#utility.yul\":1762:1765   */\n  0xe0\n    /* \"#utility.yul\":1758:1778   */\n  shl\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1779   */\n  mstore\n    /* \"#utility.yul\":1802:1806   */\n  0x22\n    /* \"#utility.yul\":1799:1800   */\n  0x04\n    /* \"#utility.yul\":1792:1807   */\n  mstore\n    /* \"#utility.yul\":1830:1834   */\n  0x24\n    /* \"#utility.yul\":1827:1828   */\n  0x00\n    /* \"#utility.yul\":1820:1835   */\n  revert\n    /* \"#utility.yul\":1684:1845   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1471:1851   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1856:1983   */\ntag_27:\n    /* \"#utility.yul\":1917:1927   */\n  0x4e487b71\n    /* \"#utility.yul\":1912:1915   */\n  0xe0\n    /* \"#utility.yul\":1908:1928   */\n  shl\n    /* \"#utility.yul\":1905:1906   */\n  0x00\n    /* \"#utility.yul\":1898:1929   */\n  mstore\n    /* \"#utility.yul\":1948:1952   */\n  0x41\n    /* \"#utility.yul\":1945:1946   */\n  0x04\n    /* \"#utility.yul\":1938:1953   */\n  mstore\n    /* \"#utility.yul\":1972:1976   */\n  0x24\n    /* \"#utility.yul\":1969:1970   */\n  0x00\n    /* \"#utility.yul\":1962:1977   */\n  revert\n    /* \"#utility.yul\":1856:1983   */\ntag_21:\n    /* \"MoonCats_flat.sol\":23541:36547  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MoonCats_flat.sol\":23541:36547  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":5027:5041   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5020:5042   */\n      iszero\n        /* \"#utility.yul\":5002:5043   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4990:4992   */\n      0x20\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4325:4357   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4307:4358   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4295:4297   */\n      0x20\n        /* \"#utility.yul\":4280:4298   */\n      add\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":4161:4364   */\n      jump\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"MoonCats_flat.sol\":27639:27969  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"MoonCats_flat.sol\":28035:28214  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"MoonCats_flat.sol\":25104:25339  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":10320:10345   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x20\n        /* \"#utility.yul\":10293:10311   */\n      add\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":10174:10351   */\n      jump\n        /* \"MoonCats_flat.sol\":25563:25665  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"MoonCats_flat.sol\":25731:26060  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":27512:27516  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27535:27553  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":27535:27570  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"MoonCats_flat.sol\":24585:24589  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":24620:24660  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MoonCats_flat.sol\":24620:24724  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":24676:24724  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MoonCats_flat.sol\":24620:24724  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"MoonCats_flat.sol\":24620:24776  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":17591:17631  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MoonCats_flat.sol\":24740:24776  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"MoonCats_flat.sol\":24601:24776  return... */\n      swap3\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"MoonCats_flat.sol\":25455:25468  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":25487:25492  _name */\n      0x00\n        /* \"MoonCats_flat.sol\":25480:25492  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"MoonCats_flat.sol\":26988:26995  address */\n      0x00\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":30160:30167  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8317:8319   */\n      0x20\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8299:8320   */\n      mstore\n        /* \"#utility.yul\":8356:8358   */\n      0x2c\n        /* \"#utility.yul\":8336:8354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8329:8359   */\n      mstore\n        /* \"#utility.yul\":8395:8429   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8375:8393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8368:8430   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8446:8464   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8439:8481   */\n      mstore\n        /* \"#utility.yul\":8498:8517   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"MoonCats_flat.sol\":27098:27122  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27098:27113  _tokenApprovals */\n      0x04\n        /* \"MoonCats_flat.sol\":27098:27122  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"MoonCats_flat.sol\":26530:26543  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":26546:26569  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"MoonCats_flat.sol\":26561:26568  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":26546:26560  ERC721.ownerOf */\n      tag_47\n        /* \"MoonCats_flat.sol\":26546:26569  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"MoonCats_flat.sol\":26530:26569  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":26593:26598  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26587:26598  to != owner */\n      and\n        /* \"MoonCats_flat.sol\":26587:26589  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26587:26598  to != owner */\n      and\n      eq\n      iszero\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9556:9558   */\n      0x20\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9538:9559   */\n      mstore\n        /* \"#utility.yul\":9595:9597   */\n      0x21\n        /* \"#utility.yul\":9575:9593   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9568:9598   */\n      mstore\n        /* \"#utility.yul\":9634:9668   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":9614:9632   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9607:9669   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":9685:9703   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9678:9709   */\n      mstore\n        /* \"#utility.yul\":9726:9745   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":9354:9751   */\n      jump\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26668:26689  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MoonCats_flat.sol\":26668:26730  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"MoonCats_flat.sol\":26693:26730  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"MoonCats_flat.sol\":26710:26715  owner */\n      dup2\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"MoonCats_flat.sol\":26693:26730  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7071:7073   */\n      0x20\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7053:7074   */\n      mstore\n        /* \"#utility.yul\":7110:7112   */\n      0x38\n        /* \"#utility.yul\":7090:7108   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7083:7113   */\n      mstore\n        /* \"#utility.yul\":7149:7183   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":7129:7147   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7122:7184   */\n      mstore\n        /* \"#utility.yul\":7220:7246   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":7200:7218   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7193:7247   */\n      mstore\n        /* \"#utility.yul\":7264:7283   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      tag_91\n        /* \"#utility.yul\":6869:7289   */\n      jump\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n    tag_103:\n        /* \"MoonCats_flat.sol\":26823:26844  _approve(to, tokenId) */\n      tag_106\n        /* \"MoonCats_flat.sol\":26832:26834  to */\n      dup4\n        /* \"MoonCats_flat.sol\":26836:26843  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":26823:26831  _approve */\n      tag_107\n        /* \"MoonCats_flat.sol\":26823:26844  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"MoonCats_flat.sol\":26520:26851  {... */\n      pop\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":27639:27969  function transferFrom(... */\n    tag_41:\n        /* \"MoonCats_flat.sol\":27828:27869  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27861:27868  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":27828:27846  _isApprovedOrOwner */\n      tag_111\n        /* \"MoonCats_flat.sol\":27828:27869  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"MoonCats_flat.sol\":27820:27923  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"MoonCats_flat.sol\":27934:27962  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"MoonCats_flat.sol\":27944:27948  from */\n      dup4\n        /* \"MoonCats_flat.sol\":27950:27952  to */\n      dup4\n        /* \"MoonCats_flat.sol\":27954:27961  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":27934:27943  _transfer */\n      tag_116\n        /* \"MoonCats_flat.sol\":27934:27962  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":28035:28214  function safeTransferFrom(... */\n    tag_44:\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"MoonCats_flat.sol\":28185:28189  from */\n      dup4\n        /* \"MoonCats_flat.sol\":28191:28193  to */\n      dup4\n        /* \"MoonCats_flat.sol\":28195:28202  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MoonCats_flat.sol\":28168:28184  safeTransferFrom */\n      tag_65\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":25104:25339  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"MoonCats_flat.sol\":25176:25183  address */\n      0x00\n        /* \"MoonCats_flat.sol\":25211:25227  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":25211:25218  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":25211:25227  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MoonCats_flat.sol\":25245:25264  owner != address(0) */\n      dup1\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7889:7910   */\n      mstore\n        /* \"#utility.yul\":7946:7948   */\n      0x29\n        /* \"#utility.yul\":7926:7944   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7919:7949   */\n      mstore\n        /* \"#utility.yul\":7985:8019   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7965:7983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7958:8020   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8036:8054   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8029:8068   */\n      mstore\n        /* \"#utility.yul\":8085:8104   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7705:8110   */\n      jump\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"MoonCats_flat.sol\":24914:24921  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":24941:24960  owner != address(0) */\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7496:7498   */\n      0x20\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7478:7499   */\n      mstore\n        /* \"#utility.yul\":7535:7537   */\n      0x2a\n        /* \"#utility.yul\":7515:7533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7508:7538   */\n      mstore\n        /* \"#utility.yul\":7574:7608   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7554:7572   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7547:7609   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7625:7643   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7618:7658   */\n      mstore\n        /* \"#utility.yul\":7675:7694   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7294:7700   */\n      jump\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":25024:25040  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":25024:25033  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":25024:25040  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25563:25665  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"MoonCats_flat.sol\":25619:25632  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":25651:25658  _symbol */\n      0x01\n        /* \"MoonCats_flat.sol\":25644:25658  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"MoonCats_flat.sol\":27290:27342  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27323:27331  operator */\n      dup4\n        /* \"MoonCats_flat.sol\":27333:27341  approved */\n      dup4\n        /* \"MoonCats_flat.sol\":27290:27308  _setApprovalForAll */\n      tag_136\n        /* \"MoonCats_flat.sol\":27290:27342  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n    tag_65:\n        /* \"MoonCats_flat.sol\":28449:28490  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":28482:28489  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":28449:28467  _isApprovedOrOwner */\n      tag_111\n        /* \"MoonCats_flat.sol\":28449:28490  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"MoonCats_flat.sol\":28441:28544  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"MoonCats_flat.sol\":28554:28593  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"MoonCats_flat.sol\":28568:28572  from */\n      dup5\n        /* \"MoonCats_flat.sol\":28574:28576  to */\n      dup5\n        /* \"MoonCats_flat.sol\":28578:28585  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":28587:28592  _data */\n      dup5\n        /* \"MoonCats_flat.sol\":28554:28567  _safeTransfer */\n      tag_143\n        /* \"MoonCats_flat.sol\":28554:28593  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25731:26060  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"MoonCats_flat.sol\":30137:30141  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":30160:30167  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"MoonCats_flat.sol\":25804:25817  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      and\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9140:9142   */\n      0x20\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9122:9143   */\n      mstore\n        /* \"#utility.yul\":9179:9181   */\n      0x2f\n        /* \"#utility.yul\":9159:9177   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9152:9182   */\n      mstore\n        /* \"#utility.yul\":9218:9252   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":9198:9216   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9191:9253   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9269:9287   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9262:9307   */\n      mstore\n        /* \"#utility.yul\":9324:9343   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8938:9349   */\n      jump\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"MoonCats_flat.sol\":25916:25937  string memory baseURI */\n      0x00\n        /* \"MoonCats_flat.sol\":25940:25950  _baseURI() */\n      tag_149\n        /* \"MoonCats_flat.sol\":26377:26386  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MoonCats_flat.sol\":26301:26393  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MoonCats_flat.sol\":25940:25950  _baseURI() */\n    tag_149:\n        /* \"MoonCats_flat.sol\":25916:25950  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":25991:25992  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":25973:25980  baseURI */\n      dup2\n        /* \"MoonCats_flat.sol\":25967:25988  bytes(baseURI).length */\n      mload\n        /* \"MoonCats_flat.sol\":25967:25992  bytes(baseURI).length > 0 */\n      gt\n        /* \"MoonCats_flat.sol\":25967:26053  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"MoonCats_flat.sol\":26019:26026  baseURI */\n      dup1\n        /* \"MoonCats_flat.sol\":26028:26046  tokenId.toString() */\n      tag_153\n        /* \"MoonCats_flat.sol\":26028:26035  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":26028:26044  tokenId.toString */\n      tag_154\n        /* \"MoonCats_flat.sol\":26028:26046  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"MoonCats_flat.sol\":26002:26047  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MoonCats_flat.sol\":25967:26053  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"MoonCats_flat.sol\":25960:26053  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"MoonCats_flat.sol\":25731:26060  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":33923:34094  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33997:34012  _tokenApprovals */\n      0x04\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MoonCats_flat.sol\":33997:34026  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MoonCats_flat.sol\":34050:34073  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MoonCats_flat.sol\":34050:34064  ERC721.ownerOf */\n      tag_47\n        /* \"MoonCats_flat.sol\":34050:34073  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34041:34087  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MoonCats_flat.sol\":33923:34094  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":30355:30699  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"MoonCats_flat.sol\":30448:30452  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":30160:30167  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6658:6660   */\n      0x20\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6640:6661   */\n      mstore\n        /* \"#utility.yul\":6697:6699   */\n      0x2c\n        /* \"#utility.yul\":6677:6695   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6670:6700   */\n      mstore\n        /* \"#utility.yul\":6736:6770   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":6716:6734   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6709:6771   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":6787:6805   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6780:6822   */\n      mstore\n        /* \"#utility.yul\":6839:6858   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6456:6864   */\n      jump\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"MoonCats_flat.sol\":30547:30560  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":30563:30586  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"MoonCats_flat.sol\":30578:30585  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":30563:30577  ERC721.ownerOf */\n      tag_47\n        /* \"MoonCats_flat.sol\":30563:30586  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"MoonCats_flat.sol\":30547:30586  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":30615:30620  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30604:30620  spender == owner */\n      and\n        /* \"MoonCats_flat.sol\":30604:30611  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30604:30620  spender == owner */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":30604:30655  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_169\n      jumpi\n      pop\n        /* \"MoonCats_flat.sol\":30648:30655  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30624:30655  getApproved(tokenId) == spender */\n      and\n        /* \"MoonCats_flat.sol\":30624:30644  getApproved(tokenId) */\n      tag_170\n        /* \"MoonCats_flat.sol\":30636:30643  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":30624:30635  getApproved */\n      tag_31\n        /* \"MoonCats_flat.sol\":30624:30644  getApproved(tokenId) */\n      jump\t// in\n    tag_170:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30624:30655  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":30604:30655  spender == owner || getApproved(tokenId) == spender */\n    tag_169:\n        /* \"MoonCats_flat.sol\":30604:30691  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_172\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":27512:27516  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27535:27553  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":27535:27570  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MoonCats_flat.sol\":30659:30691  isApprovedForAll(owner, spender) */\n    tag_172:\n        /* \"MoonCats_flat.sol\":30596:30692  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap5\n        /* \"MoonCats_flat.sol\":30355:30699  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":33252:33812  function _transfer(... */\n    tag_116:\n        /* \"MoonCats_flat.sol\":33406:33410  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33379:33410  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MoonCats_flat.sol\":33379:33402  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"MoonCats_flat.sol\":33394:33401  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":33379:33393  ERC721.ownerOf */\n      tag_47\n        /* \"MoonCats_flat.sol\":33379:33402  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33379:33410  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8712:8733   */\n      mstore\n        /* \"#utility.yul\":8769:8771   */\n      0x29\n        /* \"#utility.yul\":8749:8767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8742:8772   */\n      mstore\n        /* \"#utility.yul\":8808:8842   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":8788:8806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8781:8843   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":8859:8877   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8852:8891   */\n      mstore\n        /* \"#utility.yul\":8908:8927   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_91\n        /* \"#utility.yul\":8528:8933   */\n      jump\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33474:33490  to != address(0) */\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5899:5901   */\n      0x20\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5881:5902   */\n      mstore\n        /* \"#utility.yul\":5938:5940   */\n      0x24\n        /* \"#utility.yul\":5918:5936   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5911:5941   */\n      mstore\n        /* \"#utility.yul\":5977:6011   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":5957:5975   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5950:6012   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":6028:6046   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6021:6055   */\n      mstore\n        /* \"#utility.yul\":6072:6091   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":5697:6097   */\n      jump\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"MoonCats_flat.sol\":33643:33672  _approve(address(0), tokenId) */\n      tag_183\n        /* \"MoonCats_flat.sol\":33660:33661  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":33664:33671  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":33643:33651  _approve */\n      tag_107\n        /* \"MoonCats_flat.sol\":33643:33672  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33683:33692  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":33702:33703  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      swap1\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"MoonCats_flat.sol\":33702:33703  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33713:33722  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":33730:33731  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      swap1\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"MoonCats_flat.sol\":33730:33731  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33741:33748  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MoonCats_flat.sol\":33741:33762  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"MoonCats_flat.sol\":33778:33805  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"MoonCats_flat.sol\":33778:33805  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MoonCats_flat.sol\":33252:33812  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":34229:34536  function _setApprovalForAll(... */\n    tag_136:\n        /* \"MoonCats_flat.sol\":34379:34387  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34370:34387  owner != operator */\n      and\n        /* \"MoonCats_flat.sol\":34370:34375  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34370:34387  owner != operator */\n      and\n      eq\n      iszero\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6304:6306   */\n      0x20\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6286:6307   */\n      mstore\n        /* \"#utility.yul\":6343:6345   */\n      0x19\n        /* \"#utility.yul\":6323:6341   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6316:6346   */\n      mstore\n        /* \"#utility.yul\":6382:6409   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":6362:6380   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6355:6410   */\n      mstore\n        /* \"#utility.yul\":6427:6445   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":6102:6451   */\n      jump\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34427:34452  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":34427:34445  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":34427:34452  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":34427:34462  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"MoonCats_flat.sol\":34427:34473  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5002:5043   */\n      swap2\n      dup3\n      mstore\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4975:4993   */\n      add\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MoonCats_flat.sol\":34229:34536  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":29462:29769  function _safeTransfer(... */\n    tag_143:\n        /* \"MoonCats_flat.sol\":29613:29641  _transfer(from, to, tokenId) */\n      tag_194\n        /* \"MoonCats_flat.sol\":29623:29627  from */\n      dup5\n        /* \"MoonCats_flat.sol\":29629:29631  to */\n      dup5\n        /* \"MoonCats_flat.sol\":29633:29640  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":29613:29622  _transfer */\n      tag_116\n        /* \"MoonCats_flat.sol\":29613:29641  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_194:\n        /* \"MoonCats_flat.sol\":29659:29707  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_195\n        /* \"MoonCats_flat.sol\":29682:29686  from */\n      dup5\n        /* \"MoonCats_flat.sol\":29688:29690  to */\n      dup5\n        /* \"MoonCats_flat.sol\":29692:29699  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":29701:29706  _data */\n      dup5\n        /* \"MoonCats_flat.sol\":29659:29681  _checkOnERC721Received */\n      tag_196\n        /* \"MoonCats_flat.sol\":29659:29707  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_195:\n        /* \"MoonCats_flat.sol\":29651:29762  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_199\n      jump\t// in\n        /* \"MoonCats_flat.sol\":1800:2503  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"MoonCats_flat.sol\":1856:1869  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":2073:2083  value == 0 */\n      dup2\n        /* \"MoonCats_flat.sol\":2069:2120  if (value == 0) {... */\n      tag_202\n      jumpi\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":2099:2109  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"MoonCats_flat.sol\":1800:2503  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":2069:2120  if (value == 0) {... */\n    tag_202:\n        /* \"MoonCats_flat.sol\":2144:2149  value */\n      dup2\n        /* \"MoonCats_flat.sol\":2129:2141  uint256 temp */\n      0x00\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n    tag_203:\n        /* \"MoonCats_flat.sol\":2190:2199  temp != 0 */\n      dup2\n      iszero\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n      tag_204\n      jumpi\n        /* \"MoonCats_flat.sol\":2215:2223  digits++ */\n      dup1\n      tag_205\n      dup2\n      tag_206\n      jump\t// in\n    tag_205:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2237:2247  temp /= 10 */\n      tag_207\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":2245:2247  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2237:2247  temp /= 10 */\n      dup4\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n      jump(tag_203)\n    tag_204:\n        /* \"MoonCats_flat.sol\":2267:2286  bytes memory buffer */\n      0x00\n        /* \"MoonCats_flat.sol\":2299:2305  digits */\n      dup2\n        /* \"MoonCats_flat.sol\":2289:2306  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_210\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_212:\n      pop\n        /* \"MoonCats_flat.sol\":2267:2306  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n    tag_213:\n        /* \"MoonCats_flat.sol\":2323:2333  value != 0 */\n      dup5\n      iszero\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n      tag_172\n      jumpi\n        /* \"MoonCats_flat.sol\":2349:2360  digits -= 1 */\n      tag_215\n        /* \"MoonCats_flat.sol\":2359:2360  1 */\n      0x01\n        /* \"MoonCats_flat.sol\":2349:2360  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_215:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2417:2427  value % 10 */\n      tag_216\n        /* \"MoonCats_flat.sol\":2425:2427  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2417:2422  value */\n      dup7\n        /* \"MoonCats_flat.sol\":2417:2427  value % 10 */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"MoonCats_flat.sol\":2404:2428  48 + uint256(value % 10) */\n      tag_218\n      swap1\n        /* \"MoonCats_flat.sol\":2404:2406  48 */\n      0x30\n        /* \"MoonCats_flat.sol\":2404:2428  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_218:\n        /* \"MoonCats_flat.sol\":2391:2430  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"MoonCats_flat.sol\":2374:2380  buffer */\n      dup2\n        /* \"MoonCats_flat.sol\":2381:2387  digits */\n      dup4\n        /* \"MoonCats_flat.sol\":2374:2388  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n      0x20\n      add\n      add\n        /* \"MoonCats_flat.sol\":2374:2430  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"MoonCats_flat.sol\":2444:2455  value /= 10 */\n      tag_222\n        /* \"MoonCats_flat.sol\":2453:2455  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2444:2455  value /= 10 */\n      dup7\n      tag_208\n      jump\t// in\n    tag_222:\n      swap5\n      pop\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n      jump(tag_213)\n        /* \"MoonCats_flat.sol\":35089:35867  function _checkOnERC721Received(... */\n    tag_196:\n        /* \"MoonCats_flat.sol\":35239:35243  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":35259:35272  to.isContract */\n      dup5\n      and\n        /* \"MoonCats_flat.sol\":7931:7951  extcodesize(account) */\n      extcodesize\n        /* \"MoonCats_flat.sol\":7977:7985  size > 0 */\n      iszero\n        /* \"MoonCats_flat.sol\":35255:35861  if (to.isContract()) {... */\n      tag_227\n      jumpi\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":35294:35330  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_229\n      swap1\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n      swap1\n        /* \"MoonCats_flat.sol\":35345:35349  from */\n      dup10\n      swap1\n        /* \"MoonCats_flat.sol\":35351:35358  tokenId */\n      dup9\n      swap1\n        /* \"MoonCats_flat.sol\":35360:35365  _data */\n      dup9\n      swap1\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_230\n      jump\t// in\n    tag_229:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_232\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_233\n      swap2\n      dup2\n      add\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      0x01\n    tag_232:\n        /* \"MoonCats_flat.sol\":35290:35809  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_235\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_240\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_239)\n    tag_240:\n      0x60\n      swap2\n      pop\n    tag_239:\n      pop\n        /* \"MoonCats_flat.sol\":35533:35546  reason.length */\n      dup1\n      mload\n        /* \"MoonCats_flat.sol\":35529:35795  if (reason.length == 0) {... */\n      tag_241\n      jumpi\n        /* \"MoonCats_flat.sol\":35575:35635  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_199\n      jump\t// in\n        /* \"MoonCats_flat.sol\":35529:35795  if (reason.length == 0) {... */\n    tag_241:\n        /* \"MoonCats_flat.sol\":35747:35753  reason */\n      dup1\n        /* \"MoonCats_flat.sol\":35741:35754  mload(reason) */\n      mload\n        /* \"MoonCats_flat.sol\":35732:35738  reason */\n      dup2\n        /* \"MoonCats_flat.sol\":35728:35730  32 */\n      0x20\n        /* \"MoonCats_flat.sol\":35724:35739  add(32, reason) */\n      add\n        /* \"MoonCats_flat.sol\":35717:35755  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MoonCats_flat.sol\":35290:35809  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_235:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":35416:35467  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":35409:35467  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_172)\n        /* \"MoonCats_flat.sol\":35255:35861  if (to.isContract()) {... */\n    tag_227:\n      pop\n        /* \"MoonCats_flat.sol\":35846:35850  true */\n      0x01\n        /* \"MoonCats_flat.sol\":35089:35867  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_248:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_250:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_51:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_252:\n        /* \"#utility.yul\":343:372   */\n      tag_152\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_248\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_72:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_255:\n        /* \"#utility.yul\":551:580   */\n      tag_256\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_248\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_257\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_248\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":648:976   */\n    tag_40:\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":733:739   */\n      dup1\n        /* \"#utility.yul\":741:747   */\n      0x00\n        /* \"#utility.yul\":794:796   */\n      0x60\n        /* \"#utility.yul\":782:791   */\n      dup5\n        /* \"#utility.yul\":773:780   */\n      dup7\n        /* \"#utility.yul\":769:792   */\n      sub\n        /* \"#utility.yul\":765:797   */\n      slt\n        /* \"#utility.yul\":762:814   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":810:811   */\n      0x00\n        /* \"#utility.yul\":807:808   */\n      dup1\n        /* \"#utility.yul\":800:812   */\n      revert\n        /* \"#utility.yul\":762:814   */\n    tag_259:\n        /* \"#utility.yul\":833:862   */\n      tag_260\n        /* \"#utility.yul\":852:861   */\n      dup5\n        /* \"#utility.yul\":833:862   */\n      tag_248\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":823:862   */\n      swap3\n      pop\n        /* \"#utility.yul\":881:919   */\n      tag_261\n        /* \"#utility.yul\":915:917   */\n      0x20\n        /* \"#utility.yul\":904:913   */\n      dup6\n        /* \"#utility.yul\":900:918   */\n      add\n        /* \"#utility.yul\":881:919   */\n      tag_248\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":871:919   */\n      swap2\n      pop\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":955:964   */\n      dup5\n        /* \"#utility.yul\":951:969   */\n      add\n        /* \"#utility.yul\":938:970   */\n      calldataload\n        /* \"#utility.yul\":928:970   */\n      swap1\n      pop\n        /* \"#utility.yul\":648:976   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":981:2119   */\n    tag_64:\n        /* \"#utility.yul\":1076:1082   */\n      0x00\n        /* \"#utility.yul\":1084:1090   */\n      dup1\n        /* \"#utility.yul\":1092:1098   */\n      0x00\n        /* \"#utility.yul\":1100:1106   */\n      dup1\n        /* \"#utility.yul\":1153:1156   */\n      0x80\n        /* \"#utility.yul\":1141:1150   */\n      dup6\n        /* \"#utility.yul\":1132:1139   */\n      dup8\n        /* \"#utility.yul\":1128:1151   */\n      sub\n        /* \"#utility.yul\":1124:1157   */\n      slt\n        /* \"#utility.yul\":1121:1174   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1170:1171   */\n      0x00\n        /* \"#utility.yul\":1167:1168   */\n      dup1\n        /* \"#utility.yul\":1160:1172   */\n      revert\n        /* \"#utility.yul\":1121:1174   */\n    tag_263:\n        /* \"#utility.yul\":1193:1222   */\n      tag_264\n        /* \"#utility.yul\":1212:1221   */\n      dup6\n        /* \"#utility.yul\":1193:1222   */\n      tag_248\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1183:1222   */\n      swap4\n      pop\n        /* \"#utility.yul\":1241:1279   */\n      tag_265\n        /* \"#utility.yul\":1275:1277   */\n      0x20\n        /* \"#utility.yul\":1264:1273   */\n      dup7\n        /* \"#utility.yul\":1260:1278   */\n      add\n        /* \"#utility.yul\":1241:1279   */\n      tag_248\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1231:1279   */\n      swap3\n      pop\n        /* \"#utility.yul\":1326:1328   */\n      0x40\n        /* \"#utility.yul\":1315:1324   */\n      dup6\n        /* \"#utility.yul\":1311:1329   */\n      add\n        /* \"#utility.yul\":1298:1330   */\n      calldataload\n        /* \"#utility.yul\":1288:1330   */\n      swap2\n      pop\n        /* \"#utility.yul\":1381:1383   */\n      0x60\n        /* \"#utility.yul\":1370:1379   */\n      dup6\n        /* \"#utility.yul\":1366:1384   */\n      add\n        /* \"#utility.yul\":1353:1385   */\n      calldataload\n        /* \"#utility.yul\":1404:1422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1445:1447   */\n      dup1\n        /* \"#utility.yul\":1437:1443   */\n      dup3\n        /* \"#utility.yul\":1434:1448   */\n      gt\n        /* \"#utility.yul\":1431:1465   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1458:1459   */\n      dup1\n        /* \"#utility.yul\":1451:1463   */\n      revert\n        /* \"#utility.yul\":1431:1465   */\n    tag_266:\n        /* \"#utility.yul\":1499:1505   */\n      dup2\n        /* \"#utility.yul\":1488:1497   */\n      dup8\n        /* \"#utility.yul\":1484:1506   */\n      add\n        /* \"#utility.yul\":1474:1506   */\n      swap2\n      pop\n        /* \"#utility.yul\":1544:1551   */\n      dup8\n        /* \"#utility.yul\":1537:1541   */\n      0x1f\n        /* \"#utility.yul\":1533:1535   */\n      dup4\n        /* \"#utility.yul\":1529:1542   */\n      add\n        /* \"#utility.yul\":1525:1552   */\n      slt\n        /* \"#utility.yul\":1515:1570   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1566:1567   */\n      0x00\n        /* \"#utility.yul\":1563:1564   */\n      dup1\n        /* \"#utility.yul\":1556:1568   */\n      revert\n        /* \"#utility.yul\":1515:1570   */\n    tag_267:\n        /* \"#utility.yul\":1602:1604   */\n      dup2\n        /* \"#utility.yul\":1589:1605   */\n      calldataload\n        /* \"#utility.yul\":1624:1626   */\n      dup2\n        /* \"#utility.yul\":1620:1622   */\n      dup2\n        /* \"#utility.yul\":1617:1627   */\n      gt\n        /* \"#utility.yul\":1614:1650   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1630:1648   */\n      tag_269\n      tag_211\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":1705:1707   */\n      0x40\n        /* \"#utility.yul\":1699:1708   */\n      mload\n        /* \"#utility.yul\":1673:1675   */\n      0x1f\n        /* \"#utility.yul\":1759:1772   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1755:1777   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1779:1781   */\n      0x3f\n        /* \"#utility.yul\":1751:1782   */\n      add\n        /* \"#utility.yul\":1747:1787   */\n      and\n        /* \"#utility.yul\":1735:1788   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1803:1821   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1823:1845   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1800:1846   */\n      or\n        /* \"#utility.yul\":1797:1869   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1849:1867   */\n      tag_271\n      tag_211\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1889:1899   */\n      dup2\n        /* \"#utility.yul\":1885:1887   */\n      0x40\n        /* \"#utility.yul\":1878:1900   */\n      mstore\n        /* \"#utility.yul\":1924:1926   */\n      dup3\n        /* \"#utility.yul\":1916:1922   */\n      dup2\n        /* \"#utility.yul\":1909:1927   */\n      mstore\n        /* \"#utility.yul\":1964:1971   */\n      dup11\n        /* \"#utility.yul\":1959:1961   */\n      0x20\n        /* \"#utility.yul\":1954:1956   */\n      dup5\n        /* \"#utility.yul\":1950:1952   */\n      dup8\n        /* \"#utility.yul\":1946:1957   */\n      add\n        /* \"#utility.yul\":1942:1962   */\n      add\n        /* \"#utility.yul\":1939:1972   */\n      gt\n        /* \"#utility.yul\":1936:1989   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1985:1986   */\n      0x00\n        /* \"#utility.yul\":1982:1983   */\n      dup1\n        /* \"#utility.yul\":1975:1987   */\n      revert\n        /* \"#utility.yul\":1936:1989   */\n    tag_272:\n        /* \"#utility.yul\":2041:2043   */\n      dup3\n        /* \"#utility.yul\":2036:2038   */\n      0x20\n        /* \"#utility.yul\":2032:2034   */\n      dup7\n        /* \"#utility.yul\":2028:2039   */\n      add\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2015:2021   */\n      dup4\n        /* \"#utility.yul\":2011:2026   */\n      add\n        /* \"#utility.yul\":1998:2044   */\n      calldatacopy\n        /* \"#utility.yul\":2086:2087   */\n      0x00\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2076:2078   */\n      dup5\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2064:2079   */\n      add\n        /* \"#utility.yul\":2060:2084   */\n      add\n        /* \"#utility.yul\":2053:2088   */\n      mstore\n        /* \"#utility.yul\":2107:2113   */\n      dup1\n        /* \"#utility.yul\":2097:2113   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":981:2119   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2124:2471   */\n    tag_60:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      dup1\n        /* \"#utility.yul\":2250:2252   */\n      0x40\n        /* \"#utility.yul\":2238:2247   */\n      dup4\n        /* \"#utility.yul\":2229:2236   */\n      dup6\n        /* \"#utility.yul\":2225:2248   */\n      sub\n        /* \"#utility.yul\":2221:2253   */\n      slt\n        /* \"#utility.yul\":2218:2270   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2263:2264   */\n      dup1\n        /* \"#utility.yul\":2256:2268   */\n      revert\n        /* \"#utility.yul\":2218:2270   */\n    tag_274:\n        /* \"#utility.yul\":2289:2318   */\n      tag_275\n        /* \"#utility.yul\":2308:2317   */\n      dup4\n        /* \"#utility.yul\":2289:2318   */\n      tag_248\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2279:2318   */\n      swap2\n      pop\n        /* \"#utility.yul\":2368:2370   */\n      0x20\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2353:2371   */\n      add\n        /* \"#utility.yul\":2340:2372   */\n      calldataload\n        /* \"#utility.yul\":2415:2420   */\n      dup1\n        /* \"#utility.yul\":2408:2421   */\n      iszero\n        /* \"#utility.yul\":2401:2422   */\n      iszero\n        /* \"#utility.yul\":2394:2399   */\n      dup2\n        /* \"#utility.yul\":2391:2423   */\n      eq\n        /* \"#utility.yul\":2381:2441   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":2437:2438   */\n      0x00\n        /* \"#utility.yul\":2434:2435   */\n      dup1\n        /* \"#utility.yul\":2427:2439   */\n      revert\n        /* \"#utility.yul\":2381:2441   */\n    tag_276:\n        /* \"#utility.yul\":2460:2465   */\n      dup1\n        /* \"#utility.yul\":2450:2465   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2124:2471   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2476:2730   */\n    tag_36:\n        /* \"#utility.yul\":2544:2550   */\n      0x00\n        /* \"#utility.yul\":2552:2558   */\n      dup1\n        /* \"#utility.yul\":2605:2607   */\n      0x40\n        /* \"#utility.yul\":2593:2602   */\n      dup4\n        /* \"#utility.yul\":2584:2591   */\n      dup6\n        /* \"#utility.yul\":2580:2603   */\n      sub\n        /* \"#utility.yul\":2576:2608   */\n      slt\n        /* \"#utility.yul\":2573:2625   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":2621:2622   */\n      0x00\n        /* \"#utility.yul\":2618:2619   */\n      dup1\n        /* \"#utility.yul\":2611:2623   */\n      revert\n        /* \"#utility.yul\":2573:2625   */\n    tag_278:\n        /* \"#utility.yul\":2644:2673   */\n      tag_279\n        /* \"#utility.yul\":2663:2672   */\n      dup4\n        /* \"#utility.yul\":2644:2673   */\n      tag_248\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2634:2673   */\n      swap5\n        /* \"#utility.yul\":2720:2722   */\n      0x20\n        /* \"#utility.yul\":2705:2723   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2692:2724   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2476:2730   */\n      jump\t// out\n        /* \"#utility.yul\":2735:2980   */\n    tag_20:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2846:2848   */\n      0x20\n        /* \"#utility.yul\":2834:2843   */\n      dup3\n        /* \"#utility.yul\":2825:2832   */\n      dup5\n        /* \"#utility.yul\":2821:2844   */\n      sub\n        /* \"#utility.yul\":2817:2849   */\n      slt\n        /* \"#utility.yul\":2814:2866   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":2862:2863   */\n      0x00\n        /* \"#utility.yul\":2859:2860   */\n      dup1\n        /* \"#utility.yul\":2852:2864   */\n      revert\n        /* \"#utility.yul\":2814:2866   */\n    tag_281:\n        /* \"#utility.yul\":2901:2910   */\n      dup2\n        /* \"#utility.yul\":2888:2911   */\n      calldataload\n        /* \"#utility.yul\":2920:2950   */\n      tag_152\n        /* \"#utility.yul\":2944:2949   */\n      dup2\n        /* \"#utility.yul\":2920:2950   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":2985:3234   */\n    tag_234:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3107:3109   */\n      0x20\n        /* \"#utility.yul\":3095:3104   */\n      dup3\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3082:3105   */\n      sub\n        /* \"#utility.yul\":3078:3110   */\n      slt\n        /* \"#utility.yul\":3075:3127   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3123:3124   */\n      0x00\n        /* \"#utility.yul\":3120:3121   */\n      dup1\n        /* \"#utility.yul\":3113:3125   */\n      revert\n        /* \"#utility.yul\":3075:3127   */\n    tag_285:\n        /* \"#utility.yul\":3155:3164   */\n      dup2\n        /* \"#utility.yul\":3149:3165   */\n      mload\n        /* \"#utility.yul\":3174:3204   */\n      tag_152\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3174:3204   */\n      tag_283\n      jump\t// in\n        /* \"#utility.yul\":3239:3419   */\n    tag_30:\n        /* \"#utility.yul\":3298:3304   */\n      0x00\n        /* \"#utility.yul\":3351:3353   */\n      0x20\n        /* \"#utility.yul\":3339:3348   */\n      dup3\n        /* \"#utility.yul\":3330:3337   */\n      dup5\n        /* \"#utility.yul\":3326:3349   */\n      sub\n        /* \"#utility.yul\":3322:3354   */\n      slt\n        /* \"#utility.yul\":3319:3371   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3367:3368   */\n      0x00\n        /* \"#utility.yul\":3364:3365   */\n      dup1\n        /* \"#utility.yul\":3357:3369   */\n      revert\n        /* \"#utility.yul\":3319:3371   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":3390:3413   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3239:3419   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3424:3681   */\n    tag_289:\n        /* \"#utility.yul\":3465:3468   */\n      0x00\n        /* \"#utility.yul\":3503:3508   */\n      dup2\n        /* \"#utility.yul\":3497:3509   */\n      mload\n        /* \"#utility.yul\":3530:3536   */\n      dup1\n        /* \"#utility.yul\":3525:3528   */\n      dup5\n        /* \"#utility.yul\":3518:3537   */\n      mstore\n        /* \"#utility.yul\":3546:3609   */\n      tag_291\n        /* \"#utility.yul\":3602:3608   */\n      dup2\n        /* \"#utility.yul\":3595:3599   */\n      0x20\n        /* \"#utility.yul\":3590:3593   */\n      dup7\n        /* \"#utility.yul\":3586:3600   */\n      add\n        /* \"#utility.yul\":3579:3583   */\n      0x20\n        /* \"#utility.yul\":3572:3577   */\n      dup7\n        /* \"#utility.yul\":3568:3584   */\n      add\n        /* \"#utility.yul\":3546:3609   */\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3663:3665   */\n      0x1f\n        /* \"#utility.yul\":3642:3657   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3638:3667   */\n      and\n        /* \"#utility.yul\":3629:3668   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3670:3674   */\n      0x20\n        /* \"#utility.yul\":3625:3675   */\n      add\n      swap3\n        /* \"#utility.yul\":3424:3681   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3686:4156   */\n    tag_156:\n        /* \"#utility.yul\":3865:3868   */\n      0x00\n        /* \"#utility.yul\":3903:3909   */\n      dup4\n        /* \"#utility.yul\":3897:3910   */\n      mload\n        /* \"#utility.yul\":3919:3972   */\n      tag_294\n        /* \"#utility.yul\":3965:3971   */\n      dup2\n        /* \"#utility.yul\":3960:3963   */\n      dup5\n        /* \"#utility.yul\":3953:3957   */\n      0x20\n        /* \"#utility.yul\":3945:3951   */\n      dup9\n        /* \"#utility.yul\":3941:3958   */\n      add\n        /* \"#utility.yul\":3919:3972   */\n      tag_292\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4035:4048   */\n      dup4\n      mload\n        /* \"#utility.yul\":3994:4010   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4057:4114   */\n      tag_295\n        /* \"#utility.yul\":4035:4048   */\n      dup2\n        /* \"#utility.yul\":3994:4010   */\n      dup4\n        /* \"#utility.yul\":4091:4095   */\n      0x20\n        /* \"#utility.yul\":4079:4096   */\n      dup9\n      add\n        /* \"#utility.yul\":4057:4114   */\n      tag_292\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4130:4150   */\n      add\n      swap5\n        /* \"#utility.yul\":3686:4156   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4857   */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4638:4653   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":4620:4654   */\n      dup3\n      mstore\n        /* \"#utility.yul\":4690:4705   */\n      dup5\n      and\n        /* \"#utility.yul\":4685:4687   */\n      0x20\n        /* \"#utility.yul\":4670:4688   */\n      dup3\n      add\n        /* \"#utility.yul\":4663:4706   */\n      mstore\n        /* \"#utility.yul\":4737:4739   */\n      0x40\n        /* \"#utility.yul\":4722:4740   */\n      dup2\n      add\n        /* \"#utility.yul\":4715:4749   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4785:4788   */\n      0x80\n        /* \"#utility.yul\":4780:4782   */\n      0x60\n        /* \"#utility.yul\":4765:4783   */\n      dup3\n      add\n        /* \"#utility.yul\":4758:4789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4563:4567   */\n      0x00\n      swap1\n        /* \"#utility.yul\":4806:4851   */\n      tag_298\n      swap1\n        /* \"#utility.yul\":4831:4850   */\n      dup4\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup5\n        /* \"#utility.yul\":4806:4851   */\n      tag_289\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4798:4851   */\n      swap7\n        /* \"#utility.yul\":4369:4857   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5273   */\n    tag_27:\n        /* \"#utility.yul\":5203:5205   */\n      0x20\n        /* \"#utility.yul\":5192:5201   */\n      dup2\n        /* \"#utility.yul\":5185:5206   */\n      mstore\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5223:5267   */\n      tag_152\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5252:5261   */\n      dup4\n        /* \"#utility.yul\":5248:5266   */\n      add\n        /* \"#utility.yul\":5240:5246   */\n      dup5\n        /* \"#utility.yul\":5223:5267   */\n      tag_289\n      jump\t// in\n        /* \"#utility.yul\":5278:5692   */\n    tag_199:\n        /* \"#utility.yul\":5480:5482   */\n      0x20\n        /* \"#utility.yul\":5462:5483   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5519:5521   */\n      0x32\n        /* \"#utility.yul\":5499:5517   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5492:5522   */\n      mstore\n        /* \"#utility.yul\":5558:5592   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":5553:5555   */\n      0x40\n        /* \"#utility.yul\":5538:5556   */\n      dup3\n      add\n        /* \"#utility.yul\":5531:5593   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":5624:5626   */\n      0x60\n        /* \"#utility.yul\":5609:5627   */\n      dup3\n      add\n        /* \"#utility.yul\":5602:5650   */\n      mstore\n        /* \"#utility.yul\":5682:5685   */\n      0x80\n        /* \"#utility.yul\":5667:5686   */\n      add\n      swap1\n        /* \"#utility.yul\":5278:5692   */\n      jump\t// out\n        /* \"#utility.yul\":9756:10169   */\n    tag_114:\n        /* \"#utility.yul\":9958:9960   */\n      0x20\n        /* \"#utility.yul\":9940:9961   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9997:9999   */\n      0x31\n        /* \"#utility.yul\":9977:9995   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9970:10000   */\n      mstore\n        /* \"#utility.yul\":10036:10070   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":10031:10033   */\n      0x40\n        /* \"#utility.yul\":10016:10034   */\n      dup3\n      add\n        /* \"#utility.yul\":10009:10071   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":10102:10104   */\n      0x60\n        /* \"#utility.yul\":10087:10105   */\n      dup3\n      add\n        /* \"#utility.yul\":10080:10127   */\n      mstore\n        /* \"#utility.yul\":10159:10162   */\n      0x80\n        /* \"#utility.yul\":10144:10163   */\n      add\n      swap1\n        /* \"#utility.yul\":9756:10169   */\n      jump\t// out\n        /* \"#utility.yul\":10356:10484   */\n    tag_187:\n        /* \"#utility.yul\":10396:10399   */\n      0x00\n        /* \"#utility.yul\":10427:10428   */\n      dup3\n        /* \"#utility.yul\":10423:10429   */\n      not\n        /* \"#utility.yul\":10420:10421   */\n      dup3\n        /* \"#utility.yul\":10417:10430   */\n      gt\n        /* \"#utility.yul\":10414:10453   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":10433:10451   */\n      tag_317\n      tag_318\n      jump\t// in\n    tag_317:\n      pop\n        /* \"#utility.yul\":10469:10478   */\n      add\n      swap1\n        /* \"#utility.yul\":10356:10484   */\n      jump\t// out\n        /* \"#utility.yul\":10489:10609   */\n    tag_208:\n        /* \"#utility.yul\":10529:10530   */\n      0x00\n        /* \"#utility.yul\":10555:10556   */\n      dup3\n        /* \"#utility.yul\":10545:10580   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":10560:10578   */\n      tag_321\n      tag_322\n      jump\t// in\n    tag_321:\n      pop\n        /* \"#utility.yul\":10594:10603   */\n      div\n      swap1\n        /* \"#utility.yul\":10489:10609   */\n      jump\t// out\n        /* \"#utility.yul\":10614:10739   */\n    tag_185:\n        /* \"#utility.yul\":10654:10658   */\n      0x00\n        /* \"#utility.yul\":10682:10683   */\n      dup3\n        /* \"#utility.yul\":10679:10680   */\n      dup3\n        /* \"#utility.yul\":10676:10684   */\n      lt\n        /* \"#utility.yul\":10673:10707   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":10687:10705   */\n      tag_325\n      tag_318\n      jump\t// in\n    tag_325:\n      pop\n        /* \"#utility.yul\":10724:10733   */\n      sub\n      swap1\n        /* \"#utility.yul\":10614:10739   */\n      jump\t// out\n        /* \"#utility.yul\":10744:11002   */\n    tag_292:\n        /* \"#utility.yul\":10816:10817   */\n      0x00\n        /* \"#utility.yul\":10826:10939   */\n    tag_327:\n        /* \"#utility.yul\":10840:10846   */\n      dup4\n        /* \"#utility.yul\":10837:10838   */\n      dup2\n        /* \"#utility.yul\":10834:10847   */\n      lt\n        /* \"#utility.yul\":10826:10939   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10916:10927   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":10910:10928   */\n      mload\n        /* \"#utility.yul\":10897:10908   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":10890:10929   */\n      mstore\n        /* \"#utility.yul\":10862:10864   */\n      0x20\n        /* \"#utility.yul\":10855:10865   */\n      add\n        /* \"#utility.yul\":10826:10939   */\n      jump(tag_327)\n    tag_329:\n        /* \"#utility.yul\":10957:10963   */\n      dup4\n        /* \"#utility.yul\":10954:10955   */\n      dup2\n        /* \"#utility.yul\":10951:10964   */\n      gt\n        /* \"#utility.yul\":10948:10996   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":10992:10993   */\n      0x00\n        /* \"#utility.yul\":10974:10990   */\n      swap2\n      add\n        /* \"#utility.yul\":10967:10994   */\n      mstore\n        /* \"#utility.yul\":10744:11002   */\n      jump\t// out\n        /* \"#utility.yul\":11007:11387   */\n    tag_82:\n        /* \"#utility.yul\":11086:11087   */\n      0x01\n        /* \"#utility.yul\":11082:11094   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11129:11141   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11150:11211   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":11204:11208   */\n      0x7f\n        /* \"#utility.yul\":11196:11202   */\n      dup3\n        /* \"#utility.yul\":11192:11209   */\n      and\n        /* \"#utility.yul\":11182:11209   */\n      swap2\n      pop\n        /* \"#utility.yul\":11150:11211   */\n    tag_332:\n        /* \"#utility.yul\":11257:11259   */\n      0x20\n        /* \"#utility.yul\":11249:11255   */\n      dup3\n        /* \"#utility.yul\":11246:11260   */\n      lt\n        /* \"#utility.yul\":11226:11244   */\n      dup2\n        /* \"#utility.yul\":11223:11261   */\n      eq\n        /* \"#utility.yul\":11220:11381   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":11303:11313   */\n      0x4e487b71\n        /* \"#utility.yul\":11298:11301   */\n      0xe0\n        /* \"#utility.yul\":11294:11314   */\n      shl\n        /* \"#utility.yul\":11291:11292   */\n      0x00\n        /* \"#utility.yul\":11284:11315   */\n      mstore\n        /* \"#utility.yul\":11338:11342   */\n      0x22\n        /* \"#utility.yul\":11335:11336   */\n      0x04\n        /* \"#utility.yul\":11328:11343   */\n      mstore\n        /* \"#utility.yul\":11366:11370   */\n      0x24\n        /* \"#utility.yul\":11363:11364   */\n      0x00\n        /* \"#utility.yul\":11356:11371   */\n      revert\n        /* \"#utility.yul\":11220:11381   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":11007:11387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11392:11527   */\n    tag_206:\n        /* \"#utility.yul\":11431:11434   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":11452:11469   */\n      dup3\n      eq\n        /* \"#utility.yul\":11449:11492   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":11472:11490   */\n      tag_336\n      tag_318\n      jump\t// in\n    tag_336:\n      pop\n        /* \"#utility.yul\":11519:11520   */\n      0x01\n        /* \"#utility.yul\":11508:11521   */\n      add\n      swap1\n        /* \"#utility.yul\":11392:11527   */\n      jump\t// out\n        /* \"#utility.yul\":11532:11644   */\n    tag_217:\n        /* \"#utility.yul\":11564:11565   */\n      0x00\n        /* \"#utility.yul\":11590:11591   */\n      dup3\n        /* \"#utility.yul\":11580:11615   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":11595:11613   */\n      tag_339\n      tag_322\n      jump\t// in\n    tag_339:\n      pop\n        /* \"#utility.yul\":11629:11638   */\n      mod\n      swap1\n        /* \"#utility.yul\":11532:11644   */\n      jump\t// out\n        /* \"#utility.yul\":11649:11776   */\n    tag_318:\n        /* \"#utility.yul\":11710:11720   */\n      0x4e487b71\n        /* \"#utility.yul\":11705:11708   */\n      0xe0\n        /* \"#utility.yul\":11701:11721   */\n      shl\n        /* \"#utility.yul\":11698:11699   */\n      0x00\n        /* \"#utility.yul\":11691:11722   */\n      mstore\n        /* \"#utility.yul\":11741:11745   */\n      0x11\n        /* \"#utility.yul\":11738:11739   */\n      0x04\n        /* \"#utility.yul\":11731:11746   */\n      mstore\n        /* \"#utility.yul\":11765:11769   */\n      0x24\n        /* \"#utility.yul\":11762:11763   */\n      0x00\n        /* \"#utility.yul\":11755:11770   */\n      revert\n        /* \"#utility.yul\":11781:11908   */\n    tag_322:\n        /* \"#utility.yul\":11842:11852   */\n      0x4e487b71\n        /* \"#utility.yul\":11837:11840   */\n      0xe0\n        /* \"#utility.yul\":11833:11853   */\n      shl\n        /* \"#utility.yul\":11830:11831   */\n      0x00\n        /* \"#utility.yul\":11823:11854   */\n      mstore\n        /* \"#utility.yul\":11873:11877   */\n      0x12\n        /* \"#utility.yul\":11870:11871   */\n      0x04\n        /* \"#utility.yul\":11863:11878   */\n      mstore\n        /* \"#utility.yul\":11897:11901   */\n      0x24\n        /* \"#utility.yul\":11894:11895   */\n      0x00\n        /* \"#utility.yul\":11887:11902   */\n      revert\n        /* \"#utility.yul\":11913:12040   */\n    tag_221:\n        /* \"#utility.yul\":11974:11984   */\n      0x4e487b71\n        /* \"#utility.yul\":11969:11972   */\n      0xe0\n        /* \"#utility.yul\":11965:11985   */\n      shl\n        /* \"#utility.yul\":11962:11963   */\n      0x00\n        /* \"#utility.yul\":11955:11986   */\n      mstore\n        /* \"#utility.yul\":12005:12009   */\n      0x32\n        /* \"#utility.yul\":12002:12003   */\n      0x04\n        /* \"#utility.yul\":11995:12010   */\n      mstore\n        /* \"#utility.yul\":12029:12033   */\n      0x24\n        /* \"#utility.yul\":12026:12027   */\n      0x00\n        /* \"#utility.yul\":12019:12034   */\n      revert\n        /* \"#utility.yul\":12045:12172   */\n    tag_211:\n        /* \"#utility.yul\":12106:12116   */\n      0x4e487b71\n        /* \"#utility.yul\":12101:12104   */\n      0xe0\n        /* \"#utility.yul\":12097:12117   */\n      shl\n        /* \"#utility.yul\":12094:12095   */\n      0x00\n        /* \"#utility.yul\":12087:12118   */\n      mstore\n        /* \"#utility.yul\":12137:12141   */\n      0x41\n        /* \"#utility.yul\":12134:12135   */\n      0x04\n        /* \"#utility.yul\":12127:12142   */\n      mstore\n        /* \"#utility.yul\":12161:12165   */\n      0x24\n        /* \"#utility.yul\":12158:12159   */\n      0x00\n        /* \"#utility.yul\":12151:12166   */\n      revert\n        /* \"#utility.yul\":12177:12308   */\n    tag_283:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":12251:12283   */\n      dup2\n      and\n        /* \"#utility.yul\":12241:12284   */\n      dup2\n      eq\n        /* \"#utility.yul\":12231:12302   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":12298:12299   */\n      0x00\n        /* \"#utility.yul\":12295:12296   */\n      dup1\n        /* \"#utility.yul\":12288:12300   */\n      revert\n        /* \"#utility.yul\":12231:12302   */\n    tag_345:\n        /* \"#utility.yul\":12177:12308   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122002d53f339d11cd4296aad602f8a82bf40bb03ed0d834c743ee8c0352913b302264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_939": {
									"entryPoint": null,
									"id": 939,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:1"
															},
															"nodeType": "YulIf",
															"src": "88:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "202:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "206:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "198:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "210:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:1"
															},
															"nodeType": "YulIf",
															"src": "221:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:1"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:1"
															},
															"nodeType": "YulIf",
															"src": "404:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:1"
															},
															"nodeType": "YulIf",
															"src": "566:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:1"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:1",
																"statements": []
															},
															"src": "647:133:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:1"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:1"
															},
															"nodeType": "YulIf",
															"src": "789:80:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:1",
														"type": ""
													}
												],
												"src": "14:885:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:1"
															},
															"nodeType": "YulIf",
															"src": "1032:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1150:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:18:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:1"
															},
															"nodeType": "YulIf",
															"src": "1169:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:1"
															},
															"nodeType": "YulIf",
															"src": "1342:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:1",
														"type": ""
													}
												],
												"src": "904:562:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1550:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1553:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:1"
															},
															"nodeType": "YulIf",
															"src": "1614:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1762:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1767:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1758:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1758:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1799:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1802:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1792:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1792:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1792:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1820:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1820:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:1"
															},
															"nodeType": "YulIf",
															"src": "1684:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:1",
														"type": ""
													}
												],
												"src": "1471:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1888:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1917:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1908:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1898:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1898:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1898:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1945:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1948:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1938:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1938:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1938:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1969:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1972:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1962:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1856:127:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14F1 CODESIZE SUB DUP1 PUSH3 0x14F1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x26C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x266 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 PUSH1 0x20 DUP5 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEC PUSH1 0x20 DUP6 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP6 PUSH2 0xD56 JUMP JUMPDEST SWAP4 POP PUSH2 0xE29 PUSH1 0x20 DUP7 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE73 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x11FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x11B8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1106 JUMPI PUSH2 0x1106 PUSH2 0x11CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x11B8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1162 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x119D PUSH2 0x11B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B3 JUMPI PUSH2 0x11B3 PUSH2 0x11CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xD5 EXTCODEHASH CALLER SWAP14 GT 0xCD TIMESTAMP SWAP7 0xAA 0xD6 MUL 0xF8 0xA8 0x2B DELEGATECALL SIGNEXTEND 0xB0 RETURNDATACOPY 0xD0 0xD8 CALLVALUE 0xC7 NUMBER 0xEE DUP13 SUB MSTORE SWAP2 EXTCODESIZE ADDRESS 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "23541:13006:0:-:0;;;24303:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24369:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;24392:17:0;;;;:7;;:17;;;;;:::i;:::-;;24303:113;;23541:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23541:13006:0;;;-1:-1:-1;23541:13006:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:1;68:5;121:3;114:4;106:6;102:17;98:27;88:55;;139:1;136;129:12;88:55;162:13;;-1:-1:-1;;;;;224:10:1;;;221:36;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:1;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:72;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:53;;;615:1;612;605:12;566:53;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:80;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:80;887:6;14:885;-1:-1:-1;;;;;;14:885:1:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:52;;;1080:1;1077;1070:12;1032:52;1107:16;;-1:-1:-1;;;;;1172:14:1;;;1169:34;;;1199:1;1196;1189:12;1169:34;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:36;;;1374:1;1371;1364:12;1342:36;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;904:562;;;;;:::o;1471:380::-;1550:1;1546:12;;;;1593;;;1614:61;;1668:4;1660:6;1656:17;1646:27;;1614:61;1721:2;1713:6;1710:14;1690:18;1687:38;1684:161;;;1767:10;1762:3;1758:20;1755:1;1748:31;1802:4;1799:1;1792:15;1830:4;1827:1;1820:15;1684:161;;1471:380;;;:::o;1856:127::-;1917:10;1912:3;1908:20;1905:1;1898:31;1948:4;1945:1;1938:15;1972:4;1969:1;1962:15;1856:127;23541:13006:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1601": {
									"entryPoint": 1860,
									"id": 1601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_1093": {
									"entryPoint": null,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1695": {
									"entryPoint": 3145,
									"id": 1695,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1315": {
									"entryPoint": null,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1356": {
									"entryPoint": 1970,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_1297": {
									"entryPoint": 2840,
									"id": 1297,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1633": {
									"entryPoint": 2633,
									"id": 1633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1577": {
									"entryPoint": 2217,
									"id": 1577,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1136": {
									"entryPoint": 934,
									"id": 1136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_994": {
									"entryPoint": 1407,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1157": {
									"entryPoint": 780,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1032": {
									"entryPoint": 634,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1022": {
									"entryPoint": 1288,
									"id": 1022,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1238": {
									"entryPoint": 1261,
									"id": 1238,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1268": {
									"entryPoint": 1572,
									"id": 1268,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1174": {
									"entryPoint": 1557,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_970": {
									"entryPoint": 552,
									"id": 970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1042": {
									"entryPoint": 1542,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_157": {
									"entryPoint": 2891,
									"id": 157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1084": {
									"entryPoint": 1628,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1219": {
									"entryPoint": 1212,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 3985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4076,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4386,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4580,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 4624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12310:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:1"
															},
															"nodeType": "YulIf",
															"src": "272:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:1",
														"type": ""
													}
												],
												"src": "192:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:1"
															},
															"nodeType": "YulIf",
															"src": "480:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "633:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:1",
														"type": ""
													}
												],
												"src": "383:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "752:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "798:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "807:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "800:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "800:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "800:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "773:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "782:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "769:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "765:32:1"
															},
															"nodeType": "YulIf",
															"src": "762:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "823:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "852:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "833:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "833:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "871:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "900:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "881:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "871:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "928:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "955:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "966:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "938:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "928:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "702:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "713:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "725:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "733:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "741:6:1",
														"type": ""
													}
												],
												"src": "648:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1111:1008:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1158:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1170:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1160:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1160:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1160:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1132:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1141:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1128:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:33:1"
															},
															"nodeType": "YulIf",
															"src": "1121:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1183:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1193:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1231:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1275:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1260:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1241:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1241:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1288:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1298:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1298:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1339:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1353:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1343:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1394:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1404:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1398:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1437:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1434:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1434:14:1"
															},
															"nodeType": "YulIf",
															"src": "1431:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1474:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1499:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1478:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1554:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1566:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1556:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1556:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1556:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1537:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1529:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1525:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1525:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:35:1"
															},
															"nodeType": "YulIf",
															"src": "1515:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1579:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1602:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1589:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1583:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1628:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1630:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1630:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1630:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1620:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1624:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1617:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:10:1"
															},
															"nodeType": "YulIf",
															"src": "1614:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1659:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1669:7:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1663:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1705:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1717:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1739:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1763:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1767:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1759:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1759:13:1"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1774:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1755:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1755:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1779:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1751:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:31:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1784:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1735:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1721:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1847:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1849:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1806:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1818:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1803:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1838:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1823:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1823:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1800:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:46:1"
															},
															"nodeType": "YulIf",
															"src": "1797:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1889:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1878:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1878:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1924:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1973:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1982:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1985:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1975:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1975:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1975:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1950:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1954:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1946:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1946:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1959:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1942:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1964:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:33:1"
															},
															"nodeType": "YulIf",
															"src": "1936:53:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2015:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2011:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2032:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2036:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:11:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2041:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1998:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1998:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2076:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2064:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2064:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2081:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2060:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2053:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2053:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2097:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2107:6:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2097:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1064:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1076:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1084:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1092:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1100:6:1",
														"type": ""
													}
												],
												"src": "981:1138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2208:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2254:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2263:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2266:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2256:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2256:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2229:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2225:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:1"
															},
															"nodeType": "YulIf",
															"src": "2218:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2279:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2308:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2289:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2289:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2368:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2353:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2340:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2340:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2331:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2425:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2434:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2437:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2427:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2427:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2427:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2394:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2415:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2408:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2401:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2401:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2391:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2391:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2384:40:1"
															},
															"nodeType": "YulIf",
															"src": "2381:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2460:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2166:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2177:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2197:6:1",
														"type": ""
													}
												],
												"src": "2124:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2563:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2609:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2618:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2621:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2584:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2593:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2580:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2605:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:32:1"
															},
															"nodeType": "YulIf",
															"src": "2573:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2634:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2663:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2644:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2634:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2682:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2720:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2705:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2692:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2692:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2521:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2532:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2544:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2552:6:1",
														"type": ""
													}
												],
												"src": "2476:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2825:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2834:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2821:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2821:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:32:1"
															},
															"nodeType": "YulIf",
															"src": "2814:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2901:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2879:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2944:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2920:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2920:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2920:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2969:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2959:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2770:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2781:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2793:6:1",
														"type": ""
													}
												],
												"src": "2735:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3065:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3111:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3120:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3123:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3113:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3113:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3113:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3095:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3082:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3107:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:32:1"
															},
															"nodeType": "YulIf",
															"src": "3075:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3136:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3155:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3149:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3140:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3174:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3174:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3174:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3213:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3223:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3213:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3031:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3042:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3054:6:1",
														"type": ""
													}
												],
												"src": "2985:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3355:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3364:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3367:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3357:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3357:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3357:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3330:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3339:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3326:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3326:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:32:1"
															},
															"nodeType": "YulIf",
															"src": "3319:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3380:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3403:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3390:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3275:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3286:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3298:6:1",
														"type": ""
													}
												],
												"src": "3239:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3473:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3483:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3503:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3487:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3525:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3530:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3579:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3568:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3590:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3595:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3586:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3546:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3546:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3546:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3618:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3633:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3646:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3642:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3642:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3663:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3659:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3659:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3638:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3670:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3625:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3625:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3618:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3450:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3457:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3465:3:1",
														"type": ""
													}
												],
												"src": "3424:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3873:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3883:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3897:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3887:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3945:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3953:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3941:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3960:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3965:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3919:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3981:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3998:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3994:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "3985:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4041:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4035:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4035:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4023:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4083:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4091:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4105:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4057:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4134:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4141:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4130:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4123:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3846:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3865:3:1",
														"type": ""
													}
												],
												"src": "3686:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4284:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4295:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4280:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4272:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4314:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4329:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4345:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4350:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4341:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4341:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4354:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4337:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4337:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4325:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4307:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4231:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:1",
														"type": ""
													}
												],
												"src": "4161:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4572:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4582:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4600:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4596:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4596:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4592:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4592:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4586:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4642:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4650:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4638:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4620:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4620:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4620:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4685:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4670:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4694:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4663:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4663:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4663:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4726:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4737:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4722:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4715:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4715:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4769:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4780:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4758:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4758:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4835:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4846:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4831:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4806:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4517:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4528:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4536:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4544:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4552:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4563:4:1",
														"type": ""
													}
												],
												"src": "4369:488:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4967:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4979:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4967:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5034:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5020:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5020:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5002:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5002:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4926:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4937:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4948:4:1",
														"type": ""
													}
												],
												"src": "4862:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5192:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5203:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5215:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5240:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5223:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5223:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5215:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5144:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5155:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5166:4:1",
														"type": ""
													}
												],
												"src": "5054:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5452:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5469:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5480:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5462:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5462:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5462:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5499:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5519:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5492:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5553:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5538:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5538:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5558:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5531:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5531:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5613:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5624:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5609:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5609:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5629:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5602:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5602:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5602:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5659:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5671:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5667:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5659:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5429:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5443:4:1",
														"type": ""
													}
												],
												"src": "5278:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5871:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5888:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5899:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5881:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5881:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5938:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5911:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5911:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5961:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5972:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5957:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5977:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5950:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6043:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6048:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6021:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6021:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6064:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6087:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6072:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5848:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5862:4:1",
														"type": ""
													}
												],
												"src": "5697:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6276:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6293:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6304:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6286:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6338:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6323:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6343:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6316:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6316:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6316:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6366:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6377:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6362:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6382:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6355:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6355:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6355:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6419:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6431:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6442:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6427:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6419:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6253:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6267:4:1",
														"type": ""
													}
												],
												"src": "6102:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6630:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6658:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6640:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6640:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6681:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6692:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6677:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6697:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6670:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6720:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6731:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6716:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6736:34:1",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6709:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6709:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6802:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6787:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6807:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6780:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6780:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6780:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6831:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6843:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6854:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6839:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6831:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6607:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6621:4:1",
														"type": ""
													}
												],
												"src": "6456:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7043:246:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7071:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7053:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7105:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7090:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7110:2:1",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7083:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7083:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7133:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7144:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7129:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7149:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7122:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7204:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7215:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7200:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7200:18:1"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7220:26:1",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7193:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7193:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7256:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7268:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7264:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7264:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7256:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7020:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7034:4:1",
														"type": ""
													}
												],
												"src": "6869:420:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7468:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7530:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7515:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7535:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7508:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7569:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7574:34:1",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7547:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7629:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7640:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7625:18:1"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7645:12:1",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7618:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7667:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7690:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7675:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7675:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7667:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7445:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7459:4:1",
														"type": ""
													}
												],
												"src": "7294:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7896:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7907:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7889:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7946:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7980:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7965:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7985:34:1",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7958:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7958:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8040:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8051:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8036:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8036:18:1"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8056:11:1",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8029:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8029:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8077:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8089:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8100:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8085:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8085:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8077:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7856:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7870:4:1",
														"type": ""
													}
												],
												"src": "7705:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8289:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8306:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8317:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8299:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8299:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8340:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8351:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8336:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8356:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8329:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8329:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8390:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8375:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8395:34:1",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8368:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8368:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8461:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8446:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8466:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8439:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8439:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8490:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8502:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8513:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8498:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8498:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8490:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8266:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8280:4:1",
														"type": ""
													}
												],
												"src": "8115:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8702:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8712:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8749:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8769:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8742:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8742:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8803:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8788:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8808:34:1",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8781:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8781:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8863:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8874:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8859:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8859:18:1"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8879:11:1",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8852:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8852:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8900:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8912:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8923:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8908:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8908:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8900:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8679:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8693:4:1",
														"type": ""
													}
												],
												"src": "8528:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9112:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9140:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9122:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9122:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9163:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9174:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9159:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9159:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9152:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9152:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9213:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9198:18:1"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9218:34:1",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9191:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9284:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9269:18:1"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9289:17:1",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9262:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9262:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9316:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9328:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9339:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9324:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9316:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9089:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9103:4:1",
														"type": ""
													}
												],
												"src": "8938:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9528:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9545:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9579:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9590:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9595:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9568:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9629:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9614:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9614:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9634:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9607:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9607:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9607:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9689:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9700:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9685:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9705:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9678:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9718:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9730:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9726:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9726:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9718:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9505:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9519:4:1",
														"type": ""
													}
												],
												"src": "9354:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9930:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9958:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9940:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9940:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9992:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9977:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9997:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9970:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10020:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10031:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10036:34:1",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10091:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10102:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10087:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:18:1"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10107:19:1",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10080:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10080:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10080:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10136:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10148:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10144:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10144:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10136:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9907:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9921:4:1",
														"type": ""
													}
												],
												"src": "9756:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10327:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10338:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10244:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10255:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10266:4:1",
														"type": ""
													}
												],
												"src": "10174:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10404:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10431:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10433:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10433:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10433:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10420:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10427:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10423:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10423:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10417:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:13:1"
															},
															"nodeType": "YulIf",
															"src": "10414:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10462:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10473:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10476:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10469:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10462:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10387:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10390:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10396:3:1",
														"type": ""
													}
												],
												"src": "10356:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10535:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10558:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10560:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10560:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10560:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10555:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10548:9:1"
															},
															"nodeType": "YulIf",
															"src": "10545:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10589:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10598:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10601:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10594:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10589:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10520:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10523:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10529:1:1",
														"type": ""
													}
												],
												"src": "10489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10663:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10685:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10687:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10687:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10687:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10679:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10682:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10676:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10676:8:1"
															},
															"nodeType": "YulIf",
															"src": "10673:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10716:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10728:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10731:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10716:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10645:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10648:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10654:4:1",
														"type": ""
													}
												],
												"src": "10614:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10797:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10807:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10816:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10811:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10876:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10901:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10906:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10897:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10897:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10920:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10925:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10916:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10916:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10910:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10910:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10890:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10890:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10837:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10840:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10834:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10848:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10850:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10859:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10855:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10855:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10850:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10830:3:1",
																"statements": []
															},
															"src": "10826:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10965:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10978:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10983:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10974:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10974:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10992:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10967:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10967:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10967:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10954:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10957:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10951:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10951:13:1"
															},
															"nodeType": "YulIf",
															"src": "10948:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10775:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10780:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10785:6:1",
														"type": ""
													}
												],
												"src": "10744:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11062:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11072:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11086:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11089:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11082:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11072:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11103:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11133:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11139:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11129:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11107:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11180:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11182:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11196:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11204:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11192:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11192:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11182:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11160:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11153:26:1"
															},
															"nodeType": "YulIf",
															"src": "11150:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11270:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11291:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11298:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11303:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11294:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11294:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11284:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11284:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11284:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11335:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11338:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11328:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11328:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11328:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11363:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11366:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11356:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11356:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11356:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11226:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11249:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11257:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11246:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11246:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11223:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:38:1"
															},
															"nodeType": "YulIf",
															"src": "11220:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11042:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11051:6:1",
														"type": ""
													}
												],
												"src": "11007:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11439:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11470:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11472:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11472:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11472:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11455:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11466:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11462:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11462:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11452:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11452:17:1"
															},
															"nodeType": "YulIf",
															"src": "11449:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11501:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11512:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11501:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11421:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11431:3:1",
														"type": ""
													}
												],
												"src": "11392:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11570:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11593:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11595:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11595:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11595:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11590:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11583:9:1"
															},
															"nodeType": "YulIf",
															"src": "11580:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11624:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11633:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11636:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11624:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11555:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11558:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11564:1:1",
														"type": ""
													}
												],
												"src": "11532:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11681:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11698:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11705:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11710:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11701:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11691:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11691:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11691:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11738:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11741:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11731:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11731:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11731:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11762:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11765:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11755:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11649:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11813:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11837:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11842:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11823:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11823:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11823:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11870:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11873:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11863:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11863:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11863:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11894:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11897:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11887:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11887:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11781:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11945:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11962:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11969:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11974:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11965:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11955:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12002:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12005:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12029:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12019:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11913:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12077:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12094:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12101:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12106:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12097:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12087:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12137:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12127:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12127:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12161:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12151:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12045:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12221:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12286:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12295:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12298:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12288:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12288:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12288:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12244:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12255:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12266:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12271:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12262:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12262:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12251:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12251:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12241:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12241:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12234:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12234:51:1"
															},
															"nodeType": "YulIf",
															"src": "12231:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12210:5:1",
														"type": ""
													}
												],
												"src": "12177:131:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xF14 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xD72 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF78 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x114E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x114E JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1189 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x10F7 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x110B JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x11A4 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10DF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11E4 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x10F7 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD4 SWAP2 DUP2 ADD SWAP1 PUSH2 0xF5B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD31 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xD05 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103C JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA9 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB7 PUSH1 0x20 DUP5 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDE DUP5 PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH2 0xDEC PUSH1 0x20 DUP6 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1B DUP6 PUSH2 0xD56 JUMP JUMPDEST SWAP4 POP PUSH2 0xE29 PUSH1 0x20 DUP7 ADD PUSH2 0xD56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xE73 JUMPI PUSH2 0xE73 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xE9B JUMPI PUSH2 0xE9B PUSH2 0x11FA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xEB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF4 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF30 DUP4 PUSH2 0xD56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xFA9 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0xFCF DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0xFE3 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1122 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x101F SWAP1 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF91 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F2 JUMPI PUSH2 0x10F2 PUSH2 0x11B8 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1106 JUMPI PUSH2 0x1106 PUSH2 0x11CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111D PUSH2 0x11B8 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x113D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1125 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1162 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x119D JUMPI PUSH2 0x119D PUSH2 0x11B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11B3 JUMPI PUSH2 0x11B3 PUSH2 0x11CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xD5 EXTCODEHASH CALLER SWAP14 GT 0xCD TIMESTAMP SWAP7 0xAA 0xD6 MUL 0xF8 0xA8 0x2B DELEGATECALL SIGNEXTEND 0xB0 RETURNDATACOPY 0xD0 0xD8 CALLVALUE 0xC7 NUMBER 0xEE DUP13 SUB MSTORE SWAP2 EXTCODESIZE ADDRESS 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "23541:13006:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24483:300;;;;;;:::i;:::-;;:::i;:::-;;;5027:14:1;;5020:22;5002:41;;4990:2;4975:18;24483:300:0;;;;;;;;25401:98;;;:::i;:::-;;;;;;;:::i;26912:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4325:32:1;;;4307:51;;4295:2;4280:18;26912:217:0;4161:203:1;26450:401:0;;;;;;:::i;:::-;;:::i;:::-;;27639:330;;;;;;:::i;:::-;;:::i;28035:179::-;;;;;;:::i;:::-;;:::i;25104:235::-;;;;;;:::i;:::-;;:::i;24842:205::-;;;;;;:::i;:::-;;:::i;:::-;;;10320:25:1;;;10308:2;10293:18;24842:205:0;10174:177:1;25563:102:0;;;:::i;27196:153::-;;;;;;:::i;:::-;;:::i;28280:320::-;;;;;;:::i;:::-;;:::i;25731:329::-;;;;;;:::i;:::-;;:::i;27415:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;27535:25:0;;;27512:4;27535:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;27415:162;24483:300;24585:4;-1:-1:-1;;;;;;24620:40:0;;-1:-1:-1;;;24620:40:0;;:104;;-1:-1:-1;;;;;;;24676:48:0;;-1:-1:-1;;;24676:48:0;24620:104;:156;;;-1:-1:-1;;;;;;;;;;17591:40:0;;;24740:36;24601:175;24483:300;-1:-1:-1;;24483:300:0:o;25401:98::-;25455:13;25487:5;25480:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25401:98;:::o;26912:217::-;26988:7;30160:16;;;:7;:16;;;;;;-1:-1:-1;;;;;30160:16:0;27007:73;;;;-1:-1:-1;;;27007:73:0;;8317:2:1;27007:73:0;;;8299:21:1;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:1;;;8439:42;8498:19;;27007:73:0;;;;;;;;;-1:-1:-1;27098:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;27098:24:0;;26912:217::o;26450:401::-;26530:13;26546:23;26561:7;26546:14;:23::i;:::-;26530:39;;26593:5;-1:-1:-1;;;;;26587:11:0;:2;-1:-1:-1;;;;;26587:11:0;;;26579:57;;;;-1:-1:-1;;;26579:57:0;;9556:2:1;26579:57:0;;;9538:21:1;9595:2;9575:18;;;9568:30;9634:34;9614:18;;;9607:62;-1:-1:-1;;;9685:18:1;;;9678:31;9726:19;;26579:57:0;9354:397:1;26579:57:0;4245:10;-1:-1:-1;;;;;26668:21:0;;;;:62;;-1:-1:-1;26693:37:0;26710:5;4245:10;27415:162;:::i;26693:37::-;26647:165;;;;-1:-1:-1;;;26647:165:0;;7071:2:1;26647:165:0;;;7053:21:1;7110:2;7090:18;;;7083:30;7149:34;7129:18;;;7122:62;7220:26;7200:18;;;7193:54;7264:19;;26647:165:0;6869:420:1;26647:165:0;26823:21;26832:2;26836:7;26823:8;:21::i;:::-;26520:331;26450:401;;:::o;27639:330::-;27828:41;4245:10;27861:7;27828:18;:41::i;:::-;27820:103;;;;-1:-1:-1;;;27820:103:0;;;;;;;:::i;:::-;27934:28;27944:4;27950:2;27954:7;27934:9;:28::i;28035:179::-;28168:39;28185:4;28191:2;28195:7;28168:39;;;;;;;;;;;;:16;:39::i;25104:235::-;25176:7;25211:16;;;:7;:16;;;;;;-1:-1:-1;;;;;25211:16:0;25245:19;25237:73;;;;-1:-1:-1;;;25237:73:0;;7907:2:1;25237:73:0;;;7889:21:1;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:1;;;8029:39;8085:19;;25237:73:0;7705:405:1;24842:205:0;24914:7;-1:-1:-1;;;;;24941:19:0;;24933:74;;;;-1:-1:-1;;;24933:74:0;;7496:2:1;24933:74:0;;;7478:21:1;7535:2;7515:18;;;7508:30;7574:34;7554:18;;;7547:62;-1:-1:-1;;;7625:18:1;;;7618:40;7675:19;;24933:74:0;7294:406:1;24933:74:0;-1:-1:-1;;;;;;25024:16:0;;;;;:9;:16;;;;;;;24842:205::o;25563:102::-;25619:13;25651:7;25644:14;;;;;:::i;27196:153::-;27290:52;4245:10;27323:8;27333;27290:18;:52::i;:::-;27196:153;;:::o;28280:320::-;28449:41;4245:10;28482:7;28449:18;:41::i;:::-;28441:103;;;;-1:-1:-1;;;28441:103:0;;;;;;;:::i;:::-;28554:39;28568:4;28574:2;28578:7;28587:5;28554:13;:39::i;:::-;28280:320;;;;:::o;25731:329::-;30137:4;30160:16;;;:7;:16;;;;;;25804:13;;-1:-1:-1;;;;;30160:16:0;25829:76;;;;-1:-1:-1;;;25829:76:0;;9140:2:1;25829:76:0;;;9122:21:1;9179:2;9159:18;;;9152:30;9218:34;9198:18;;;9191:62;-1:-1:-1;;;9269:18:1;;;9262:45;9324:19;;25829:76:0;8938:411:1;25829:76:0;25916:21;25940:10;26377:9;;;;;;;;;-1:-1:-1;26377:9:0;;;26301:92;25940:10;25916:34;;25991:1;25973:7;25967:21;:25;:86;;;;;;;;;;;;;;;;;26019:7;26028:18;:7;:16;:18::i;:::-;26002:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25967:86;25960:93;25731:329;-1:-1:-1;;;25731:329:0:o;33923:171::-;33997:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;33997:29:0;-1:-1:-1;;;;;33997:29:0;;;;;;;;:24;;34050:23;33997:24;34050:14;:23::i;:::-;-1:-1:-1;;;;;34041:46:0;;;;;;;;;;;33923:171;;:::o;30355:344::-;30448:4;30160:16;;;:7;:16;;;;;;-1:-1:-1;;;;;30160:16:0;30464:73;;;;-1:-1:-1;;;30464:73:0;;6658:2:1;30464:73:0;;;6640:21:1;6697:2;6677:18;;;6670:30;6736:34;6716:18;;;6709:62;-1:-1:-1;;;6787:18:1;;;6780:42;6839:19;;30464:73:0;6456:408:1;30464:73:0;30547:13;30563:23;30578:7;30563:14;:23::i;:::-;30547:39;;30615:5;-1:-1:-1;;;;;30604:16:0;:7;-1:-1:-1;;;;;30604:16:0;;:51;;;;30648:7;-1:-1:-1;;;;;30624:31:0;:20;30636:7;30624:11;:20::i;:::-;-1:-1:-1;;;;;30624:31:0;;30604:51;:87;;;-1:-1:-1;;;;;;27535:25:0;;;27512:4;27535:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;30659:32;30596:96;30355:344;-1:-1:-1;;;;30355:344:0:o;33252:560::-;33406:4;-1:-1:-1;;;;;33379:31:0;:23;33394:7;33379:14;:23::i;:::-;-1:-1:-1;;;;;33379:31:0;;33371:85;;;;-1:-1:-1;;;33371:85:0;;8730:2:1;33371:85:0;;;8712:21:1;8769:2;8749:18;;;8742:30;8808:34;8788:18;;;8781:62;-1:-1:-1;;;8859:18:1;;;8852:39;8908:19;;33371:85:0;8528:405:1;33371:85:0;-1:-1:-1;;;;;33474:16:0;;33466:65;;;;-1:-1:-1;;;33466:65:0;;5899:2:1;33466:65:0;;;5881:21:1;5938:2;5918:18;;;5911:30;5977:34;5957:18;;;5950:62;-1:-1:-1;;;6028:18:1;;;6021:34;6072:19;;33466:65:0;5697:400:1;33466:65:0;33643:29;33660:1;33664:7;33643:8;:29::i;:::-;-1:-1:-1;;;;;33683:15:0;;;;;;:9;:15;;;;;:20;;33702:1;;33683:15;:20;;33702:1;;33683:20;:::i;:::-;;;;-1:-1:-1;;;;;;;33713:13:0;;;;;;:9;:13;;;;;:18;;33730:1;;33713:13;:18;;33730:1;;33713:18;:::i;:::-;;;;-1:-1:-1;;33741:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;33741:21:0;-1:-1:-1;;;;;33741:21:0;;;;;;;;;33778:27;;33741:16;;33778:27;;;;;;;33252:560;;;:::o;34229:307::-;34379:8;-1:-1:-1;;;;;34370:17:0;:5;-1:-1:-1;;;;;34370:17:0;;;34362:55;;;;-1:-1:-1;;;34362:55:0;;6304:2:1;34362:55:0;;;6286:21:1;6343:2;6323:18;;;6316:30;6382:27;6362:18;;;6355:55;6427:18;;34362:55:0;6102:349:1;34362:55:0;-1:-1:-1;;;;;34427:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;34427:46:0;;;;;;;;;;34488:41;;5002::1;;;34488::0;;4975:18:1;34488:41:0;;;;;;;34229:307;;;:::o;29462:::-;29613:28;29623:4;29629:2;29633:7;29613:9;:28::i;:::-;29659:48;29682:4;29688:2;29692:7;29701:5;29659:22;:48::i;:::-;29651:111;;;;-1:-1:-1;;;29651:111:0;;;;;;;:::i;1800:703::-;1856:13;2073:10;2069:51;;-1:-1:-1;;2099:10:0;;;;;;;;;;;;-1:-1:-1;;;2099:10:0;;;;;1800:703::o;2069:51::-;2144:5;2129:12;2183:75;2190:9;;2183:75;;2215:8;;;;:::i;:::-;;-1:-1:-1;2237:10:0;;-1:-1:-1;2245:2:0;2237:10;;:::i;:::-;;;2183:75;;;2267:19;2299:6;2289:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2289:17:0;;2267:39;;2316:150;2323:10;;2316:150;;2349:11;2359:1;2349:11;;:::i;:::-;;-1:-1:-1;2417:10:0;2425:2;2417:5;:10;:::i;:::-;2404:24;;:2;:24;:::i;:::-;2391:39;;2374:6;2381;2374:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;2374:56:0;;;;;;;;-1:-1:-1;2444:11:0;2453:2;2444:11;;:::i;:::-;;;2316:150;;35089:778;35239:4;-1:-1:-1;;;;;35259:13:0;;7931:20;7977:8;35255:606;;35294:72;;-1:-1:-1;;;35294:72:0;;-1:-1:-1;;;;;35294:36:0;;;;;:72;;4245:10;;35345:4;;35351:7;;35360:5;;35294:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35294:72:0;;;;;;;;-1:-1:-1;;35294:72:0;;;;;;;;;;;;:::i;:::-;;;35290:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35533:13:0;;35529:266;;35575:60;;-1:-1:-1;;;35575:60:0;;;;;;;:::i;35529:266::-;35747:6;35741:13;35732:6;35728:2;35724:15;35717:38;35290:519;-1:-1:-1;;;;;;35416:51:0;-1:-1:-1;;;35416:51:0;;-1:-1:-1;35409:58:0;;35255:606;-1:-1:-1;35846:4:0;35089:778;;;;;;:::o;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:1138::-;1076:6;1084;1092;1100;1153:3;1141:9;1132:7;1128:23;1124:33;1121:53;;;1170:1;1167;1160:12;1121:53;1193:29;1212:9;1193:29;:::i;:::-;1183:39;;1241:38;1275:2;1264:9;1260:18;1241:38;:::i;:::-;1231:48;;1326:2;1315:9;1311:18;1298:32;1288:42;;1381:2;1370:9;1366:18;1353:32;1404:18;1445:2;1437:6;1434:14;1431:34;;;1461:1;1458;1451:12;1431:34;1499:6;1488:9;1484:22;1474:32;;1544:7;1537:4;1533:2;1529:13;1525:27;1515:55;;1566:1;1563;1556:12;1515:55;1602:2;1589:16;1624:2;1620;1617:10;1614:36;;;1630:18;;:::i;:::-;1705:2;1699:9;1673:2;1759:13;;-1:-1:-1;;1755:22:1;;;1779:2;1751:31;1747:40;1735:53;;;1803:18;;;1823:22;;;1800:46;1797:72;;;1849:18;;:::i;:::-;1889:10;1885:2;1878:22;1924:2;1916:6;1909:18;1964:7;1959:2;1954;1950;1946:11;1942:20;1939:33;1936:53;;;1985:1;1982;1975:12;1936:53;2041:2;2036;2032;2028:11;2023:2;2015:6;2011:15;1998:46;2086:1;2081:2;2076;2068:6;2064:15;2060:24;2053:35;2107:6;2097:16;;;;;;;981:1138;;;;;;;:::o;2124:347::-;2189:6;2197;2250:2;2238:9;2229:7;2225:23;2221:32;2218:52;;;2266:1;2263;2256:12;2218:52;2289:29;2308:9;2289:29;:::i;:::-;2279:39;;2368:2;2357:9;2353:18;2340:32;2415:5;2408:13;2401:21;2394:5;2391:32;2381:60;;2437:1;2434;2427:12;2381:60;2460:5;2450:15;;;2124:347;;;;;:::o;2476:254::-;2544:6;2552;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;:::-;2634:39;2720:2;2705:18;;;;2692:32;;-1:-1:-1;;;2476:254:1:o;2735:245::-;2793:6;2846:2;2834:9;2825:7;2821:23;2817:32;2814:52;;;2862:1;2859;2852:12;2814:52;2901:9;2888:23;2920:30;2944:5;2920:30;:::i;2985:249::-;3054:6;3107:2;3095:9;3086:7;3082:23;3078:32;3075:52;;;3123:1;3120;3113:12;3075:52;3155:9;3149:16;3174:30;3198:5;3174:30;:::i;3239:180::-;3298:6;3351:2;3339:9;3330:7;3326:23;3322:32;3319:52;;;3367:1;3364;3357:12;3319:52;-1:-1:-1;3390:23:1;;3239:180;-1:-1:-1;3239:180:1:o;3424:257::-;3465:3;3503:5;3497:12;3530:6;3525:3;3518:19;3546:63;3602:6;3595:4;3590:3;3586:14;3579:4;3572:5;3568:16;3546:63;:::i;:::-;3663:2;3642:15;-1:-1:-1;;3638:29:1;3629:39;;;;3670:4;3625:50;;3424:257;-1:-1:-1;;3424:257:1:o;3686:470::-;3865:3;3903:6;3897:13;3919:53;3965:6;3960:3;3953:4;3945:6;3941:17;3919:53;:::i;:::-;4035:13;;3994:16;;;;4057:57;4035:13;3994:16;4091:4;4079:17;;4057:57;:::i;:::-;4130:20;;3686:470;-1:-1:-1;;;;3686:470:1:o;4369:488::-;-1:-1:-1;;;;;4638:15:1;;;4620:34;;4690:15;;4685:2;4670:18;;4663:43;4737:2;4722:18;;4715:34;;;4785:3;4780:2;4765:18;;4758:31;;;4563:4;;4806:45;;4831:19;;4823:6;4806:45;:::i;:::-;4798:53;4369:488;-1:-1:-1;;;;;;4369:488:1:o;5054:219::-;5203:2;5192:9;5185:21;5166:4;5223:44;5263:2;5252:9;5248:18;5240:6;5223:44;:::i;5278:414::-;5480:2;5462:21;;;5519:2;5499:18;;;5492:30;5558:34;5553:2;5538:18;;5531:62;-1:-1:-1;;;5624:2:1;5609:18;;5602:48;5682:3;5667:19;;5278:414::o;9756:413::-;9958:2;9940:21;;;9997:2;9977:18;;;9970:30;10036:34;10031:2;10016:18;;10009:62;-1:-1:-1;;;10102:2:1;10087:18;;10080:47;10159:3;10144:19;;9756:413::o;10356:128::-;10396:3;10427:1;10423:6;10420:1;10417:13;10414:39;;;10433:18;;:::i;:::-;-1:-1:-1;10469:9:1;;10356:128::o;10489:120::-;10529:1;10555;10545:35;;10560:18;;:::i;:::-;-1:-1:-1;10594:9:1;;10489:120::o;10614:125::-;10654:4;10682:1;10679;10676:8;10673:34;;;10687:18;;:::i;:::-;-1:-1:-1;10724:9:1;;10614:125::o;10744:258::-;10816:1;10826:113;10840:6;10837:1;10834:13;10826:113;;;10916:11;;;10910:18;10897:11;;;10890:39;10862:2;10855:10;10826:113;;;10957:6;10954:1;10951:13;10948:48;;;-1:-1:-1;;10992:1:1;10974:16;;10967:27;10744:258::o;11007:380::-;11086:1;11082:12;;;;11129;;;11150:61;;11204:4;11196:6;11192:17;11182:27;;11150:61;11257:2;11249:6;11246:14;11226:18;11223:38;11220:161;;;11303:10;11298:3;11294:20;11291:1;11284:31;11338:4;11335:1;11328:15;11366:4;11363:1;11356:15;11220:161;;11007:380;;;:::o;11392:135::-;11431:3;-1:-1:-1;;11452:17:1;;11449:43;;;11472:18;;:::i;:::-;-1:-1:-1;11519:1:1;11508:13;;11392:135::o;11532:112::-;11564:1;11590;11580:35;;11595:18;;:::i;:::-;-1:-1:-1;11629:9:1;;11532:112::o;11649:127::-;11710:10;11705:3;11701:20;11698:1;11691:31;11741:4;11738:1;11731:15;11765:4;11762:1;11755:15;11781:127;11842:10;11837:3;11833:20;11830:1;11823:31;11873:4;11870:1;11863:15;11897:4;11894:1;11887:15;11913:127;11974:10;11969:3;11965:20;11962:1;11955:31;12005:4;12002:1;11995:15;12029:4;12026:1;12019:15;12045:127;12106:10;12101:3;12097:20;12094:1;12087:31;12137:4;12134:1;12127:15;12161:4;12158:1;12151:15;12177:131;-1:-1:-1;;;;;;12251:32:1;;12241:43;;12231:71;;12298:1;12295;12288:12;12231:71;12177:131;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "940600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26708",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24369,
									"end": 24374,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24399,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24392,
									"end": 24399,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 88,
									"end": 143,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 143,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 221,
									"end": 257,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 257,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 404,
									"end": 476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 566,
									"end": 619,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 619,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 789,
									"end": 869,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 869,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1551,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1777,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1762,
									"end": 1765,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1758,
									"end": 1778,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1779,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1802,
									"end": 1806,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1799,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1792,
									"end": 1807,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1834,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1827,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1820,
									"end": 1835,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1684,
									"end": 1845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1471,
									"end": 1851,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1917,
									"end": 1927,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1912,
									"end": 1915,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1908,
									"end": 1928,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1905,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 1929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1948,
									"end": 1952,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1945,
									"end": 1946,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1938,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1976,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1969,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1962,
									"end": 1977,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1856,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23541,
									"end": 36547,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002d53f339d11cd4296aad602f8a82bf40bb03ed0d834c743ee8c0352913b302264736f6c63430008070033",
									".code": [
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23541,
											"end": 36547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 4992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4357,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4161,
											"end": 4364,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10345,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10174,
											"end": 10351,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27512,
											"end": 27516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27553,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24585,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24776,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24740,
											"end": 24776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25487,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26988,
											"end": 26995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8299,
											"end": 8320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8358,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8329,
											"end": 8359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8395,
											"end": 8429,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8517,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8498,
											"end": 8517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26561,
											"end": 26568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26546,
											"end": 26560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9556,
											"end": 9558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9538,
											"end": 9559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9595,
											"end": 9597,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9568,
											"end": 9598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9634,
											"end": 9668,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9607,
											"end": 9669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9709,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9726,
											"end": 9745,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9726,
											"end": 9745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 9354,
											"end": 9751,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26668,
											"end": 26730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26710,
											"end": 26715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7071,
											"end": 7073,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7053,
											"end": 7074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7110,
											"end": 7112,
											"name": "PUSH",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7108,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7183,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "PUSH",
											"source": 1,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7283,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7264,
											"end": 7283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6869,
											"end": 7289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26832,
											"end": 26834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26836,
											"end": 26843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27828,
											"end": 27846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27934,
											"end": 27962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 27944,
											"end": 27948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 27961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27934,
											"end": 27943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 27934,
											"end": 27962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 28185,
											"end": 28189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28191,
											"end": 28193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28195,
											"end": 28202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25176,
											"end": 25183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25218,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25245,
											"end": 25264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7889,
											"end": 7910,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7946,
											"end": 7948,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 7944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7919,
											"end": 7949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7985,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7965,
											"end": 7983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 8020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8085,
											"end": 8104,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8085,
											"end": 8104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7705,
											"end": 8110,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24914,
											"end": 24921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24941,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24941,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7496,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7478,
											"end": 7499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7535,
											"end": 7537,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7574,
											"end": 7608,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7675,
											"end": 7694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7294,
											"end": 7700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25033,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25619,
											"end": 25632,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25651,
											"end": 25658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27323,
											"end": 27331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27333,
											"end": 27341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28449,
											"end": 28467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 28568,
											"end": 28572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28574,
											"end": 28576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28587,
											"end": 28592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25804,
											"end": 25817,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25804,
											"end": 25817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9122,
											"end": 9143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9159,
											"end": 9177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9152,
											"end": 9182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9218,
											"end": 9252,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9198,
											"end": 9216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9269,
											"end": 9287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9262,
											"end": 9307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9343,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9324,
											"end": 9343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8938,
											"end": 9349,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 25992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25973,
											"end": 25980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 25988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 25992,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26019,
											"end": 26026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 26028,
											"end": 26035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26028,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26053,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30448,
											"end": 30452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6658,
											"end": 6660,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6640,
											"end": 6661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6677,
											"end": 6695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6700,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6770,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6771,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6780,
											"end": 6822,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6839,
											"end": 6858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6456,
											"end": 6864,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30578,
											"end": 30585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 30655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 30636,
											"end": 30643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27512,
											"end": 27516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27553,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30691,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 30659,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30692,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33394,
											"end": 33401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8808,
											"end": 8842,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8788,
											"end": 8806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8781,
											"end": 8843,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 8877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8852,
											"end": 8891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8927,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8908,
											"end": 8927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 8528,
											"end": 8933,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33474,
											"end": 33490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5899,
											"end": 5901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5881,
											"end": 5902,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5911,
											"end": 5941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5977,
											"end": 6011,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5957,
											"end": 5975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 6012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6055,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6072,
											"end": 6091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5697,
											"end": 6097,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 33660,
											"end": 33661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33643,
											"end": 33651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33692,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33722,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33748,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34379,
											"end": 34387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6286,
											"end": 6307,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6345,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6341,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6409,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6410,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6427,
											"end": 6445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6102,
											"end": 6451,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34445,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 4993,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29462,
											"end": 29769,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 29462,
											"end": 29769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29623,
											"end": 29627,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29633,
											"end": 29640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29613,
											"end": 29622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29682,
											"end": 29686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29688,
											"end": 29690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29692,
											"end": 29699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29701,
											"end": 29706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2073,
											"end": 2083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 35243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35259,
											"end": 35272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35259,
											"end": 35272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7951,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 7985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35345,
											"end": 35349,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 35345,
											"end": 35349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35358,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35365,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35533,
											"end": 35546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35747,
											"end": 35753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35724,
											"end": 35739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35717,
											"end": 35755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35409,
											"end": 35467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 35409,
											"end": 35467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35846,
											"end": 35850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 739,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 741,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 794,
											"end": 796,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 780,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 769,
											"end": 792,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 765,
											"end": 797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 810,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 808,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 812,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 762,
											"end": 814,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 762,
											"end": 814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 833,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 833,
											"end": 862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 823,
											"end": 862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 900,
											"end": 918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 881,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 881,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 871,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 951,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 938,
											"end": 970,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 928,
											"end": 970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 976,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1106,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1153,
											"end": 1156,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1141,
											"end": 1150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1151,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1124,
											"end": 1157,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1160,
											"end": 1172,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1121,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 1241,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1324,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1330,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1445,
											"end": 1447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1458,
											"end": 1459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1506,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1537,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1552,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1566,
											"end": 1567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1568,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1515,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1605,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1627,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1614,
											"end": 1650,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1699,
											"end": 1708,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1675,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1755,
											"end": 1777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1781,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 1751,
											"end": 1782,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1845,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1800,
											"end": 1846,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1797,
											"end": 1869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1971,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1950,
											"end": 1952,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1946,
											"end": 1957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1972,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1986,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 1936,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2034,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2039,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2044,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2076,
											"end": 2078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2079,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2084,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2088,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 981,
											"end": 2119,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2236,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2248,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2268,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 2218,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2308,
											"end": 2317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2289,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2279,
											"end": 2318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2391,
											"end": 2423,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2434,
											"end": 2435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2439,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2381,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2124,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2593,
											"end": 2602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2591,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2608,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2623,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2573,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2663,
											"end": 2672,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2644,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2634,
											"end": 2673,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2724,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2476,
											"end": 2730,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2825,
											"end": 2832,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2821,
											"end": 2844,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2864,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 2814,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2911,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 2944,
											"end": 2949,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2920,
											"end": 2950,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2985,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3105,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3078,
											"end": 3110,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3075,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3164,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3174,
											"end": 3204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3337,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3326,
											"end": 3349,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3354,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3369,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 3319,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3413,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3239,
											"end": 3419,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3503,
											"end": 3508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3509,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3525,
											"end": 3528,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3595,
											"end": 3599,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3590,
											"end": 3593,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3577,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3568,
											"end": 3584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3642,
											"end": 3657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3667,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3674,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3865,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3957,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3951,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3941,
											"end": 3958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 3919,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4035,
											"end": 4048,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4057,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4150,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3686,
											"end": 4156,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4638,
											"end": 4653,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4663,
											"end": 4706,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4739,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4831,
											"end": 4850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4806,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4851,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4369,
											"end": 4857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 5054,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5205,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5185,
											"end": 5206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5223,
											"end": 5267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5483,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5592,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5538,
											"end": 5556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5650,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5682,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5692,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9960,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9997,
											"end": 9999,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10000,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10070,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 10031,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10009,
											"end": 10071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10102,
											"end": 10104,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10080,
											"end": 10127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10144,
											"end": 10163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9756,
											"end": 10169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10423,
											"end": 10429,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10430,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10414,
											"end": 10453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 10433,
											"end": 10451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10469,
											"end": 10478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10484,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10529,
											"end": 10530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10545,
											"end": 10580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10545,
											"end": 10580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10609,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10682,
											"end": 10683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10676,
											"end": 10684,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10673,
											"end": 10707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 10687,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10733,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10614,
											"end": 10739,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10816,
											"end": 10817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10840,
											"end": 10846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10837,
											"end": 10838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10834,
											"end": 10847,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 10908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10855,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 10826,
											"end": 10939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10963,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10954,
											"end": 10955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 10964,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 10948,
											"end": 10996,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10967,
											"end": 10994,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10744,
											"end": 11002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11086,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11082,
											"end": 11094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11141,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11204,
											"end": 11208,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11196,
											"end": 11202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11150,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11257,
											"end": 11259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11246,
											"end": 11260,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11303,
											"end": 11313,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11298,
											"end": 11301,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11294,
											"end": 11314,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11338,
											"end": 11342,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11328,
											"end": 11343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11366,
											"end": 11370,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11363,
											"end": 11364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11356,
											"end": 11371,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11387,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11452,
											"end": 11469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11452,
											"end": 11469,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11449,
											"end": 11492,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 11472,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11519,
											"end": 11520,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11508,
											"end": 11521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11508,
											"end": 11521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11392,
											"end": 11527,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11590,
											"end": 11591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11580,
											"end": 11615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 11580,
											"end": 11615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11532,
											"end": 11644,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11649,
											"end": 11776,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 11649,
											"end": 11776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11710,
											"end": 11720,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11705,
											"end": 11708,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11701,
											"end": 11721,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11691,
											"end": 11722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11741,
											"end": 11745,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11731,
											"end": 11746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11765,
											"end": 11769,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11762,
											"end": 11763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11755,
											"end": 11770,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11908,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 11781,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11842,
											"end": 11852,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11837,
											"end": 11840,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11833,
											"end": 11853,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11854,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11873,
											"end": 11877,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11870,
											"end": 11871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11863,
											"end": 11878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11897,
											"end": 11901,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11894,
											"end": 11895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11887,
											"end": 11902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11913,
											"end": 12040,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 11913,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11974,
											"end": 11984,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11969,
											"end": 11972,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12005,
											"end": 12009,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12002,
											"end": 12003,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11995,
											"end": 12010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12029,
											"end": 12033,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12019,
											"end": 12034,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12045,
											"end": 12172,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 12045,
											"end": 12172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12106,
											"end": 12116,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12101,
											"end": 12104,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12097,
											"end": 12117,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12087,
											"end": 12118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12141,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12127,
											"end": 12142,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12161,
											"end": 12165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12158,
											"end": 12159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12151,
											"end": 12166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12251,
											"end": 12283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12283,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12241,
											"end": 12284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12241,
											"end": 12284,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12298,
											"end": 12299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12288,
											"end": 12300,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 12231,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12177,
											"end": 12308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 902,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 904,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 908,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 912,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 916,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 922,
								"contract": "MoonCats_flat.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 902,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 904,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 908,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 912,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 916,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 922,
								"contract": "MoonCats_flat.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 902,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 904,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 908,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 912,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 916,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 922,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1745,
								"contract": "MoonCats_flat.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MoonCats": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MoonCats_flat.sol\":39309:40378  contract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MoonCats_flat.sol\":39475:39519  constructor() ERC721(\"MoonCats\", \"MCATS\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"MoonCats_flat.sol\":24303:24416  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x08\n  dup2\n  mstore\n  shl(0xc0, 0x4d6f6f6e43617473)\n  0x20\n  dup1\n  dup4\n  add\n  swap2\n  dup3\n  mstore\n  dup4\n  mload\n  dup1\n  dup6\n  add\n  swap1\n  swap5\n  mstore\n  0x05\n  dup5\n  mstore\n  shl(0xd8, 0x4d43415453)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"MoonCats_flat.sol\":24369:24382  _name = name_ */\n  dup2\n  mload\n    /* \"MoonCats_flat.sol\":24303:24416  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"MoonCats_flat.sol\":24369:24382  _name = name_ */\n  tag_6\n  swap2\n  0x00\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"MoonCats_flat.sol\":24392:24409  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"MoonCats_flat.sol\":24392:24399  _symbol */\n  0x01\n  swap1\n    /* \"MoonCats_flat.sol\":24392:24409  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"MoonCats_flat.sol\":24303:24416  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"MoonCats_flat.sol\":5283:5315  _transferOwnership(_msgSender()) */\n  tag_10\n    /* \"MoonCats_flat.sol\":5302:5314  _msgSender() */\n  tag_11\n    /* \"MoonCats_flat.sol\":5302:5312  _msgSender */\n  shl(0x20, tag_12)\n    /* \"MoonCats_flat.sol\":5302:5314  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"MoonCats_flat.sol\":5283:5301  _transferOwnership */\n  tag_13\n    /* \"MoonCats_flat.sol\":5283:5315  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_10:\n    /* \"MoonCats_flat.sol\":39309:40378  contract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  jump(tag_29)\n    /* \"MoonCats_flat.sol\":4166:4262  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n  caller\n  swap1\n    /* \"MoonCats_flat.sol\":4166:4262  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"MoonCats_flat.sol\":6632:6819  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"MoonCats_flat.sol\":6724:6730  _owner */\n  0x07\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"MoonCats_flat.sol\":6740:6757  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"MoonCats_flat.sol\":6724:6730  _owner */\n  swap2\n  and\n  swap2\n    /* \"MoonCats_flat.sol\":6740:6757  _owner = newOwner */\n  swap1\n    /* \"MoonCats_flat.sol\":6724:6730  _owner */\n  dup3\n  swap1\n    /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"MoonCats_flat.sol\":6705:6721  address oldOwner */\n  0x00\n  swap1\n    /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"MoonCats_flat.sol\":6695:6819  {... */\n  pop\n    /* \"MoonCats_flat.sol\":6632:6819  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"MoonCats_flat.sol\":39309:40378  contract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_21\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_24)\ntag_21:\n  dup3\n  0x1f\n  lt\n  tag_22\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_24)\ntag_22:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_24\n  jumpi\n  swap2\n  dup3\n  add\ntag_23:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_24\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_23)\ntag_24:\n  pop\n  tag_25\n  swap3\n  swap2\n  pop\n  tag_26\n  jump\t// in\ntag_25:\n  pop\n  swap1\n  jump\t// out\ntag_26:\ntag_27:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_27)\n    /* \"#utility.yul\":14:394   */\ntag_19:\n    /* \"#utility.yul\":93:94   */\n  0x01\n    /* \"#utility.yul\":89:101   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":136:148   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":157:218   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":211:215   */\n  0x7f\n    /* \"#utility.yul\":203:209   */\n  dup3\n    /* \"#utility.yul\":199:216   */\n  and\n    /* \"#utility.yul\":189:216   */\n  swap2\n  pop\n    /* \"#utility.yul\":157:218   */\ntag_31:\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":256:262   */\n  dup3\n    /* \"#utility.yul\":253:267   */\n  lt\n    /* \"#utility.yul\":233:251   */\n  dup2\n    /* \"#utility.yul\":230:268   */\n  eq\n    /* \"#utility.yul\":227:388   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":310:320   */\n  0x4e487b71\n    /* \"#utility.yul\":305:308   */\n  0xe0\n    /* \"#utility.yul\":301:321   */\n  shl\n    /* \"#utility.yul\":298:299   */\n  0x00\n    /* \"#utility.yul\":291:322   */\n  mstore\n    /* \"#utility.yul\":345:349   */\n  0x22\n    /* \"#utility.yul\":342:343   */\n  0x04\n    /* \"#utility.yul\":335:350   */\n  mstore\n    /* \"#utility.yul\":373:377   */\n  0x24\n    /* \"#utility.yul\":370:371   */\n  0x00\n    /* \"#utility.yul\":363:378   */\n  revert\n    /* \"#utility.yul\":227:388   */\ntag_32:\n  pop\n    /* \"#utility.yul\":14:394   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_29:\n    /* \"MoonCats_flat.sol\":39309:40378  contract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MoonCats_flat.sol\":39309:40378  contract MoonCats is ERC721, ERC721URIStorage, ERC721Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd204c45e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5720:5734   */\n      swap1\n      iszero\n        /* \"#utility.yul\":5713:5735   */\n      iszero\n        /* \"#utility.yul\":5695:5736   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5668:5686   */\n      add\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5018:5050   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5000:5051   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4988:4990   */\n      0x20\n        /* \"#utility.yul\":4973:4991   */\n      add\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":4854:5057   */\n      jump\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"MoonCats_flat.sol\":27639:27969  function transferFrom(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_44\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"MoonCats_flat.sol\":40163:40375  function withdraw() public  payable  {... */\n    tag_7:\n      tag_44\n      tag_54\n      jump\t// in\n        /* \"MoonCats_flat.sol\":28035:28214  function safeTransferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_44\n      tag_57\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"MoonCats_flat.sol\":37064:37305  function burn(uint256 tokenId) public virtual {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_44\n      tag_61\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"MoonCats_flat.sol\":25104:25339  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_37\n      tag_65\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n        /* \"#utility.yul\":14155:14180   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":14143:14145   */\n      0x20\n        /* \"#utility.yul\":14128:14146   */\n      add\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_29\n        /* \"#utility.yul\":14009:14186   */\n      jump\n        /* \"MoonCats_flat.sol\":6030:6131  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_44\n      tag_77\n      jump\t// in\n        /* \"MoonCats_flat.sol\":5398:5483  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n        /* \"MoonCats_flat.sol\":5470:5476  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"MoonCats_flat.sol\":5398:5483  function owner() public view virtual returns (address) {... */\n      jump(tag_37)\n        /* \"MoonCats_flat.sol\":25563:25665  function symbol() public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_32\n      tag_84\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n      tag_44\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_44\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"MoonCats_flat.sol\":39968:40157  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_32\n      tag_98\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"MoonCats_flat.sol\":39525:39843  function safeMint(address to, string memory uri) public payable {... */\n    tag_18:\n      tag_44\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_25\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":27512:27516  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27535:27553  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":27535:27570  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"MoonCats_flat.sol\":6280:6478  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_44\n      tag_113\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"MoonCats_flat.sol\":24585:24589  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":24620:24660  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"MoonCats_flat.sol\":24620:24724  interfaceId == type(IERC721).interfaceId ||... */\n      tag_116\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":24676:24724  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"MoonCats_flat.sol\":24620:24724  interfaceId == type(IERC721).interfaceId ||... */\n    tag_116:\n        /* \"MoonCats_flat.sol\":24620:24776  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_118\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":17591:17631  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"MoonCats_flat.sol\":24740:24776  super.supportsInterface(interfaceId) */\n    tag_118:\n        /* \"MoonCats_flat.sol\":24601:24776  return... */\n      swap3\n        /* \"MoonCats_flat.sol\":24483:24783  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n    tag_33:\n        /* \"MoonCats_flat.sol\":25455:25468  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":25487:25492  _name */\n      0x00\n        /* \"MoonCats_flat.sol\":25480:25492  return _name */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_122\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":25401:25499  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_40:\n        /* \"MoonCats_flat.sol\":26988:26995  address */\n      0x00\n        /* \"MoonCats_flat.sol\":27015:27031  _exists(tokenId) */\n      tag_128\n        /* \"MoonCats_flat.sol\":27023:27030  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":27015:27022  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":27015:27031  _exists(tokenId) */\n      jump\t// in\n    tag_128:\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10968:10970   */\n      0x20\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10950:10971   */\n      mstore\n        /* \"#utility.yul\":11007:11009   */\n      0x2c\n        /* \"#utility.yul\":10987:11005   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10980:11010   */\n      mstore\n        /* \"#utility.yul\":11046:11080   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":11026:11044   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11019:11081   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11097:11115   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11090:11132   */\n      mstore\n        /* \"#utility.yul\":11149:11168   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":27007:27080  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n      pop\n        /* \"MoonCats_flat.sol\":27098:27122  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27098:27113  _tokenApprovals */\n      0x04\n        /* \"MoonCats_flat.sol\":27098:27122  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"MoonCats_flat.sol\":26912:27129  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_47:\n        /* \"MoonCats_flat.sol\":26530:26543  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":26546:26569  ERC721.ownerOf(tokenId) */\n      tag_134\n        /* \"MoonCats_flat.sol\":26561:26568  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":26546:26560  ERC721.ownerOf */\n      tag_66\n        /* \"MoonCats_flat.sol\":26546:26569  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_134:\n        /* \"MoonCats_flat.sol\":26530:26569  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":26593:26598  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26587:26598  to != owner */\n      and\n        /* \"MoonCats_flat.sol\":26587:26589  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26587:26598  to != owner */\n      and\n      eq\n      iszero\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12568:12570   */\n      0x20\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12550:12571   */\n      mstore\n        /* \"#utility.yul\":12607:12609   */\n      0x21\n        /* \"#utility.yul\":12587:12605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12580:12610   */\n      mstore\n        /* \"#utility.yul\":12646:12680   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":12626:12644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12619:12681   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":12697:12715   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12690:12721   */\n      mstore\n        /* \"#utility.yul\":12738:12757   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_131\n        /* \"#utility.yul\":12366:12763   */\n      jump\n        /* \"MoonCats_flat.sol\":26579:26636  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_135:\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":26668:26689  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"MoonCats_flat.sol\":26668:26730  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_141\n      jumpi\n      pop\n        /* \"MoonCats_flat.sol\":26693:26730  isApprovedForAll(owner, _msgSender()) */\n      tag_141\n        /* \"MoonCats_flat.sol\":26710:26715  owner */\n      dup2\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27415:27577  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_107\n      jump\t// in\n        /* \"MoonCats_flat.sol\":26693:26730  isApprovedForAll(owner, _msgSender()) */\n    tag_141:\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8528:8530   */\n      0x20\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8510:8531   */\n      mstore\n        /* \"#utility.yul\":8567:8569   */\n      0x38\n        /* \"#utility.yul\":8547:8565   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8540:8570   */\n      mstore\n        /* \"#utility.yul\":8606:8640   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":8586:8604   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8579:8641   */\n      mstore\n        /* \"#utility.yul\":8677:8703   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":8657:8675   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8650:8704   */\n      mstore\n        /* \"#utility.yul\":8721:8740   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n      tag_131\n        /* \"#utility.yul\":8326:8746   */\n      jump\n        /* \"MoonCats_flat.sol\":26647:26812  require(... */\n    tag_143:\n        /* \"MoonCats_flat.sol\":26823:26844  _approve(to, tokenId) */\n      tag_146\n        /* \"MoonCats_flat.sol\":26832:26834  to */\n      dup4\n        /* \"MoonCats_flat.sol\":26836:26843  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":26823:26831  _approve */\n      tag_147\n        /* \"MoonCats_flat.sol\":26823:26844  _approve(to, tokenId) */\n      jump\t// in\n    tag_146:\n        /* \"MoonCats_flat.sol\":26520:26851  {... */\n      pop\n        /* \"MoonCats_flat.sol\":26450:26851  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":27639:27969  function transferFrom(... */\n    tag_52:\n        /* \"MoonCats_flat.sol\":27828:27869  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_149\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27847:27859  _msgSender() */\n    tag_150:\n        /* \"MoonCats_flat.sol\":27861:27868  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":27828:27846  _isApprovedOrOwner */\n      tag_151\n        /* \"MoonCats_flat.sol\":27828:27869  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"MoonCats_flat.sol\":27820:27923  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_154\n      jump\t// in\n    tag_152:\n        /* \"MoonCats_flat.sol\":27934:27962  _transfer(from, to, tokenId) */\n      tag_146\n        /* \"MoonCats_flat.sol\":27944:27948  from */\n      dup4\n        /* \"MoonCats_flat.sol\":27950:27952  to */\n      dup4\n        /* \"MoonCats_flat.sol\":27954:27961  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":27934:27943  _transfer */\n      tag_156\n        /* \"MoonCats_flat.sol\":27934:27962  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":40163:40375  function withdraw() public  payable  {... */\n    tag_54:\n        /* \"MoonCats_flat.sol\":40210:40223  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":40226:40233  owner() */\n      tag_158\n        /* \"MoonCats_flat.sol\":5470:5476  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n      swap1\n        /* \"MoonCats_flat.sol\":5398:5483  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"MoonCats_flat.sol\":40226:40233  owner() */\n    tag_158:\n        /* \"MoonCats_flat.sol\":40210:40233  address owner = owner() */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":40251:40270  owner == msg.sender */\n      dup2\n      and\n        /* \"MoonCats_flat.sol\":40260:40270  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":40251:40270  owner == msg.sender */\n      eq\n        /* \"MoonCats_flat.sol\":40243:40271  require(owner == msg.sender) */\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n        /* \"MoonCats_flat.sol\":40331:40365  to.transfer(address(this).balance) */\n      mload(0x40)\n        /* \"MoonCats_flat.sol\":40310:40320  msg.sender */\n      caller\n      swap1\n      dup2\n      swap1\n        /* \"MoonCats_flat.sol\":40343:40364  address(this).balance */\n      selfbalance\n        /* \"MoonCats_flat.sol\":40331:40365  to.transfer(address(this).balance) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"MoonCats_flat.sol\":40281:40299  address payable to */\n      0x00\n        /* \"MoonCats_flat.sol\":40331:40365  to.transfer(address(this).balance) */\n      dup2\n        /* \"MoonCats_flat.sol\":40281:40299  address payable to */\n      dup2\n        /* \"MoonCats_flat.sol\":40331:40365  to.transfer(address(this).balance) */\n      dup2\n        /* \"MoonCats_flat.sol\":40343:40364  address(this).balance */\n      dup6\n        /* \"MoonCats_flat.sol\":40310:40320  msg.sender */\n      dup9\n        /* \"MoonCats_flat.sol\":40331:40365  to.transfer(address(this).balance) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"MoonCats_flat.sol\":28035:28214  function safeTransferFrom(... */\n    tag_58:\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_146\n        /* \"MoonCats_flat.sol\":28185:28189  from */\n      dup4\n        /* \"MoonCats_flat.sol\":28191:28193  to */\n      dup4\n        /* \"MoonCats_flat.sol\":28195:28202  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MoonCats_flat.sol\":28168:28184  safeTransferFrom */\n      tag_95\n        /* \"MoonCats_flat.sol\":28168:28207  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":37064:37305  function burn(uint256 tokenId) public virtual {... */\n    tag_62:\n        /* \"MoonCats_flat.sol\":37180:37221  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_165\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":37199:37211  _msgSender() */\n      tag_150\n        /* \"MoonCats_flat.sol\":4166:4262  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"MoonCats_flat.sol\":37180:37221  _isApprovedOrOwner(_msgSender(), tokenId) */\n    tag_165:\n        /* \"MoonCats_flat.sol\":37172:37274  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13794:13796   */\n      0x20\n        /* \"MoonCats_flat.sol\":37172:37274  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13776:13797   */\n      mstore\n        /* \"#utility.yul\":13833:13835   */\n      0x30\n        /* \"#utility.yul\":13813:13831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13806:13836   */\n      mstore\n        /* \"#utility.yul\":13872:13906   */\n      0x4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":13852:13870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13845:13907   */\n      mstore\n      shl(0x82, 0x1b995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":13923:13941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13916:13962   */\n      mstore\n        /* \"#utility.yul\":13979:13998   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":37172:37274  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_131\n        /* \"#utility.yul\":13592:14004   */\n      jump\n        /* \"MoonCats_flat.sol\":37172:37274  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n    tag_167:\n        /* \"MoonCats_flat.sol\":37284:37298  _burn(tokenId) */\n      tag_170\n        /* \"MoonCats_flat.sol\":37290:37297  tokenId */\n      dup2\n        /* \"MoonCats_flat.sol\":37284:37289  _burn */\n      tag_171\n        /* \"MoonCats_flat.sol\":37284:37298  _burn(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"MoonCats_flat.sol\":37064:37305  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25104:25339  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_66:\n        /* \"MoonCats_flat.sol\":25176:25183  address */\n      0x00\n        /* \"MoonCats_flat.sol\":25211:25227  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":25211:25218  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":25211:25227  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MoonCats_flat.sol\":25245:25264  owner != address(0) */\n      dup1\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9364:9366   */\n      0x20\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9346:9367   */\n      mstore\n        /* \"#utility.yul\":9403:9405   */\n      0x29\n        /* \"#utility.yul\":9383:9401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9376:9406   */\n      mstore\n        /* \"#utility.yul\":9442:9476   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":9422:9440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9415:9477   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9493:9511   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9486:9525   */\n      mstore\n        /* \"#utility.yul\":9542:9561   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":25237:25310  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_131\n        /* \"#utility.yul\":9162:9567   */\n      jump\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_72:\n        /* \"MoonCats_flat.sol\":24914:24921  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":24941:24960  owner != address(0) */\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8953:8955   */\n      0x20\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8935:8956   */\n      mstore\n        /* \"#utility.yul\":8992:8994   */\n      0x2a\n        /* \"#utility.yul\":8972:8990   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8965:8995   */\n      mstore\n        /* \"#utility.yul\":9031:9065   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":9011:9029   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9004:9066   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":9082:9100   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9075:9115   */\n      mstore\n        /* \"#utility.yul\":9132:9151   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_131\n        /* \"#utility.yul\":8751:9157   */\n      jump\n        /* \"MoonCats_flat.sol\":24933:25007  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_177:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":25024:25040  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":25024:25033  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":25024:25040  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"MoonCats_flat.sol\":24842:25047  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":6030:6131  function renounceOwnership() public virtual onlyOwner {... */\n    tag_77:\n        /* \"MoonCats_flat.sol\":5470:5476  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":5610:5633  owner() == _msgSender() */\n      eq\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11381:11383   */\n      0x20\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11363:11384   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11400:11418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11393:11423   */\n      mstore\n        /* \"#utility.yul\":11459:11493   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11439:11457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11432:11494   */\n      mstore\n        /* \"#utility.yul\":11511:11529   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n        /* \"#utility.yul\":11179:11535   */\n      jump\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_183:\n        /* \"MoonCats_flat.sol\":6094:6124  _transferOwnership(address(0)) */\n      tag_187\n        /* \"MoonCats_flat.sol\":6121:6122  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":6094:6112  _transferOwnership */\n      tag_188\n        /* \"MoonCats_flat.sol\":6094:6124  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"MoonCats_flat.sol\":6030:6131  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25563:25665  function symbol() public view virtual override returns (string memory) {... */\n    tag_84:\n        /* \"MoonCats_flat.sol\":25619:25632  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":25651:25658  _symbol */\n      0x01\n        /* \"MoonCats_flat.sol\":25644:25658  return _symbol */\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_90:\n        /* \"MoonCats_flat.sol\":27290:27342  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_197\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":27323:27331  operator */\n      dup4\n        /* \"MoonCats_flat.sol\":27333:27341  approved */\n      dup4\n        /* \"MoonCats_flat.sol\":27290:27308  _setApprovalForAll */\n      tag_199\n        /* \"MoonCats_flat.sol\":27290:27342  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_197:\n        /* \"MoonCats_flat.sol\":27196:27349  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n    tag_95:\n        /* \"MoonCats_flat.sol\":28449:28490  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_201\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":28482:28489  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":28449:28467  _isApprovedOrOwner */\n      tag_151\n        /* \"MoonCats_flat.sol\":28449:28490  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_201:\n        /* \"MoonCats_flat.sol\":28441:28544  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_154\n      jump\t// in\n    tag_203:\n        /* \"MoonCats_flat.sol\":28554:28593  _safeTransfer(from, to, tokenId, _data) */\n      tag_205\n        /* \"MoonCats_flat.sol\":28568:28572  from */\n      dup5\n        /* \"MoonCats_flat.sol\":28574:28576  to */\n      dup5\n        /* \"MoonCats_flat.sol\":28578:28585  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":28587:28592  _data */\n      dup5\n        /* \"MoonCats_flat.sol\":28554:28567  _safeTransfer */\n      tag_206\n        /* \"MoonCats_flat.sol\":28554:28593  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_205:\n        /* \"MoonCats_flat.sol\":28280:28600  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":39968:40157  function tokenURI(uint256 tokenId)... */\n    tag_99:\n        /* \"MoonCats_flat.sol\":40091:40104  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":40127:40150  super.tokenURI(tokenId) */\n      tag_118\n        /* \"MoonCats_flat.sol\":40142:40149  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":40127:40141  super.tokenURI */\n      tag_209\n        /* \"MoonCats_flat.sol\":40127:40150  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":39525:39843  function safeMint(address to, string memory uri) public payable {... */\n    tag_104:\n        /* \"MoonCats_flat.sol\":39607:39616  msg.value */\n      callvalue\n        /* \"MoonCats_flat.sol\":39620:39627  2 ether */\n      0x1bc16d674ec80000\n        /* \"MoonCats_flat.sol\":39607:39627  msg.value == 2 ether */\n      eq\n        /* \"MoonCats_flat.sol\":39599:39669  require(msg.value == 2 ether, 'Only 2 glmr allowed to be transfered.') */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13388:13390   */\n      0x20\n        /* \"MoonCats_flat.sol\":39599:39669  require(msg.value == 2 ether, 'Only 2 glmr allowed to be transfered.') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13370:13391   */\n      mstore\n        /* \"#utility.yul\":13427:13429   */\n      0x25\n        /* \"#utility.yul\":13407:13425   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13400:13430   */\n      mstore\n        /* \"#utility.yul\":13466:13500   */\n      0x4f6e6c79203220676c6d7220616c6c6f77656420746f206265207472616e7366\n        /* \"#utility.yul\":13446:13464   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13439:13501   */\n      mstore\n      shl(0xd9, 0x32b932b217)\n        /* \"#utility.yul\":13517:13535   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13510:13545   */\n      mstore\n        /* \"#utility.yul\":13562:13581   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":39599:39669  require(msg.value == 2 ether, 'Only 2 glmr allowed to be transfered.') */\n      tag_131\n        /* \"#utility.yul\":13186:13587   */\n      jump\n        /* \"MoonCats_flat.sol\":39599:39669  require(msg.value == 2 ether, 'Only 2 glmr allowed to be transfered.') */\n    tag_211:\n        /* \"MoonCats_flat.sol\":39688:39703  uint256 tokenId */\n      0x00\n        /* \"MoonCats_flat.sol\":39706:39731  _tokenIdCounter.current() */\n      tag_214\n        /* \"MoonCats_flat.sol\":39706:39721  _tokenIdCounter */\n      0x08\n        /* \"MoonCats_flat.sol\":972:986  counter._value */\n      sload\n      swap1\n        /* \"MoonCats_flat.sol\":881:993  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"MoonCats_flat.sol\":39706:39731  _tokenIdCounter.current() */\n    tag_214:\n        /* \"MoonCats_flat.sol\":39688:39731  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":39741:39768  _tokenIdCounter.increment() */\n      tag_216\n        /* \"MoonCats_flat.sol\":39741:39756  _tokenIdCounter */\n      0x08\n        /* \"MoonCats_flat.sol\":1086:1105  counter._value += 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":1104:1105  1 */\n      0x01\n        /* \"MoonCats_flat.sol\":1086:1105  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"MoonCats_flat.sol\":999:1122  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"MoonCats_flat.sol\":39741:39768  _tokenIdCounter.increment() */\n    tag_216:\n        /* \"MoonCats_flat.sol\":39778:39800  _safeMint(to, tokenId) */\n      tag_218\n        /* \"MoonCats_flat.sol\":39788:39790  to */\n      dup4\n        /* \"MoonCats_flat.sol\":39792:39799  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":39778:39787  _safeMint */\n      tag_219\n        /* \"MoonCats_flat.sol\":39778:39800  _safeMint(to, tokenId) */\n      jump\t// in\n    tag_218:\n        /* \"MoonCats_flat.sol\":39810:39836  _setTokenURI(tokenId, uri) */\n      tag_146\n        /* \"MoonCats_flat.sol\":39823:39830  tokenId */\n      dup2\n        /* \"MoonCats_flat.sol\":39832:39835  uri */\n      dup4\n        /* \"MoonCats_flat.sol\":39810:39822  _setTokenURI */\n      tag_221\n        /* \"MoonCats_flat.sol\":39810:39836  _setTokenURI(tokenId, uri) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":6280:6478  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_114:\n        /* \"MoonCats_flat.sol\":5470:5476  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n        /* \"MoonCats_flat.sol\":5610:5633  owner() == _msgSender() */\n      eq\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11381:11383   */\n      0x20\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11363:11384   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11400:11418   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11393:11423   */\n      mstore\n        /* \"#utility.yul\":11459:11493   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11439:11457   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11432:11494   */\n      mstore\n        /* \"#utility.yul\":11511:11529   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n        /* \"#utility.yul\":11179:11535   */\n      jump\n        /* \"MoonCats_flat.sol\":5602:5670  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":6368:6390  newOwner != address(0) */\n      dup2\n      and\n        /* \"MoonCats_flat.sol\":6360:6433  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6592:6594   */\n      0x20\n        /* \"MoonCats_flat.sol\":6360:6433  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6574:6595   */\n      mstore\n        /* \"#utility.yul\":6631:6633   */\n      0x26\n        /* \"#utility.yul\":6611:6629   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6604:6634   */\n      mstore\n        /* \"#utility.yul\":6670:6704   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6650:6668   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6643:6705   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6721:6739   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6714:6750   */\n      mstore\n        /* \"#utility.yul\":6767:6786   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":6360:6433  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_131\n        /* \"#utility.yul\":6390:6792   */\n      jump\n        /* \"MoonCats_flat.sol\":6360:6433  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_229:\n        /* \"MoonCats_flat.sol\":6443:6471  _transferOwnership(newOwner) */\n      tag_170\n        /* \"MoonCats_flat.sol\":6462:6470  newOwner */\n      dup2\n        /* \"MoonCats_flat.sol\":6443:6461  _transferOwnership */\n      tag_188\n        /* \"MoonCats_flat.sol\":6443:6471  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":30072:30197  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_129:\n        /* \"MoonCats_flat.sol\":30137:30141  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":30160:30167  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":30160:30176  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"MoonCats_flat.sol\":30160:30190  _owners[tokenId] != address(0) */\n      iszero\n      iszero\n      swap1\n        /* \"MoonCats_flat.sol\":30072:30197  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":33923:34094  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_147:\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33997:34012  _tokenApprovals */\n      0x04\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MoonCats_flat.sol\":33997:34026  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"MoonCats_flat.sol\":34050:34073  ERC721.ownerOf(tokenId) */\n      tag_237\n        /* \"MoonCats_flat.sol\":33997:34021  _tokenApprovals[tokenId] */\n      dup3\n        /* \"MoonCats_flat.sol\":34050:34064  ERC721.ownerOf */\n      tag_66\n        /* \"MoonCats_flat.sol\":34050:34073  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34041:34087  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"MoonCats_flat.sol\":33923:34094  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":30355:30699  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_151:\n        /* \"MoonCats_flat.sol\":30448:30452  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":30472:30488  _exists(tokenId) */\n      tag_239\n        /* \"MoonCats_flat.sol\":30480:30487  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":30472:30479  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":30472:30488  _exists(tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8115:8117   */\n      0x20\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8097:8118   */\n      mstore\n        /* \"#utility.yul\":8154:8156   */\n      0x2c\n        /* \"#utility.yul\":8134:8152   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8127:8157   */\n      mstore\n        /* \"#utility.yul\":8193:8227   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8173:8191   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8166:8228   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8244:8262   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8237:8279   */\n      mstore\n        /* \"#utility.yul\":8296:8315   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_131\n        /* \"#utility.yul\":7913:8321   */\n      jump\n        /* \"MoonCats_flat.sol\":30464:30537  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_240:\n        /* \"MoonCats_flat.sol\":30547:30560  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":30563:30586  ERC721.ownerOf(tokenId) */\n      tag_243\n        /* \"MoonCats_flat.sol\":30578:30585  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":30563:30577  ERC721.ownerOf */\n      tag_66\n        /* \"MoonCats_flat.sol\":30563:30586  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_243:\n        /* \"MoonCats_flat.sol\":30547:30586  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":30615:30620  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30604:30620  spender == owner */\n      and\n        /* \"MoonCats_flat.sol\":30604:30611  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30604:30620  spender == owner */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":30604:30655  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_244\n      jumpi\n      pop\n        /* \"MoonCats_flat.sol\":30648:30655  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30624:30655  getApproved(tokenId) == spender */\n      and\n        /* \"MoonCats_flat.sol\":30624:30644  getApproved(tokenId) */\n      tag_245\n        /* \"MoonCats_flat.sol\":30636:30643  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":30624:30635  getApproved */\n      tag_40\n        /* \"MoonCats_flat.sol\":30624:30644  getApproved(tokenId) */\n      jump\t// in\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":30624:30655  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":30604:30655  spender == owner || getApproved(tokenId) == spender */\n    tag_244:\n        /* \"MoonCats_flat.sol\":30604:30691  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_247\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":27512:27516  bool */\n      0x00\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":27535:27553  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":27535:27560  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":27535:27570  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"MoonCats_flat.sol\":30659:30691  isApprovedForAll(owner, spender) */\n    tag_247:\n        /* \"MoonCats_flat.sol\":30596:30692  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap5\n        /* \"MoonCats_flat.sol\":30355:30699  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":33252:33812  function _transfer(... */\n    tag_156:\n        /* \"MoonCats_flat.sol\":33406:33410  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33379:33410  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"MoonCats_flat.sol\":33379:33402  ERC721.ownerOf(tokenId) */\n      tag_249\n        /* \"MoonCats_flat.sol\":33394:33401  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":33379:33393  ERC721.ownerOf */\n      tag_66\n        /* \"MoonCats_flat.sol\":33379:33402  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33379:33410  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11742:11744   */\n      0x20\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11724:11745   */\n      mstore\n        /* \"#utility.yul\":11781:11783   */\n      0x29\n        /* \"#utility.yul\":11761:11779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11754:11784   */\n      mstore\n        /* \"#utility.yul\":11820:11854   */\n      0x4552433732313a207472616e73666572206f6620746f6b656e20746861742069\n        /* \"#utility.yul\":11800:11818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11793:11855   */\n      mstore\n      shl(0xb9, 0x39903737ba1037bbb7)\n        /* \"#utility.yul\":11871:11889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11864:11903   */\n      mstore\n        /* \"#utility.yul\":11920:11939   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n      tag_131\n        /* \"#utility.yul\":11540:11945   */\n      jump\n        /* \"MoonCats_flat.sol\":33371:33456  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\") */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33474:33490  to != address(0) */\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7356:7358   */\n      0x20\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7338:7359   */\n      mstore\n        /* \"#utility.yul\":7395:7397   */\n      0x24\n        /* \"#utility.yul\":7375:7393   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7368:7398   */\n      mstore\n        /* \"#utility.yul\":7434:7468   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":7414:7432   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7407:7469   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7485:7503   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7478:7512   */\n      mstore\n        /* \"#utility.yul\":7529:7548   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":7154:7554   */\n      jump\n        /* \"MoonCats_flat.sol\":33466:33531  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_253:\n        /* \"MoonCats_flat.sol\":33643:33672  _approve(address(0), tokenId) */\n      tag_258\n        /* \"MoonCats_flat.sol\":33660:33661  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":33664:33671  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":33643:33651  _approve */\n      tag_147\n        /* \"MoonCats_flat.sol\":33643:33672  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33683:33692  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":33702:33703  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":33683:33698  _balances[from] */\n      swap1\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      tag_259\n      swap1\n        /* \"MoonCats_flat.sol\":33702:33703  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":33683:33703  _balances[from] -= 1 */\n      tag_260\n      jump\t// in\n    tag_259:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33713:33722  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":33730:33731  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":33713:33726  _balances[to] */\n      swap1\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      tag_261\n      swap1\n        /* \"MoonCats_flat.sol\":33730:33731  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":33713:33731  _balances[to] += 1 */\n      tag_262\n      jump\t// in\n    tag_261:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":33741:33748  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MoonCats_flat.sol\":33741:33762  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"MoonCats_flat.sol\":33778:33805  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"MoonCats_flat.sol\":33741:33757  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"MoonCats_flat.sol\":33778:33805  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"MoonCats_flat.sol\":33252:33812  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":39849:39962  function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {... */\n    tag_171:\n        /* \"MoonCats_flat.sol\":39935:39955  super._burn(tokenId) */\n      tag_170\n        /* \"MoonCats_flat.sol\":39947:39954  tokenId */\n      dup2\n        /* \"MoonCats_flat.sol\":39935:39946  super._burn */\n      tag_265\n        /* \"MoonCats_flat.sol\":39935:39955  super._burn(tokenId) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":6632:6819  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"MoonCats_flat.sol\":6724:6730  _owner */\n      0x07\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":6740:6757  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"MoonCats_flat.sol\":6724:6730  _owner */\n      swap2\n      and\n      swap2\n        /* \"MoonCats_flat.sol\":6740:6757  _owner = newOwner */\n      swap1\n        /* \"MoonCats_flat.sol\":6724:6730  _owner */\n      dup3\n      swap1\n        /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"MoonCats_flat.sol\":6705:6721  address oldOwner */\n      0x00\n      swap1\n        /* \"MoonCats_flat.sol\":6772:6812  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"MoonCats_flat.sol\":6695:6819  {... */\n      pop\n        /* \"MoonCats_flat.sol\":6632:6819  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":34229:34536  function _setApprovalForAll(... */\n    tag_199:\n        /* \"MoonCats_flat.sol\":34379:34387  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34370:34387  owner != operator */\n      and\n        /* \"MoonCats_flat.sol\":34370:34375  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34370:34387  owner != operator */\n      and\n      eq\n      iszero\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_268\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7761:7763   */\n      0x20\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7743:7764   */\n      mstore\n        /* \"#utility.yul\":7800:7802   */\n      0x19\n        /* \"#utility.yul\":7780:7798   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7773:7803   */\n      mstore\n        /* \"#utility.yul\":7839:7866   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":7819:7837   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7812:7867   */\n      mstore\n        /* \"#utility.yul\":7884:7902   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_131\n        /* \"#utility.yul\":7559:7908   */\n      jump\n        /* \"MoonCats_flat.sol\":34362:34417  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":34427:34452  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":34427:34445  _operatorApprovals */\n      0x05\n        /* \"MoonCats_flat.sol\":34427:34452  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"MoonCats_flat.sol\":34427:34462  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"MoonCats_flat.sol\":34427:34473  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":5695:5736   */\n      swap2\n      dup3\n      mstore\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":5668:5686   */\n      add\n        /* \"MoonCats_flat.sol\":34488:34529  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MoonCats_flat.sol\":34229:34536  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":29462:29769  function _safeTransfer(... */\n    tag_206:\n        /* \"MoonCats_flat.sol\":29613:29641  _transfer(from, to, tokenId) */\n      tag_273\n        /* \"MoonCats_flat.sol\":29623:29627  from */\n      dup5\n        /* \"MoonCats_flat.sol\":29629:29631  to */\n      dup5\n        /* \"MoonCats_flat.sol\":29633:29640  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":29613:29622  _transfer */\n      tag_156\n        /* \"MoonCats_flat.sol\":29613:29641  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_273:\n        /* \"MoonCats_flat.sol\":29659:29707  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_274\n        /* \"MoonCats_flat.sol\":29682:29686  from */\n      dup5\n        /* \"MoonCats_flat.sol\":29688:29690  to */\n      dup5\n        /* \"MoonCats_flat.sol\":29692:29699  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":29701:29706  _data */\n      dup5\n        /* \"MoonCats_flat.sol\":29659:29681  _checkOnERC721Received */\n      tag_275\n        /* \"MoonCats_flat.sol\":29659:29707  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_274:\n        /* \"MoonCats_flat.sol\":29651:29762  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_278\n      jump\t// in\n        /* \"MoonCats_flat.sol\":37800:38463  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_209:\n        /* \"MoonCats_flat.sol\":37873:37886  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":37906:37922  _exists(tokenId) */\n      tag_280\n        /* \"MoonCats_flat.sol\":37914:37921  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":37906:37913  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":37906:37922  _exists(tokenId) */\n      jump\t// in\n    tag_280:\n        /* \"MoonCats_flat.sol\":37898:37976  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10550:10552   */\n      0x20\n        /* \"MoonCats_flat.sol\":37898:37976  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10532:10553   */\n      mstore\n        /* \"#utility.yul\":10589:10591   */\n      0x31\n        /* \"#utility.yul\":10569:10587   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10562:10592   */\n      mstore\n        /* \"#utility.yul\":10628:10662   */\n      0x45524337323155524953746f726167653a2055524920717565727920666f7220\n        /* \"#utility.yul\":10608:10626   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10601:10663   */\n      mstore\n      shl(0x79, 0x3737b732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":10679:10697   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10672:10719   */\n      mstore\n        /* \"#utility.yul\":10736:10755   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":37898:37976  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_131\n        /* \"#utility.yul\":10348:10761   */\n      jump\n        /* \"MoonCats_flat.sol\":37898:37976  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n    tag_281:\n        /* \"MoonCats_flat.sol\":37987:38010  string memory _tokenURI */\n      0x00\n        /* \"MoonCats_flat.sol\":38013:38032  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":38013:38023  _tokenURIs */\n      0x06\n        /* \"MoonCats_flat.sol\":38013:38032  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":37987:38032  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_284\n      swap1\n      tag_122\n      jump\t// in\n    tag_284:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_285\n      swap1\n      tag_122\n      jump\t// in\n    tag_285:\n      dup1\n      iszero\n      tag_286\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_287\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_286)\n    tag_287:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_288:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_288\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":38042:38060  string memory base */\n      0x00\n        /* \"MoonCats_flat.sol\":38063:38073  _baseURI() */\n      tag_289\n        /* \"MoonCats_flat.sol\":26377:26386  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MoonCats_flat.sol\":26301:26393  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MoonCats_flat.sol\":38063:38073  _baseURI() */\n    tag_289:\n        /* \"MoonCats_flat.sol\":38042:38073  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":38152:38156  base */\n      dup1\n        /* \"MoonCats_flat.sol\":38146:38164  bytes(base).length */\n      mload\n        /* \"MoonCats_flat.sol\":38168:38169  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":38146:38169  bytes(base).length == 0 */\n      eq\n        /* \"MoonCats_flat.sol\":38142:38212  if (bytes(base).length == 0) {... */\n      iszero\n      tag_291\n      jumpi\n      pop\n        /* \"MoonCats_flat.sol\":38192:38201  _tokenURI */\n      swap3\n        /* \"MoonCats_flat.sol\":37800:38463  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":38142:38212  if (bytes(base).length == 0) {... */\n    tag_291:\n        /* \"MoonCats_flat.sol\":38314:38337  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"MoonCats_flat.sol\":38314:38341  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"MoonCats_flat.sol\":38310:38416  if (bytes(_tokenURI).length > 0) {... */\n      tag_292\n      jumpi\n        /* \"MoonCats_flat.sol\":38388:38392  base */\n      dup1\n        /* \"MoonCats_flat.sol\":38394:38403  _tokenURI */\n      dup3\n        /* \"MoonCats_flat.sol\":38371:38404  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_293\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MoonCats_flat.sol\":38357:38405  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":37800:38463  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":38310:38416  if (bytes(_tokenURI).length > 0) {... */\n    tag_292:\n        /* \"MoonCats_flat.sol\":38433:38456  super.tokenURI(tokenId) */\n      tag_247\n        /* \"MoonCats_flat.sol\":38448:38455  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":38433:38447  super.tokenURI */\n      tag_296\n        /* \"MoonCats_flat.sol\":38433:38456  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":31029:31137  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_219:\n        /* \"MoonCats_flat.sol\":31104:31130  _safeMint(to, tokenId, \"\") */\n      tag_197\n        /* \"MoonCats_flat.sol\":31114:31116  to */\n      dup3\n        /* \"MoonCats_flat.sol\":31118:31125  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":31104:31130  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"MoonCats_flat.sol\":31104:31113  _safeMint */\n      tag_301\n        /* \"MoonCats_flat.sol\":31104:31130  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"MoonCats_flat.sol\":38610:38824  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_221:\n        /* \"MoonCats_flat.sol\":38709:38725  _exists(tokenId) */\n      tag_303\n        /* \"MoonCats_flat.sol\":38717:38724  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":38709:38716  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":38709:38725  _exists(tokenId) */\n      jump\t// in\n    tag_303:\n        /* \"MoonCats_flat.sol\":38701:38776  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9774:9776   */\n      0x20\n        /* \"MoonCats_flat.sol\":38701:38776  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9756:9777   */\n      mstore\n        /* \"#utility.yul\":9813:9815   */\n      0x2e\n        /* \"#utility.yul\":9793:9811   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9786:9816   */\n      mstore\n        /* \"#utility.yul\":9852:9886   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":9832:9850   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9825:9887   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":9903:9921   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9896:9940   */\n      mstore\n        /* \"#utility.yul\":9957:9976   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":38701:38776  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_131\n        /* \"#utility.yul\":9572:9982   */\n      jump\n        /* \"MoonCats_flat.sol\":38701:38776  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_304:\n        /* \"MoonCats_flat.sol\":38786:38805  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":38786:38796  _tokenURIs */\n      0x06\n        /* \"MoonCats_flat.sol\":38786:38805  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"MoonCats_flat.sol\":38786:38817  _tokenURIs[tokenId] = _tokenURI */\n      dup3\n      mload\n      tag_146\n      swap3\n      dup5\n      add\n      swap1\n      tag_308\n      jump\t// in\n        /* \"MoonCats_flat.sol\":39041:39241  function _burn(uint256 tokenId) internal virtual override {... */\n    tag_265:\n        /* \"MoonCats_flat.sol\":39109:39129  super._burn(tokenId) */\n      tag_311\n        /* \"MoonCats_flat.sol\":39121:39128  tokenId */\n      dup2\n        /* \"MoonCats_flat.sol\":39109:39120  super._burn */\n      tag_312\n        /* \"MoonCats_flat.sol\":39109:39129  super._burn(tokenId) */\n      jump\t// in\n    tag_311:\n        /* \"MoonCats_flat.sol\":39150:39169  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":39150:39160  _tokenURIs */\n      0x06\n        /* \"MoonCats_flat.sol\":39150:39169  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"MoonCats_flat.sol\":39144:39177  bytes(_tokenURIs[tokenId]).length */\n      dup1\n      sload\n      tag_313\n      swap1\n      tag_122\n      jump\t// in\n    tag_313:\n        /* \"MoonCats_flat.sol\":39144:39182  bytes(_tokenURIs[tokenId]).length != 0 */\n      iszero\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":39140:39235  if (bytes(_tokenURIs[tokenId]).length != 0) {... */\n      tag_170\n      jumpi\n        /* \"MoonCats_flat.sol\":39205:39224  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":39205:39215  _tokenURIs */\n      0x06\n        /* \"MoonCats_flat.sol\":39205:39224  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":39198:39224  delete _tokenURIs[tokenId] */\n      tag_170\n      swap2\n      tag_316\n      jump\t// in\n        /* \"MoonCats_flat.sol\":35089:35867  function _checkOnERC721Received(... */\n    tag_275:\n        /* \"MoonCats_flat.sol\":35239:35243  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":35259:35272  to.isContract */\n      dup5\n      and\n        /* \"MoonCats_flat.sol\":7931:7951  extcodesize(account) */\n      extcodesize\n        /* \"MoonCats_flat.sol\":7977:7985  size > 0 */\n      iszero\n        /* \"MoonCats_flat.sol\":35255:35861  if (to.isContract()) {... */\n      tag_320\n      jumpi\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":35294:35330  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_322\n      swap1\n        /* \"MoonCats_flat.sol\":4245:4255  msg.sender */\n      caller\n      swap1\n        /* \"MoonCats_flat.sol\":35345:35349  from */\n      dup10\n      swap1\n        /* \"MoonCats_flat.sol\":35351:35358  tokenId */\n      dup9\n      swap1\n        /* \"MoonCats_flat.sol\":35360:35365  _data */\n      dup9\n      swap1\n        /* \"MoonCats_flat.sol\":35294:35366  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_323\n      jump\t// in\n    tag_322:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_324:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_325\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_326\n      swap2\n      dup2\n      add\n      swap1\n      tag_327\n      jump\t// in\n    tag_326:\n      0x01\n    tag_325:\n        /* \"MoonCats_flat.sol\":35290:35809  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_328\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_333\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_332)\n    tag_333:\n      0x60\n      swap2\n      pop\n    tag_332:\n      pop\n        /* \"MoonCats_flat.sol\":35533:35546  reason.length */\n      dup1\n      mload\n        /* \"MoonCats_flat.sol\":35529:35795  if (reason.length == 0) {... */\n      tag_334\n      jumpi\n        /* \"MoonCats_flat.sol\":35575:35635  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_278\n      jump\t// in\n        /* \"MoonCats_flat.sol\":35529:35795  if (reason.length == 0) {... */\n    tag_334:\n        /* \"MoonCats_flat.sol\":35747:35753  reason */\n      dup1\n        /* \"MoonCats_flat.sol\":35741:35754  mload(reason) */\n      mload\n        /* \"MoonCats_flat.sol\":35732:35738  reason */\n      dup2\n        /* \"MoonCats_flat.sol\":35728:35730  32 */\n      0x20\n        /* \"MoonCats_flat.sol\":35724:35739  add(32, reason) */\n      add\n        /* \"MoonCats_flat.sol\":35717:35755  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"MoonCats_flat.sol\":35290:35809  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_328:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"MoonCats_flat.sol\":35416:35467  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":35409:35467  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_247)\n        /* \"MoonCats_flat.sol\":35255:35861  if (to.isContract()) {... */\n    tag_320:\n      pop\n        /* \"MoonCats_flat.sol\":35846:35850  true */\n      0x01\n        /* \"MoonCats_flat.sol\":35089:35867  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":25731:26060  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_296:\n        /* \"MoonCats_flat.sol\":25804:25817  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":25837:25853  _exists(tokenId) */\n      tag_341\n        /* \"MoonCats_flat.sol\":25845:25852  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":25837:25844  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":25837:25853  _exists(tokenId) */\n      jump\t// in\n    tag_341:\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12152:12154   */\n      0x20\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12134:12155   */\n      mstore\n        /* \"#utility.yul\":12191:12193   */\n      0x2f\n        /* \"#utility.yul\":12171:12189   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12164:12194   */\n      mstore\n        /* \"#utility.yul\":12230:12264   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":12210:12228   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12203:12265   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":12281:12299   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12274:12319   */\n      mstore\n        /* \"#utility.yul\":12336:12355   */\n      0x84\n      add\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_131\n        /* \"#utility.yul\":11950:12361   */\n      jump\n        /* \"MoonCats_flat.sol\":25829:25905  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_342:\n        /* \"MoonCats_flat.sol\":25916:25937  string memory baseURI */\n      0x00\n        /* \"MoonCats_flat.sol\":25940:25950  _baseURI() */\n      tag_345\n        /* \"MoonCats_flat.sol\":26377:26386  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"MoonCats_flat.sol\":26301:26393  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"MoonCats_flat.sol\":25940:25950  _baseURI() */\n    tag_345:\n        /* \"MoonCats_flat.sol\":25916:25950  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":25991:25992  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":25973:25980  baseURI */\n      dup2\n        /* \"MoonCats_flat.sol\":25967:25988  bytes(baseURI).length */\n      mload\n        /* \"MoonCats_flat.sol\":25967:25992  bytes(baseURI).length > 0 */\n      gt\n        /* \"MoonCats_flat.sol\":25967:26053  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_346\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_347)\n    tag_346:\n        /* \"MoonCats_flat.sol\":26019:26026  baseURI */\n      dup1\n        /* \"MoonCats_flat.sol\":26028:26046  tokenId.toString() */\n      tag_348\n        /* \"MoonCats_flat.sol\":26028:26035  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":26028:26044  tokenId.toString */\n      tag_349\n        /* \"MoonCats_flat.sol\":26028:26046  tokenId.toString() */\n      jump\t// in\n    tag_348:\n        /* \"MoonCats_flat.sol\":26002:26047  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_350\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"MoonCats_flat.sol\":25967:26053  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_347:\n        /* \"MoonCats_flat.sol\":25960:26053  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"MoonCats_flat.sol\":25731:26060  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":31358:31669  function _safeMint(... */\n    tag_301:\n        /* \"MoonCats_flat.sol\":31483:31501  _mint(to, tokenId) */\n      tag_352\n        /* \"MoonCats_flat.sol\":31489:31491  to */\n      dup4\n        /* \"MoonCats_flat.sol\":31493:31500  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":31483:31488  _mint */\n      tag_353\n        /* \"MoonCats_flat.sol\":31483:31501  _mint(to, tokenId) */\n      jump\t// in\n    tag_352:\n        /* \"MoonCats_flat.sol\":31532:31586  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      tag_354\n        /* \"MoonCats_flat.sol\":31563:31564  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":31567:31569  to */\n      dup5\n        /* \"MoonCats_flat.sol\":31571:31578  tokenId */\n      dup5\n        /* \"MoonCats_flat.sol\":31580:31585  _data */\n      dup5\n        /* \"MoonCats_flat.sol\":31532:31554  _checkOnERC721Received */\n      tag_275\n        /* \"MoonCats_flat.sol\":31532:31586  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      jump\t// in\n    tag_354:\n        /* \"MoonCats_flat.sol\":31511:31662  require(... */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_278\n      jump\t// in\n        /* \"MoonCats_flat.sol\":32580:32928  function _burn(uint256 tokenId) internal virtual {... */\n    tag_312:\n        /* \"MoonCats_flat.sol\":32639:32652  address owner */\n      0x00\n        /* \"MoonCats_flat.sol\":32655:32678  ERC721.ownerOf(tokenId) */\n      tag_358\n        /* \"MoonCats_flat.sol\":32670:32677  tokenId */\n      dup3\n        /* \"MoonCats_flat.sol\":32655:32669  ERC721.ownerOf */\n      tag_66\n        /* \"MoonCats_flat.sol\":32655:32678  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_358:\n        /* \"MoonCats_flat.sol\":32639:32678  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":32775:32804  _approve(address(0), tokenId) */\n      tag_360\n        /* \"MoonCats_flat.sol\":32792:32793  0 */\n      0x00\n        /* \"MoonCats_flat.sol\":32796:32803  tokenId */\n      dup4\n        /* \"MoonCats_flat.sol\":32775:32783  _approve */\n      tag_147\n        /* \"MoonCats_flat.sol\":32775:32804  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_360:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":32815:32831  _balances[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":32815:32824  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":32815:32831  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":32815:32836  _balances[owner] -= 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":32835:32836  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":32815:32831  _balances[owner] */\n      swap1\n        /* \"MoonCats_flat.sol\":32815:32836  _balances[owner] -= 1 */\n      tag_361\n      swap1\n        /* \"MoonCats_flat.sol\":32835:32836  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":32815:32836  _balances[owner] -= 1 */\n      tag_260\n      jump\t// in\n    tag_361:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":32853:32869  _owners[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":32853:32860  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":32853:32869  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MoonCats_flat.sol\":32846:32869  delete _owners[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"MoonCats_flat.sol\":32885:32921  Transfer(owner, address(0), tokenId) */\n      mload\n        /* \"MoonCats_flat.sol\":32861:32868  tokenId */\n      dup4\n      swap2\n        /* \"MoonCats_flat.sol\":32853:32869  _owners[tokenId] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":32885:32921  Transfer(owner, address(0), tokenId) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"MoonCats_flat.sol\":32853:32869  _owners[tokenId] */\n      dup4\n      swap1\n        /* \"MoonCats_flat.sol\":32885:32921  Transfer(owner, address(0), tokenId) */\n      log4\n        /* \"MoonCats_flat.sol\":32629:32928  {... */\n      pop\n        /* \"MoonCats_flat.sol\":32580:32928  function _burn(uint256 tokenId) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"MoonCats_flat.sol\":1800:2503  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_349:\n        /* \"MoonCats_flat.sol\":1856:1869  string memory */\n      0x60\n        /* \"MoonCats_flat.sol\":2073:2083  value == 0 */\n      dup2\n        /* \"MoonCats_flat.sol\":2069:2120  if (value == 0) {... */\n      tag_364\n      jumpi\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":2099:2109  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"MoonCats_flat.sol\":1800:2503  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"MoonCats_flat.sol\":2069:2120  if (value == 0) {... */\n    tag_364:\n        /* \"MoonCats_flat.sol\":2144:2149  value */\n      dup2\n        /* \"MoonCats_flat.sol\":2129:2141  uint256 temp */\n      0x00\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n    tag_365:\n        /* \"MoonCats_flat.sol\":2190:2199  temp != 0 */\n      dup2\n      iszero\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n      tag_366\n      jumpi\n        /* \"MoonCats_flat.sol\":2215:2223  digits++ */\n      dup1\n      tag_367\n      dup2\n      tag_368\n      jump\t// in\n    tag_367:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2237:2247  temp /= 10 */\n      tag_369\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":2245:2247  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2237:2247  temp /= 10 */\n      dup4\n      tag_370\n      jump\t// in\n    tag_369:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2183:2258  while (temp != 0) {... */\n      jump(tag_365)\n    tag_366:\n        /* \"MoonCats_flat.sol\":2267:2286  bytes memory buffer */\n      0x00\n        /* \"MoonCats_flat.sol\":2299:2305  digits */\n      dup2\n        /* \"MoonCats_flat.sol\":2289:2306  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_372\n      jumpi\n      tag_372\n      tag_373\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_374\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_374:\n      pop\n        /* \"MoonCats_flat.sol\":2267:2306  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n    tag_375:\n        /* \"MoonCats_flat.sol\":2323:2333  value != 0 */\n      dup5\n      iszero\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n      tag_247\n      jumpi\n        /* \"MoonCats_flat.sol\":2349:2360  digits -= 1 */\n      tag_377\n        /* \"MoonCats_flat.sol\":2359:2360  1 */\n      0x01\n        /* \"MoonCats_flat.sol\":2349:2360  digits -= 1 */\n      dup4\n      tag_260\n      jump\t// in\n    tag_377:\n      swap2\n      pop\n        /* \"MoonCats_flat.sol\":2417:2427  value % 10 */\n      tag_378\n        /* \"MoonCats_flat.sol\":2425:2427  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2417:2422  value */\n      dup7\n        /* \"MoonCats_flat.sol\":2417:2427  value % 10 */\n      tag_379\n      jump\t// in\n    tag_378:\n        /* \"MoonCats_flat.sol\":2404:2428  48 + uint256(value % 10) */\n      tag_380\n      swap1\n        /* \"MoonCats_flat.sol\":2404:2406  48 */\n      0x30\n        /* \"MoonCats_flat.sol\":2404:2428  48 + uint256(value % 10) */\n      tag_262\n      jump\t// in\n    tag_380:\n        /* \"MoonCats_flat.sol\":2391:2430  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"MoonCats_flat.sol\":2374:2380  buffer */\n      dup2\n        /* \"MoonCats_flat.sol\":2381:2387  digits */\n      dup4\n        /* \"MoonCats_flat.sol\":2374:2388  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_382\n      jumpi\n      tag_382\n      tag_383\n      jump\t// in\n    tag_382:\n      0x20\n      add\n      add\n        /* \"MoonCats_flat.sol\":2374:2430  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"MoonCats_flat.sol\":2444:2455  value /= 10 */\n      tag_384\n        /* \"MoonCats_flat.sol\":2453:2455  10 */\n      0x0a\n        /* \"MoonCats_flat.sol\":2444:2455  value /= 10 */\n      dup7\n      tag_370\n      jump\t// in\n    tag_384:\n      swap5\n      pop\n        /* \"MoonCats_flat.sol\":2316:2466  while (value != 0) {... */\n      jump(tag_375)\n        /* \"MoonCats_flat.sol\":31991:32363  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":32070:32086  to != address(0) */\n      dup3\n      and\n        /* \"MoonCats_flat.sol\":32062:32123  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10189:10191   */\n      0x20\n        /* \"MoonCats_flat.sol\":32062:32123  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10171:10192   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10208:10226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10201:10231   */\n      mstore\n        /* \"#utility.yul\":10267:10301   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":10247:10265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10240:10302   */\n      mstore\n        /* \"#utility.yul\":10319:10337   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":32062:32123  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_131\n        /* \"#utility.yul\":9987:10343   */\n      jump\n        /* \"MoonCats_flat.sol\":32062:32123  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_386:\n        /* \"MoonCats_flat.sol\":32142:32158  _exists(tokenId) */\n      tag_389\n        /* \"MoonCats_flat.sol\":32150:32157  tokenId */\n      dup2\n        /* \"MoonCats_flat.sol\":32142:32149  _exists */\n      tag_129\n        /* \"MoonCats_flat.sol\":32142:32158  _exists(tokenId) */\n      jump\t// in\n    tag_389:\n        /* \"MoonCats_flat.sol\":32141:32158  !_exists(tokenId) */\n      iszero\n        /* \"MoonCats_flat.sol\":32133:32191  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_390\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6999:7001   */\n      0x20\n        /* \"MoonCats_flat.sol\":32133:32191  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6981:7002   */\n      mstore\n        /* \"#utility.yul\":7038:7040   */\n      0x1c\n        /* \"#utility.yul\":7018:7036   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7011:7041   */\n      mstore\n        /* \"#utility.yul\":7077:7107   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":7057:7075   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7050:7108   */\n      mstore\n        /* \"#utility.yul\":7125:7143   */\n      0x64\n      add\n        /* \"MoonCats_flat.sol\":32133:32191  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_131\n        /* \"#utility.yul\":6797:7149   */\n      jump\n        /* \"MoonCats_flat.sol\":32133:32191  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_390:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"MoonCats_flat.sol\":32258:32271  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":32258:32267  _balances */\n      0x03\n        /* \"MoonCats_flat.sol\":32258:32271  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"MoonCats_flat.sol\":32258:32276  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"MoonCats_flat.sol\":32275:32276  1 */\n      0x01\n      swap3\n        /* \"MoonCats_flat.sol\":32258:32271  _balances[to] */\n      swap1\n        /* \"MoonCats_flat.sol\":32258:32276  _balances[to] += 1 */\n      tag_394\n      swap1\n        /* \"MoonCats_flat.sol\":32275:32276  1 */\n      dup5\n      swap1\n        /* \"MoonCats_flat.sol\":32258:32276  _balances[to] += 1 */\n      tag_262\n      jump\t// in\n    tag_394:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"MoonCats_flat.sol\":32286:32302  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"MoonCats_flat.sol\":32286:32293  _owners */\n      0x02\n        /* \"MoonCats_flat.sol\":32286:32302  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"MoonCats_flat.sol\":32286:32307  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"MoonCats_flat.sol\":32323:32356  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"MoonCats_flat.sol\":32286:32302  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"MoonCats_flat.sol\":32323:32356  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"MoonCats_flat.sol\":32286:32302  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"MoonCats_flat.sol\":32323:32356  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"MoonCats_flat.sol\":31991:32363  function _mint(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n    tag_308:\n      dup3\n      dup1\n      sload\n      tag_395\n      swap1\n      tag_122\n      jump\t// in\n    tag_395:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_397\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_400)\n    tag_397:\n      dup3\n      0x1f\n      lt\n      tag_398\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_400)\n    tag_398:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_400\n      jumpi\n      swap2\n      dup3\n      add\n    tag_399:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_400\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_399)\n    tag_400:\n      pop\n      tag_401\n      swap3\n      swap2\n      pop\n      tag_402\n      jump\t// in\n    tag_401:\n      pop\n      swap1\n      jump\t// out\n    tag_316:\n      pop\n      dup1\n      sload\n      tag_403\n      swap1\n      tag_122\n      jump\t// in\n    tag_403:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_405\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_405:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n    tag_402:\n    tag_407:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_401\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_407)\n        /* \"#utility.yul\":14:645   */\n    tag_410:\n        /* \"#utility.yul\":78:83   */\n      0x00\n        /* \"#utility.yul\":108:126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":149:151   */\n      dup1\n        /* \"#utility.yul\":141:147   */\n      dup5\n        /* \"#utility.yul\":138:152   */\n      gt\n        /* \"#utility.yul\":135:175   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":155:173   */\n      tag_413\n      tag_373\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":230:232   */\n      0x40\n        /* \"#utility.yul\":224:233   */\n      mload\n        /* \"#utility.yul\":198:200   */\n      0x1f\n        /* \"#utility.yul\":284:299   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":280:304   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":306:308   */\n      0x3f\n        /* \"#utility.yul\":276:309   */\n      add\n        /* \"#utility.yul\":272:314   */\n      and\n        /* \"#utility.yul\":260:315   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":330:348   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":350:372   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":327:373   */\n      or\n        /* \"#utility.yul\":324:396   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":376:394   */\n      tag_415\n      tag_373\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":416:426   */\n      dup2\n        /* \"#utility.yul\":412:414   */\n      0x40\n        /* \"#utility.yul\":405:427   */\n      mstore\n        /* \"#utility.yul\":445:451   */\n      dup1\n        /* \"#utility.yul\":436:451   */\n      swap4\n      pop\n        /* \"#utility.yul\":475:481   */\n      dup6\n        /* \"#utility.yul\":467:473   */\n      dup2\n        /* \"#utility.yul\":460:482   */\n      mstore\n        /* \"#utility.yul\":515:518   */\n      dup7\n        /* \"#utility.yul\":506:512   */\n      dup7\n        /* \"#utility.yul\":501:504   */\n      dup7\n        /* \"#utility.yul\":497:513   */\n      add\n        /* \"#utility.yul\":494:519   */\n      gt\n        /* \"#utility.yul\":491:536   */\n      iszero\n      tag_416\n      jumpi\n        /* \"#utility.yul\":532:533   */\n      0x00\n        /* \"#utility.yul\":529:530   */\n      dup1\n        /* \"#utility.yul\":522:534   */\n      revert\n        /* \"#utility.yul\":491:536   */\n    tag_416:\n        /* \"#utility.yul\":582:588   */\n      dup6\n        /* \"#utility.yul\":577:580   */\n      dup6\n        /* \"#utility.yul\":570:574   */\n      0x20\n        /* \"#utility.yul\":562:568   */\n      dup4\n        /* \"#utility.yul\":558:575   */\n      add\n        /* \"#utility.yul\":545:589   */\n      calldatacopy\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":630:634   */\n      0x20\n        /* \"#utility.yul\":621:627   */\n      dup8\n        /* \"#utility.yul\":613:619   */\n      dup4\n        /* \"#utility.yul\":609:628   */\n      add\n        /* \"#utility.yul\":605:635   */\n      add\n        /* \"#utility.yul\":598:639   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":650:823   */\n    tag_417:\n        /* \"#utility.yul\":718:738   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":767:798   */\n      dup2\n      and\n        /* \"#utility.yul\":757:799   */\n      dup2\n      eq\n        /* \"#utility.yul\":747:817   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":747:817   */\n    tag_419:\n        /* \"#utility.yul\":650:823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":828:1014   */\n    tag_71:\n        /* \"#utility.yul\":887:893   */\n      0x00\n        /* \"#utility.yul\":940:942   */\n      0x20\n        /* \"#utility.yul\":928:937   */\n      dup3\n        /* \"#utility.yul\":919:926   */\n      dup5\n        /* \"#utility.yul\":915:938   */\n      sub\n        /* \"#utility.yul\":911:943   */\n      slt\n        /* \"#utility.yul\":908:960   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":956:957   */\n      0x00\n        /* \"#utility.yul\":953:954   */\n      dup1\n        /* \"#utility.yul\":946:958   */\n      revert\n        /* \"#utility.yul\":908:960   */\n    tag_421:\n        /* \"#utility.yul\":979:1008   */\n      tag_347\n        /* \"#utility.yul\":998:1007   */\n      dup3\n        /* \"#utility.yul\":979:1008   */\n      tag_417\n      jump\t// in\n        /* \"#utility.yul\":1019:1279   */\n    tag_108:\n        /* \"#utility.yul\":1087:1093   */\n      0x00\n        /* \"#utility.yul\":1095:1101   */\n      dup1\n        /* \"#utility.yul\":1148:1150   */\n      0x40\n        /* \"#utility.yul\":1136:1145   */\n      dup4\n        /* \"#utility.yul\":1127:1134   */\n      dup6\n        /* \"#utility.yul\":1123:1146   */\n      sub\n        /* \"#utility.yul\":1119:1151   */\n      slt\n        /* \"#utility.yul\":1116:1168   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1164:1165   */\n      0x00\n        /* \"#utility.yul\":1161:1162   */\n      dup1\n        /* \"#utility.yul\":1154:1166   */\n      revert\n        /* \"#utility.yul\":1116:1168   */\n    tag_424:\n        /* \"#utility.yul\":1187:1216   */\n      tag_425\n        /* \"#utility.yul\":1206:1215   */\n      dup4\n        /* \"#utility.yul\":1187:1216   */\n      tag_417\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1177:1216   */\n      swap2\n      pop\n        /* \"#utility.yul\":1235:1273   */\n      tag_426\n        /* \"#utility.yul\":1269:1271   */\n      0x20\n        /* \"#utility.yul\":1258:1267   */\n      dup5\n        /* \"#utility.yul\":1254:1272   */\n      add\n        /* \"#utility.yul\":1235:1273   */\n      tag_417\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1225:1273   */\n      swap1\n      pop\n        /* \"#utility.yul\":1019:1279   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1284:1612   */\n    tag_51:\n        /* \"#utility.yul\":1361:1367   */\n      0x00\n        /* \"#utility.yul\":1369:1375   */\n      dup1\n        /* \"#utility.yul\":1377:1383   */\n      0x00\n        /* \"#utility.yul\":1430:1432   */\n      0x60\n        /* \"#utility.yul\":1418:1427   */\n      dup5\n        /* \"#utility.yul\":1409:1416   */\n      dup7\n        /* \"#utility.yul\":1405:1428   */\n      sub\n        /* \"#utility.yul\":1401:1433   */\n      slt\n        /* \"#utility.yul\":1398:1450   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":1446:1447   */\n      0x00\n        /* \"#utility.yul\":1443:1444   */\n      dup1\n        /* \"#utility.yul\":1436:1448   */\n      revert\n        /* \"#utility.yul\":1398:1450   */\n    tag_428:\n        /* \"#utility.yul\":1469:1498   */\n      tag_429\n        /* \"#utility.yul\":1488:1497   */\n      dup5\n        /* \"#utility.yul\":1469:1498   */\n      tag_417\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":1459:1498   */\n      swap3\n      pop\n        /* \"#utility.yul\":1517:1555   */\n      tag_430\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1540:1549   */\n      dup6\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"#utility.yul\":1517:1555   */\n      tag_417\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1507:1555   */\n      swap2\n      pop\n        /* \"#utility.yul\":1602:1604   */\n      0x40\n        /* \"#utility.yul\":1591:1600   */\n      dup5\n        /* \"#utility.yul\":1587:1605   */\n      add\n        /* \"#utility.yul\":1574:1606   */\n      calldataload\n        /* \"#utility.yul\":1564:1606   */\n      swap1\n      pop\n        /* \"#utility.yul\":1284:1612   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1617:2283   */\n    tag_94:\n        /* \"#utility.yul\":1712:1718   */\n      0x00\n        /* \"#utility.yul\":1720:1726   */\n      dup1\n        /* \"#utility.yul\":1728:1734   */\n      0x00\n        /* \"#utility.yul\":1736:1742   */\n      dup1\n        /* \"#utility.yul\":1789:1792   */\n      0x80\n        /* \"#utility.yul\":1777:1786   */\n      dup6\n        /* \"#utility.yul\":1768:1775   */\n      dup8\n        /* \"#utility.yul\":1764:1787   */\n      sub\n        /* \"#utility.yul\":1760:1793   */\n      slt\n        /* \"#utility.yul\":1757:1810   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":1806:1807   */\n      0x00\n        /* \"#utility.yul\":1803:1804   */\n      dup1\n        /* \"#utility.yul\":1796:1808   */\n      revert\n        /* \"#utility.yul\":1757:1810   */\n    tag_432:\n        /* \"#utility.yul\":1829:1858   */\n      tag_433\n        /* \"#utility.yul\":1848:1857   */\n      dup6\n        /* \"#utility.yul\":1829:1858   */\n      tag_417\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1819:1858   */\n      swap4\n      pop\n        /* \"#utility.yul\":1877:1915   */\n      tag_434\n        /* \"#utility.yul\":1911:1913   */\n      0x20\n        /* \"#utility.yul\":1900:1909   */\n      dup7\n        /* \"#utility.yul\":1896:1914   */\n      add\n        /* \"#utility.yul\":1877:1915   */\n      tag_417\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1867:1915   */\n      swap3\n      pop\n        /* \"#utility.yul\":1962:1964   */\n      0x40\n        /* \"#utility.yul\":1951:1960   */\n      dup6\n        /* \"#utility.yul\":1947:1965   */\n      add\n        /* \"#utility.yul\":1934:1966   */\n      calldataload\n        /* \"#utility.yul\":1924:1966   */\n      swap2\n      pop\n        /* \"#utility.yul\":2017:2019   */\n      0x60\n        /* \"#utility.yul\":2006:2015   */\n      dup6\n        /* \"#utility.yul\":2002:2020   */\n      add\n        /* \"#utility.yul\":1989:2021   */\n      calldataload\n        /* \"#utility.yul\":2044:2062   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2036:2042   */\n      dup2\n        /* \"#utility.yul\":2033:2063   */\n      gt\n        /* \"#utility.yul\":2030:2080   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2076:2077   */\n      0x00\n        /* \"#utility.yul\":2073:2074   */\n      dup1\n        /* \"#utility.yul\":2066:2078   */\n      revert\n        /* \"#utility.yul\":2030:2080   */\n    tag_435:\n        /* \"#utility.yul\":2099:2121   */\n      dup6\n      add\n        /* \"#utility.yul\":2152:2156   */\n      0x1f\n        /* \"#utility.yul\":2144:2157   */\n      dup2\n      add\n        /* \"#utility.yul\":2140:2167   */\n      dup8\n      sgt\n        /* \"#utility.yul\":2130:2185   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2130:2185   */\n    tag_436:\n        /* \"#utility.yul\":2204:2277   */\n      tag_437\n        /* \"#utility.yul\":2269:2276   */\n      dup8\n        /* \"#utility.yul\":2264:2266   */\n      dup3\n        /* \"#utility.yul\":2251:2267   */\n      calldataload\n        /* \"#utility.yul\":2246:2248   */\n      0x20\n        /* \"#utility.yul\":2242:2244   */\n      dup5\n        /* \"#utility.yul\":2238:2249   */\n      add\n        /* \"#utility.yul\":2204:2277   */\n      tag_410\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2194:2277   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1617:2283   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2288:2635   */\n    tag_89:\n        /* \"#utility.yul\":2353:2359   */\n      0x00\n        /* \"#utility.yul\":2361:2367   */\n      dup1\n        /* \"#utility.yul\":2414:2416   */\n      0x40\n        /* \"#utility.yul\":2402:2411   */\n      dup4\n        /* \"#utility.yul\":2393:2400   */\n      dup6\n        /* \"#utility.yul\":2389:2412   */\n      sub\n        /* \"#utility.yul\":2385:2417   */\n      slt\n        /* \"#utility.yul\":2382:2434   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":2430:2431   */\n      0x00\n        /* \"#utility.yul\":2427:2428   */\n      dup1\n        /* \"#utility.yul\":2420:2432   */\n      revert\n        /* \"#utility.yul\":2382:2434   */\n    tag_439:\n        /* \"#utility.yul\":2453:2482   */\n      tag_440\n        /* \"#utility.yul\":2472:2481   */\n      dup4\n        /* \"#utility.yul\":2453:2482   */\n      tag_417\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2443:2482   */\n      swap2\n      pop\n        /* \"#utility.yul\":2532:2534   */\n      0x20\n        /* \"#utility.yul\":2521:2530   */\n      dup4\n        /* \"#utility.yul\":2517:2535   */\n      add\n        /* \"#utility.yul\":2504:2536   */\n      calldataload\n        /* \"#utility.yul\":2579:2584   */\n      dup1\n        /* \"#utility.yul\":2572:2585   */\n      iszero\n        /* \"#utility.yul\":2565:2586   */\n      iszero\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2555:2587   */\n      eq\n        /* \"#utility.yul\":2545:2605   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":2601:2602   */\n      0x00\n        /* \"#utility.yul\":2598:2599   */\n      dup1\n        /* \"#utility.yul\":2591:2603   */\n      revert\n        /* \"#utility.yul\":2545:2605   */\n    tag_441:\n        /* \"#utility.yul\":2624:2629   */\n      dup1\n        /* \"#utility.yul\":2614:2629   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2288:2635   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2640:3164   */\n    tag_103:\n        /* \"#utility.yul\":2718:2724   */\n      0x00\n        /* \"#utility.yul\":2726:2732   */\n      dup1\n        /* \"#utility.yul\":2779:2781   */\n      0x40\n        /* \"#utility.yul\":2767:2776   */\n      dup4\n        /* \"#utility.yul\":2758:2765   */\n      dup6\n        /* \"#utility.yul\":2754:2777   */\n      sub\n        /* \"#utility.yul\":2750:2782   */\n      slt\n        /* \"#utility.yul\":2747:2799   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":2795:2796   */\n      0x00\n        /* \"#utility.yul\":2792:2793   */\n      dup1\n        /* \"#utility.yul\":2785:2797   */\n      revert\n        /* \"#utility.yul\":2747:2799   */\n    tag_443:\n        /* \"#utility.yul\":2818:2847   */\n      tag_444\n        /* \"#utility.yul\":2837:2846   */\n      dup4\n        /* \"#utility.yul\":2818:2847   */\n      tag_417\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2808:2847   */\n      swap2\n      pop\n        /* \"#utility.yul\":2898:2900   */\n      0x20\n        /* \"#utility.yul\":2887:2896   */\n      dup4\n        /* \"#utility.yul\":2883:2901   */\n      add\n        /* \"#utility.yul\":2870:2902   */\n      calldataload\n        /* \"#utility.yul\":2925:2943   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2917:2923   */\n      dup2\n        /* \"#utility.yul\":2914:2944   */\n      gt\n        /* \"#utility.yul\":2911:2961   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2957:2958   */\n      0x00\n        /* \"#utility.yul\":2954:2955   */\n      dup1\n        /* \"#utility.yul\":2947:2959   */\n      revert\n        /* \"#utility.yul\":2911:2961   */\n    tag_445:\n        /* \"#utility.yul\":2980:3002   */\n      dup4\n      add\n        /* \"#utility.yul\":3033:3037   */\n      0x1f\n        /* \"#utility.yul\":3025:3038   */\n      dup2\n      add\n        /* \"#utility.yul\":3021:3048   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3011:3066   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":3062:3063   */\n      0x00\n        /* \"#utility.yul\":3059:3060   */\n      dup1\n        /* \"#utility.yul\":3052:3064   */\n      revert\n        /* \"#utility.yul\":3011:3066   */\n    tag_446:\n        /* \"#utility.yul\":3085:3158   */\n      tag_447\n        /* \"#utility.yul\":3150:3157   */\n      dup6\n        /* \"#utility.yul\":3145:3147   */\n      dup3\n        /* \"#utility.yul\":3132:3148   */\n      calldataload\n        /* \"#utility.yul\":3127:3129   */\n      0x20\n        /* \"#utility.yul\":3123:3125   */\n      dup5\n        /* \"#utility.yul\":3119:3130   */\n      add\n        /* \"#utility.yul\":3085:3158   */\n      tag_410\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":3075:3158   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2640:3164   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3169:3423   */\n    tag_46:\n        /* \"#utility.yul\":3237:3243   */\n      0x00\n        /* \"#utility.yul\":3245:3251   */\n      dup1\n        /* \"#utility.yul\":3298:3300   */\n      0x40\n        /* \"#utility.yul\":3286:3295   */\n      dup4\n        /* \"#utility.yul\":3277:3284   */\n      dup6\n        /* \"#utility.yul\":3273:3296   */\n      sub\n        /* \"#utility.yul\":3269:3301   */\n      slt\n        /* \"#utility.yul\":3266:3318   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3314:3315   */\n      0x00\n        /* \"#utility.yul\":3311:3312   */\n      dup1\n        /* \"#utility.yul\":3304:3316   */\n      revert\n        /* \"#utility.yul\":3266:3318   */\n    tag_449:\n        /* \"#utility.yul\":3337:3366   */\n      tag_450\n        /* \"#utility.yul\":3356:3365   */\n      dup4\n        /* \"#utility.yul\":3337:3366   */\n      tag_417\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3327:3366   */\n      swap5\n        /* \"#utility.yul\":3413:3415   */\n      0x20\n        /* \"#utility.yul\":3398:3416   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3385:3417   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3169:3423   */\n      jump\t// out\n        /* \"#utility.yul\":3428:3673   */\n    tag_27:\n        /* \"#utility.yul\":3486:3492   */\n      0x00\n        /* \"#utility.yul\":3539:3541   */\n      0x20\n        /* \"#utility.yul\":3527:3536   */\n      dup3\n        /* \"#utility.yul\":3518:3525   */\n      dup5\n        /* \"#utility.yul\":3514:3537   */\n      sub\n        /* \"#utility.yul\":3510:3542   */\n      slt\n        /* \"#utility.yul\":3507:3559   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":3555:3556   */\n      0x00\n        /* \"#utility.yul\":3552:3553   */\n      dup1\n        /* \"#utility.yul\":3545:3557   */\n      revert\n        /* \"#utility.yul\":3507:3559   */\n    tag_452:\n        /* \"#utility.yul\":3594:3603   */\n      dup2\n        /* \"#utility.yul\":3581:3604   */\n      calldataload\n        /* \"#utility.yul\":3613:3643   */\n      tag_347\n        /* \"#utility.yul\":3637:3642   */\n      dup2\n        /* \"#utility.yul\":3613:3643   */\n      tag_454\n      jump\t// in\n        /* \"#utility.yul\":3678:3927   */\n    tag_327:\n        /* \"#utility.yul\":3747:3753   */\n      0x00\n        /* \"#utility.yul\":3800:3802   */\n      0x20\n        /* \"#utility.yul\":3788:3797   */\n      dup3\n        /* \"#utility.yul\":3779:3786   */\n      dup5\n        /* \"#utility.yul\":3775:3798   */\n      sub\n        /* \"#utility.yul\":3771:3803   */\n      slt\n        /* \"#utility.yul\":3768:3820   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":3816:3817   */\n      0x00\n        /* \"#utility.yul\":3813:3814   */\n      dup1\n        /* \"#utility.yul\":3806:3818   */\n      revert\n        /* \"#utility.yul\":3768:3820   */\n    tag_456:\n        /* \"#utility.yul\":3848:3857   */\n      dup2\n        /* \"#utility.yul\":3842:3858   */\n      mload\n        /* \"#utility.yul\":3867:3897   */\n      tag_347\n        /* \"#utility.yul\":3891:3896   */\n      dup2\n        /* \"#utility.yul\":3867:3897   */\n      tag_454\n      jump\t// in\n        /* \"#utility.yul\":3932:4112   */\n    tag_39:\n        /* \"#utility.yul\":3991:3997   */\n      0x00\n        /* \"#utility.yul\":4044:4046   */\n      0x20\n        /* \"#utility.yul\":4032:4041   */\n      dup3\n        /* \"#utility.yul\":4023:4030   */\n      dup5\n        /* \"#utility.yul\":4019:4042   */\n      sub\n        /* \"#utility.yul\":4015:4047   */\n      slt\n        /* \"#utility.yul\":4012:4064   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":4060:4061   */\n      0x00\n        /* \"#utility.yul\":4057:4058   */\n      dup1\n        /* \"#utility.yul\":4050:4062   */\n      revert\n        /* \"#utility.yul\":4012:4064   */\n    tag_459:\n      pop\n        /* \"#utility.yul\":4083:4106   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3932:4112   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4117:4374   */\n    tag_460:\n        /* \"#utility.yul\":4158:4161   */\n      0x00\n        /* \"#utility.yul\":4196:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4202   */\n      mload\n        /* \"#utility.yul\":4223:4229   */\n      dup1\n        /* \"#utility.yul\":4218:4221   */\n      dup5\n        /* \"#utility.yul\":4211:4230   */\n      mstore\n        /* \"#utility.yul\":4239:4302   */\n      tag_462\n        /* \"#utility.yul\":4295:4301   */\n      dup2\n        /* \"#utility.yul\":4288:4292   */\n      0x20\n        /* \"#utility.yul\":4283:4286   */\n      dup7\n        /* \"#utility.yul\":4279:4293   */\n      add\n        /* \"#utility.yul\":4272:4276   */\n      0x20\n        /* \"#utility.yul\":4265:4270   */\n      dup7\n        /* \"#utility.yul\":4261:4277   */\n      add\n        /* \"#utility.yul\":4239:4302   */\n      tag_463\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":4356:4358   */\n      0x1f\n        /* \"#utility.yul\":4335:4350   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4331:4360   */\n      and\n        /* \"#utility.yul\":4322:4361   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4363:4367   */\n      0x20\n        /* \"#utility.yul\":4318:4368   */\n      add\n      swap3\n        /* \"#utility.yul\":4117:4374   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4849   */\n    tag_294:\n        /* \"#utility.yul\":4558:4561   */\n      0x00\n        /* \"#utility.yul\":4596:4602   */\n      dup4\n        /* \"#utility.yul\":4590:4603   */\n      mload\n        /* \"#utility.yul\":4612:4665   */\n      tag_465\n        /* \"#utility.yul\":4658:4664   */\n      dup2\n        /* \"#utility.yul\":4653:4656   */\n      dup5\n        /* \"#utility.yul\":4646:4650   */\n      0x20\n        /* \"#utility.yul\":4638:4644   */\n      dup9\n        /* \"#utility.yul\":4634:4651   */\n      add\n        /* \"#utility.yul\":4612:4665   */\n      tag_463\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4728:4741   */\n      dup4\n      mload\n        /* \"#utility.yul\":4687:4703   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":4750:4807   */\n      tag_466\n        /* \"#utility.yul\":4728:4741   */\n      dup2\n        /* \"#utility.yul\":4687:4703   */\n      dup4\n        /* \"#utility.yul\":4784:4788   */\n      0x20\n        /* \"#utility.yul\":4772:4789   */\n      dup9\n      add\n        /* \"#utility.yul\":4750:4807   */\n      tag_463\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":4823:4843   */\n      add\n      swap5\n        /* \"#utility.yul\":4379:4849   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5062:5550   */\n    tag_323:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5331:5346   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":5313:5347   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5383:5398   */\n      dup5\n      and\n        /* \"#utility.yul\":5378:5380   */\n      0x20\n        /* \"#utility.yul\":5363:5381   */\n      dup3\n      add\n        /* \"#utility.yul\":5356:5399   */\n      mstore\n        /* \"#utility.yul\":5430:5432   */\n      0x40\n        /* \"#utility.yul\":5415:5433   */\n      dup2\n      add\n        /* \"#utility.yul\":5408:5442   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5478:5481   */\n      0x80\n        /* \"#utility.yul\":5473:5475   */\n      0x60\n        /* \"#utility.yul\":5458:5476   */\n      dup3\n      add\n        /* \"#utility.yul\":5451:5482   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5256:5260   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5499:5544   */\n      tag_469\n      swap1\n        /* \"#utility.yul\":5524:5543   */\n      dup4\n      add\n        /* \"#utility.yul\":5516:5522   */\n      dup5\n        /* \"#utility.yul\":5499:5544   */\n      tag_460\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":5491:5544   */\n      swap7\n        /* \"#utility.yul\":5062:5550   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:5966   */\n    tag_35:\n        /* \"#utility.yul\":5896:5898   */\n      0x20\n        /* \"#utility.yul\":5885:5894   */\n      dup2\n        /* \"#utility.yul\":5878:5899   */\n      mstore\n        /* \"#utility.yul\":5859:5863   */\n      0x00\n        /* \"#utility.yul\":5916:5960   */\n      tag_347\n        /* \"#utility.yul\":5956:5958   */\n      0x20\n        /* \"#utility.yul\":5945:5954   */\n      dup4\n        /* \"#utility.yul\":5941:5959   */\n      add\n        /* \"#utility.yul\":5933:5939   */\n      dup5\n        /* \"#utility.yul\":5916:5960   */\n      tag_460\n      jump\t// in\n        /* \"#utility.yul\":5971:6385   */\n    tag_278:\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"#utility.yul\":6155:6176   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x32\n        /* \"#utility.yul\":6192:6210   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":6246:6248   */\n      0x40\n        /* \"#utility.yul\":6231:6249   */\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":6317:6319   */\n      0x60\n        /* \"#utility.yul\":6302:6320   */\n      dup3\n      add\n        /* \"#utility.yul\":6295:6343   */\n      mstore\n        /* \"#utility.yul\":6375:6378   */\n      0x80\n        /* \"#utility.yul\":6360:6379   */\n      add\n      swap1\n        /* \"#utility.yul\":5971:6385   */\n      jump\t// out\n        /* \"#utility.yul\":12768:13181   */\n    tag_154:\n        /* \"#utility.yul\":12970:12972   */\n      0x20\n        /* \"#utility.yul\":12952:12973   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13009:13011   */\n      0x31\n        /* \"#utility.yul\":12989:13007   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12982:13012   */\n      mstore\n        /* \"#utility.yul\":13048:13082   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":13043:13045   */\n      0x40\n        /* \"#utility.yul\":13028:13046   */\n      dup3\n      add\n        /* \"#utility.yul\":13021:13083   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":13114:13116   */\n      0x60\n        /* \"#utility.yul\":13099:13117   */\n      dup3\n      add\n        /* \"#utility.yul\":13092:13139   */\n      mstore\n        /* \"#utility.yul\":13171:13174   */\n      0x80\n        /* \"#utility.yul\":13156:13175   */\n      add\n      swap1\n        /* \"#utility.yul\":12768:13181   */\n      jump\t// out\n        /* \"#utility.yul\":14191:14319   */\n    tag_262:\n        /* \"#utility.yul\":14231:14234   */\n      0x00\n        /* \"#utility.yul\":14262:14263   */\n      dup3\n        /* \"#utility.yul\":14258:14264   */\n      not\n        /* \"#utility.yul\":14255:14256   */\n      dup3\n        /* \"#utility.yul\":14252:14265   */\n      gt\n        /* \"#utility.yul\":14249:14288   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":14268:14286   */\n      tag_496\n      tag_497\n      jump\t// in\n    tag_496:\n      pop\n        /* \"#utility.yul\":14304:14313   */\n      add\n      swap1\n        /* \"#utility.yul\":14191:14319   */\n      jump\t// out\n        /* \"#utility.yul\":14324:14444   */\n    tag_370:\n        /* \"#utility.yul\":14364:14365   */\n      0x00\n        /* \"#utility.yul\":14390:14391   */\n      dup3\n        /* \"#utility.yul\":14380:14415   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":14395:14413   */\n      tag_500\n      tag_501\n      jump\t// in\n    tag_500:\n      pop\n        /* \"#utility.yul\":14429:14438   */\n      div\n      swap1\n        /* \"#utility.yul\":14324:14444   */\n      jump\t// out\n        /* \"#utility.yul\":14449:14574   */\n    tag_260:\n        /* \"#utility.yul\":14489:14493   */\n      0x00\n        /* \"#utility.yul\":14517:14518   */\n      dup3\n        /* \"#utility.yul\":14514:14515   */\n      dup3\n        /* \"#utility.yul\":14511:14519   */\n      lt\n        /* \"#utility.yul\":14508:14542   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":14522:14540   */\n      tag_504\n      tag_497\n      jump\t// in\n    tag_504:\n      pop\n        /* \"#utility.yul\":14559:14568   */\n      sub\n      swap1\n        /* \"#utility.yul\":14449:14574   */\n      jump\t// out\n        /* \"#utility.yul\":14579:14837   */\n    tag_463:\n        /* \"#utility.yul\":14651:14652   */\n      0x00\n        /* \"#utility.yul\":14661:14774   */\n    tag_506:\n        /* \"#utility.yul\":14675:14681   */\n      dup4\n        /* \"#utility.yul\":14672:14673   */\n      dup2\n        /* \"#utility.yul\":14669:14682   */\n      lt\n        /* \"#utility.yul\":14661:14774   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":14751:14762   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14745:14763   */\n      mload\n        /* \"#utility.yul\":14732:14743   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14725:14764   */\n      mstore\n        /* \"#utility.yul\":14697:14699   */\n      0x20\n        /* \"#utility.yul\":14690:14700   */\n      add\n        /* \"#utility.yul\":14661:14774   */\n      jump(tag_506)\n    tag_508:\n        /* \"#utility.yul\":14792:14798   */\n      dup4\n        /* \"#utility.yul\":14789:14790   */\n      dup2\n        /* \"#utility.yul\":14786:14799   */\n      gt\n        /* \"#utility.yul\":14783:14831   */\n      iszero\n      tag_205\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":14827:14828   */\n      0x00\n        /* \"#utility.yul\":14809:14825   */\n      swap2\n      add\n        /* \"#utility.yul\":14802:14829   */\n      mstore\n        /* \"#utility.yul\":14579:14837   */\n      jump\t// out\n        /* \"#utility.yul\":14842:15222   */\n    tag_122:\n        /* \"#utility.yul\":14921:14922   */\n      0x01\n        /* \"#utility.yul\":14917:14929   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":14964:14976   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":14985:15046   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":15039:15043   */\n      0x7f\n        /* \"#utility.yul\":15031:15037   */\n      dup3\n        /* \"#utility.yul\":15027:15044   */\n      and\n        /* \"#utility.yul\":15017:15044   */\n      swap2\n      pop\n        /* \"#utility.yul\":14985:15046   */\n    tag_511:\n        /* \"#utility.yul\":15092:15094   */\n      0x20\n        /* \"#utility.yul\":15084:15090   */\n      dup3\n        /* \"#utility.yul\":15081:15095   */\n      lt\n        /* \"#utility.yul\":15061:15079   */\n      dup2\n        /* \"#utility.yul\":15058:15096   */\n      eq\n        /* \"#utility.yul\":15055:15216   */\n      iszero\n      tag_512\n      jumpi\n        /* \"#utility.yul\":15138:15148   */\n      0x4e487b71\n        /* \"#utility.yul\":15133:15136   */\n      0xe0\n        /* \"#utility.yul\":15129:15149   */\n      shl\n        /* \"#utility.yul\":15126:15127   */\n      0x00\n        /* \"#utility.yul\":15119:15150   */\n      mstore\n        /* \"#utility.yul\":15173:15177   */\n      0x22\n        /* \"#utility.yul\":15170:15171   */\n      0x04\n        /* \"#utility.yul\":15163:15178   */\n      mstore\n        /* \"#utility.yul\":15201:15205   */\n      0x24\n        /* \"#utility.yul\":15198:15199   */\n      0x00\n        /* \"#utility.yul\":15191:15206   */\n      revert\n        /* \"#utility.yul\":15055:15216   */\n    tag_512:\n      pop\n        /* \"#utility.yul\":14842:15222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15227:15362   */\n    tag_368:\n        /* \"#utility.yul\":15266:15269   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":15287:15304   */\n      dup3\n      eq\n        /* \"#utility.yul\":15284:15327   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":15307:15325   */\n      tag_515\n      tag_497\n      jump\t// in\n    tag_515:\n      pop\n        /* \"#utility.yul\":15354:15355   */\n      0x01\n        /* \"#utility.yul\":15343:15356   */\n      add\n      swap1\n        /* \"#utility.yul\":15227:15362   */\n      jump\t// out\n        /* \"#utility.yul\":15367:15479   */\n    tag_379:\n        /* \"#utility.yul\":15399:15400   */\n      0x00\n        /* \"#utility.yul\":15425:15426   */\n      dup3\n        /* \"#utility.yul\":15415:15450   */\n      tag_518\n      jumpi\n        /* \"#utility.yul\":15430:15448   */\n      tag_518\n      tag_501\n      jump\t// in\n    tag_518:\n      pop\n        /* \"#utility.yul\":15464:15473   */\n      mod\n      swap1\n        /* \"#utility.yul\":15367:15479   */\n      jump\t// out\n        /* \"#utility.yul\":15484:15611   */\n    tag_497:\n        /* \"#utility.yul\":15545:15555   */\n      0x4e487b71\n        /* \"#utility.yul\":15540:15543   */\n      0xe0\n        /* \"#utility.yul\":15536:15556   */\n      shl\n        /* \"#utility.yul\":15533:15534   */\n      0x00\n        /* \"#utility.yul\":15526:15557   */\n      mstore\n        /* \"#utility.yul\":15576:15580   */\n      0x11\n        /* \"#utility.yul\":15573:15574   */\n      0x04\n        /* \"#utility.yul\":15566:15581   */\n      mstore\n        /* \"#utility.yul\":15600:15604   */\n      0x24\n        /* \"#utility.yul\":15597:15598   */\n      0x00\n        /* \"#utility.yul\":15590:15605   */\n      revert\n        /* \"#utility.yul\":15616:15743   */\n    tag_501:\n        /* \"#utility.yul\":15677:15687   */\n      0x4e487b71\n        /* \"#utility.yul\":15672:15675   */\n      0xe0\n        /* \"#utility.yul\":15668:15688   */\n      shl\n        /* \"#utility.yul\":15665:15666   */\n      0x00\n        /* \"#utility.yul\":15658:15689   */\n      mstore\n        /* \"#utility.yul\":15708:15712   */\n      0x12\n        /* \"#utility.yul\":15705:15706   */\n      0x04\n        /* \"#utility.yul\":15698:15713   */\n      mstore\n        /* \"#utility.yul\":15732:15736   */\n      0x24\n        /* \"#utility.yul\":15729:15730   */\n      0x00\n        /* \"#utility.yul\":15722:15737   */\n      revert\n        /* \"#utility.yul\":15748:15875   */\n    tag_383:\n        /* \"#utility.yul\":15809:15819   */\n      0x4e487b71\n        /* \"#utility.yul\":15804:15807   */\n      0xe0\n        /* \"#utility.yul\":15800:15820   */\n      shl\n        /* \"#utility.yul\":15797:15798   */\n      0x00\n        /* \"#utility.yul\":15790:15821   */\n      mstore\n        /* \"#utility.yul\":15840:15844   */\n      0x32\n        /* \"#utility.yul\":15837:15838   */\n      0x04\n        /* \"#utility.yul\":15830:15845   */\n      mstore\n        /* \"#utility.yul\":15864:15868   */\n      0x24\n        /* \"#utility.yul\":15861:15862   */\n      0x00\n        /* \"#utility.yul\":15854:15869   */\n      revert\n        /* \"#utility.yul\":15880:16007   */\n    tag_373:\n        /* \"#utility.yul\":15941:15951   */\n      0x4e487b71\n        /* \"#utility.yul\":15936:15939   */\n      0xe0\n        /* \"#utility.yul\":15932:15952   */\n      shl\n        /* \"#utility.yul\":15929:15930   */\n      0x00\n        /* \"#utility.yul\":15922:15953   */\n      mstore\n        /* \"#utility.yul\":15972:15976   */\n      0x41\n        /* \"#utility.yul\":15969:15970   */\n      0x04\n        /* \"#utility.yul\":15962:15977   */\n      mstore\n        /* \"#utility.yul\":15996:16000   */\n      0x24\n        /* \"#utility.yul\":15993:15994   */\n      0x00\n        /* \"#utility.yul\":15986:16001   */\n      revert\n        /* \"#utility.yul\":16012:16143   */\n    tag_454:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":16086:16118   */\n      dup2\n      and\n        /* \"#utility.yul\":16076:16119   */\n      dup2\n      eq\n        /* \"#utility.yul\":16066:16137   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":16133:16134   */\n      0x00\n        /* \"#utility.yul\":16130:16131   */\n      dup1\n        /* \"#utility.yul\":16123:16135   */\n      revert\n\n    auxdata: 0xa2646970667358221220644b3dc2024b1fa1cf5b8f6a994204b648d85e179cfde40644c717a12f36502664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1884": {
									"entryPoint": null,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_939": {
									"entryPoint": null,
									"id": 939,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": 152,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_398": {
									"entryPoint": 156,
									"id": 398,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:396:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "69:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "79:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "93:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "96:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "89:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "79:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "110:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "140:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "146:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "136:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "136:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "114:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "187:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "189:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "203:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "211:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "199:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "199:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "189:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "167:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:26:1"
															},
															"nodeType": "YulIf",
															"src": "157:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "277:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "298:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "305:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "310:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "301:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "301:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "291:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "291:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "291:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "342:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "345:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "335:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "335:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "335:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "370:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "373:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "363:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "363:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "233:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "264:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "253:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "253:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "230:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "230:38:1"
															},
															"nodeType": "YulIf",
															"src": "227:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "49:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "14:380:1"
											}
										]
									},
									"contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060408051808201825260088152674d6f6f6e4361747360c01b6020808301918252835180850190945260058452644d4341545360d81b9084015281519192916200005f91600091620000ee565b50805162000075906001906020840190620000ee565b505050620000926200008c6200009860201b60201c565b6200009c565b620001d1565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000fc9062000194565b90600052602060002090601f0160209004810192826200012057600085556200016b565b82601f106200013b57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016b5782518255916020019190600101906200014e565b50620001799291506200017d565b5090565b5b808211156200017957600081556001016200017e565b600181811c90821680620001a957607f821691505b60208210811415620001cb57634e487b7160e01b600052602260045260246000fd5b50919050565b611c6380620001e16000396000f3fe6080604052600436106101145760003560e01c806370a08231116100a0578063b88d4fde11610064578063b88d4fde146102e8578063c87b56dd14610308578063d204c45e14610328578063e985e9c51461033b578063f2fde38b1461038457600080fd5b806370a0823114610252578063715018a6146102805780638da5cb5b1461029557806395d89b41146102b3578063a22cb465146102c857600080fd5b806323b872dd116100e757806323b872dd146101ca5780633ccfd60b146101ea57806342842e0e146101f257806342966c68146102125780636352211e1461023257600080fd5b806301ffc9a71461011957806306fdde031461014e578063081812fc14610170578063095ea7b3146101a8575b600080fd5b34801561012557600080fd5b50610139610134366004611945565b6103a4565b60405190151581526020015b60405180910390f35b34801561015a57600080fd5b506101636103f6565b6040516101459190611a30565b34801561017c57600080fd5b5061019061018b36600461197f565b610488565b6040516001600160a01b039091168152602001610145565b3480156101b457600080fd5b506101c86101c336600461191b565b610515565b005b3480156101d657600080fd5b506101c86101e53660046117c5565b61062b565b6101c861065d565b3480156101fe57600080fd5b506101c861020d3660046117c5565b6106b6565b34801561021e57600080fd5b506101c861022d36600461197f565b6106d1565b34801561023e57600080fd5b5061019061024d36600461197f565b61074b565b34801561025e57600080fd5b5061027261026d366004611777565b6107c2565b604051908152602001610145565b34801561028c57600080fd5b506101c8610849565b3480156102a157600080fd5b506007546001600160a01b0316610190565b3480156102bf57600080fd5b506101636108af565b3480156102d457600080fd5b506101c86102e336600461187d565b6108be565b3480156102f457600080fd5b506101c8610303366004611801565b6108cd565b34801561031457600080fd5b5061016361032336600461197f565b610905565b6101c86103363660046118b9565b610910565b34801561034757600080fd5b50610139610356366004611792565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561039057600080fd5b506101c861039f366004611777565b6109a4565b60006001600160e01b031982166380ac58cd60e01b14806103d557506001600160e01b03198216635b5e139f60e01b145b806103f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461040590611b55565b80601f016020809104026020016040519081016040528092919081815260200182805461043190611b55565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b600061049382610a6c565b6104f95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105208261074b565b9050806001600160a01b0316836001600160a01b0316141561058e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104f0565b336001600160a01b03821614806105aa57506105aa8133610356565b61061c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104f0565b6106268383610a89565b505050565b610636335b82610af7565b6106525760405162461bcd60e51b81526004016104f090611a95565b610626838383610be1565b60006106716007546001600160a01b031690565b90506001600160a01b038116331461068857600080fd5b604051339081904780156108fc02916000818181858888f19350505050158015610626573d6000803e3d6000fd5b610626838383604051806020016040528060008152506108cd565b6106da33610630565b61073f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016104f0565b61074881610d81565b50565b6000818152600260205260408120546001600160a01b0316806103f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104f0565b60006001600160a01b03821661082d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104f0565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146108a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f0565b6108ad6000610d8a565b565b60606001805461040590611b55565b6108c9338383610ddc565b5050565b6108d73383610af7565b6108f35760405162461bcd60e51b81526004016104f090611a95565b6108ff84848484610eab565b50505050565b60606103f082610ede565b34671bc16d674ec80000146109755760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79203220676c6d7220616c6c6f77656420746f206265207472616e736660448201526432b932b21760d91b60648201526084016104f0565b600061098060085490565b9050610990600880546001019055565b61099a838261104d565b6106268183611067565b6007546001600160a01b031633146109fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f0565b6001600160a01b038116610a635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f0565b61074881610d8a565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abe8261074b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b0282610a6c565b610b635760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104f0565b6000610b6e8361074b565b9050806001600160a01b0316846001600160a01b03161480610ba95750836001600160a01b0316610b9e84610488565b6001600160a01b0316145b80610bd957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610bf48261074b565b6001600160a01b031614610c5c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016104f0565b6001600160a01b038216610cbe5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104f0565b610cc9600082610a89565b6001600160a01b0383166000908152600360205260408120805460019290610cf2908490611b12565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d20908490611ae6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610748816110f2565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eb6848484610be1565b610ec284848484611132565b6108ff5760405162461bcd60e51b81526004016104f090611a43565b6060610ee982610a6c565b610f4f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104f0565b60008281526006602052604081208054610f6890611b55565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9490611b55565b8015610fe15780601f10610fb657610100808354040283529160200191610fe1565b820191906000526020600020905b815481529060010190602001808311610fc457829003601f168201915b505050505090506000610fff60408051602081019091526000815290565b9050805160001415611012575092915050565b81511561104457808260405160200161102c9291906119c4565b60405160208183030381529060405292505050919050565b610bd98461123f565b6108c9828260405180602001604052806000815250611317565b61107082610a6c565b6110d35760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104f0565b6000828152600660209081526040909120825161062692840190611616565b6110fb8161134a565b6000818152600660205260409020805461111490611b55565b1590506107485760008181526006602052604081206107489161169a565b60006001600160a01b0384163b1561123457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111769033908990889088906004016119f3565b602060405180830381600087803b15801561119057600080fd5b505af19250505080156111c0575060408051601f3d908101601f191682019092526111bd91810190611962565b60015b61121a573d8080156111ee576040519150601f19603f3d011682016040523d82523d6000602084013e6111f3565b606091505b5080516112125760405162461bcd60e51b81526004016104f090611a43565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd9565b506001949350505050565b606061124a82610a6c565b6112ae5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104f0565b60006112c560408051602081019091526000815290565b905060008151116112e55760405180602001604052806000815250611310565b806112ef846113e5565b6040516020016113009291906119c4565b6040516020818303038152906040525b9392505050565b61132183836114e3565b61132e6000848484611132565b6106265760405162461bcd60e51b81526004016104f090611a43565b60006113558261074b565b9050611362600083610a89565b6001600160a01b038116600090815260036020526040812080546001929061138b908490611b12565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816114095750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611433578061141d81611b90565b915061142c9050600a83611afe565b915061140d565b60008167ffffffffffffffff81111561144e5761144e611c01565b6040519080825280601f01601f191660200182016040528015611478576020820181803683370190505b5090505b8415610bd95761148d600183611b12565b915061149a600a86611bab565b6114a5906030611ae6565b60f81b8183815181106114ba576114ba611beb565b60200101906001600160f81b031916908160001a9053506114dc600a86611afe565b945061147c565b6001600160a01b0382166115395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f0565b61154281610a6c565b1561158f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f0565b6001600160a01b03821660009081526003602052604081208054600192906115b8908490611ae6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461162290611b55565b90600052602060002090601f016020900481019282611644576000855561168a565b82601f1061165d57805160ff191683800117855561168a565b8280016001018555821561168a579182015b8281111561168a57825182559160200191906001019061166f565b506116969291506116d0565b5090565b5080546116a690611b55565b6000825580601f106116b6575050565b601f01602090049060005260206000209081019061074891905b5b8082111561169657600081556001016116d1565b600067ffffffffffffffff8084111561170057611700611c01565b604051601f8501601f19908116603f0116810190828211818310171561172857611728611c01565b8160405280935085815286868601111561174157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461177257600080fd5b919050565b60006020828403121561178957600080fd5b6113108261175b565b600080604083850312156117a557600080fd5b6117ae8361175b565b91506117bc6020840161175b565b90509250929050565b6000806000606084860312156117da57600080fd5b6117e38461175b565b92506117f16020850161175b565b9150604084013590509250925092565b6000806000806080858703121561181757600080fd5b6118208561175b565b935061182e6020860161175b565b925060408501359150606085013567ffffffffffffffff81111561185157600080fd5b8501601f8101871361186257600080fd5b611871878235602084016116e5565b91505092959194509250565b6000806040838503121561189057600080fd5b6118998361175b565b9150602083013580151581146118ae57600080fd5b809150509250929050565b600080604083850312156118cc57600080fd5b6118d58361175b565b9150602083013567ffffffffffffffff8111156118f157600080fd5b8301601f8101851361190257600080fd5b611911858235602084016116e5565b9150509250929050565b6000806040838503121561192e57600080fd5b6119378361175b565b946020939093013593505050565b60006020828403121561195757600080fd5b813561131081611c17565b60006020828403121561197457600080fd5b815161131081611c17565b60006020828403121561199157600080fd5b5035919050565b600081518084526119b0816020860160208601611b29565b601f01601f19169290920160200192915050565b600083516119d6818460208801611b29565b8351908301906119ea818360208801611b29565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a2690830184611998565b9695505050505050565b6020815260006113106020830184611998565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611af957611af9611bbf565b500190565b600082611b0d57611b0d611bd5565b500490565b600082821015611b2457611b24611bbf565b500390565b60005b83811015611b44578181015183820152602001611b2c565b838111156108ff5750506000910152565b600181811c90821680611b6957607f821691505b60208210811415611b8a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611ba457611ba4611bbf565b5060010190565b600082611bba57611bba611bd5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461074857600080fdfea2646970667358221220644b3dc2024b1fa1cf5b8f6a994204b648d85e179cfde40644c717a12f36502664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x4D6F6F6E43617473 PUSH1 0xC0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE PUSH1 0x5 DUP5 MSTORE PUSH5 0x4D43415453 PUSH1 0xD8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x5F SWAP2 PUSH1 0x0 SWAP2 PUSH3 0xEE JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x75 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0xEE JUMP JUMPDEST POP POP POP PUSH3 0x92 PUSH3 0x8C PUSH3 0x98 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x9C JUMP JUMPDEST PUSH3 0x1D1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xFC SWAP1 PUSH3 0x194 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x120 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x16B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x13B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x16B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x16B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x16B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x14E JUMP JUMPDEST POP PUSH3 0x179 SWAP3 SWAP2 POP PUSH3 0x17D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x179 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x17E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C63 DUP1 PUSH3 0x1E1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x65D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x905 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3F0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x453 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 DUP3 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5AA JUMPI POP PUSH2 0x5AA DUP2 CALLER PUSH2 0x356 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xA89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x636 CALLER JUMPDEST DUP3 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 DUP4 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP2 SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x6DA CALLER PUSH2 0x630 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0xD81 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x8AD PUSH1 0x0 PUSH2 0xD8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x8C9 CALLER DUP4 DUP4 PUSH2 0xDDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8D7 CALLER DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x8FF DUP5 DUP5 DUP5 DUP5 PUSH2 0xEAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F0 DUP3 PUSH2 0xEDE JUMP JUMPDEST CALLVALUE PUSH8 0x1BC16D674EC80000 EQ PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79203220676C6D7220616C6C6F77656420746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x32B932B217 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x990 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x99A DUP4 DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x626 DUP2 DUP4 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xABE DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E DUP4 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xBA9 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9E DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xBD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBF4 DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0xCC9 PUSH1 0x0 DUP3 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCF2 SWAP1 DUP5 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD20 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEB6 DUP5 DUP5 DUP5 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0xEC2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE9 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xF68 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF94 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFE1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xFFF PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1012 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1044 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP5 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x8C9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1070 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x626 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x10FB DUP2 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1114 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x748 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x748 SWAP2 PUSH2 0x169A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1176 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11C0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11BD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x121A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x124A DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1310 JUMP JUMPDEST DUP1 PUSH2 0x12EF DUP5 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1300 SWAP3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1321 DUP4 DUP4 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x132E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP PUSH2 0x1362 PUSH1 0x0 DUP4 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x138B SWAP1 DUP5 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1409 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1433 JUMPI DUP1 PUSH2 0x141D DUP2 PUSH2 0x1B90 JUMP JUMPDEST SWAP2 POP PUSH2 0x142C SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x140D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144E PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xBD9 JUMPI PUSH2 0x148D PUSH1 0x1 DUP4 PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP PUSH2 0x149A PUSH1 0xA DUP7 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x14A5 SWAP1 PUSH1 0x30 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BA JUMPI PUSH2 0x14BA PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x14DC PUSH1 0xA DUP7 PUSH2 0x1AFE JUMP JUMPDEST SWAP5 POP PUSH2 0x147C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x1542 DUP2 PUSH2 0xA6C JUMP JUMPDEST ISZERO PUSH2 0x158F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x15B8 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1622 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1644 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x168A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x165D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x168A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x168A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x168A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x166F JUMP JUMPDEST POP PUSH2 0x1696 SWAP3 SWAP2 POP PUSH2 0x16D0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x16A6 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x16B6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x748 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1700 JUMPI PUSH2 0x1700 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1728 PUSH2 0x1C01 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1310 DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AE DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BC PUSH1 0x20 DUP5 ADD PUSH2 0x175B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17E3 DUP5 PUSH2 0x175B JUMP JUMPDEST SWAP3 POP PUSH2 0x17F1 PUSH1 0x20 DUP6 ADD PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1820 DUP6 PUSH2 0x175B JUMP JUMPDEST SWAP4 POP PUSH2 0x182E PUSH1 0x20 DUP7 ADD PUSH2 0x175B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1871 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1899 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D5 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1911 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1937 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1310 DUP2 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1310 DUP2 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19B0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x19D6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19EA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A26 SWAP1 DUP4 ADD DUP5 PUSH2 0x1998 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1310 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1998 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AF9 JUMPI PUSH2 0x1AF9 PUSH2 0x1BBF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B0D JUMPI PUSH2 0x1B0D PUSH2 0x1BD5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B24 PUSH2 0x1BBF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B44 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8FF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B69 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B8A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA4 PUSH2 0x1BBF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BBA JUMPI PUSH2 0x1BBA PUSH2 0x1BD5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4B3DC2024B 0x1F LOG1 0xCF JUMPDEST DUP16 PUSH11 0x994204B648D85E179CFDE4 MOD DIFFICULTY 0xC7 OR LOG1 0x2F CALLDATASIZE POP 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "39309:1069:0:-:0;;;39475:44;;;;;;;;;-1:-1:-1;24303:113:0;;;;;;;;;;;-1:-1:-1;;;24303:113:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;24303:113:0;;;;24369:13;;24303:113;;;24369:13;;-1:-1:-1;;24369:13:0;:::i;:::-;-1:-1:-1;24392:17:0;;;;:7;;:17;;;;;:::i;:::-;;24303:113;;5283:32;5302:12;:10;;;:12;;:::i;:::-;5283:18;:32::i;:::-;39309:1069;;4166:96;4245:10;;4166:96::o;6632:187::-;6724:6;;;-1:-1:-1;;;;;6740:17:0;;;-1:-1:-1;;;;;;6740:17:0;;;;;;;6772:40;;6724:6;;;6740:17;6724:6;;6772:40;;6705:16;;6772:40;6695:124;6632:187;:::o;39309:1069::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39309:1069:0;;;-1:-1:-1;39309:1069:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:1;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;39309:1069:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1601": {
									"entryPoint": 2697,
									"id": 1601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_1093": {
									"entryPoint": null,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1706": {
									"entryPoint": null,
									"id": 1706,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1508": {
									"entryPoint": 4938,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1859": {
									"entryPoint": 4338,
									"id": 1859,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_1936": {
									"entryPoint": 3457,
									"id": 1936,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1695": {
									"entryPoint": 4402,
									"id": 1695,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_1315": {
									"entryPoint": 2668,
									"id": 1315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_1356": {
									"entryPoint": 2807,
									"id": 1356,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1457": {
									"entryPoint": 5347,
									"id": 1457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeMint_1371": {
									"entryPoint": 4173,
									"id": 1371,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_1400": {
									"entryPoint": 4887,
									"id": 1400,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_1297": {
									"entryPoint": 3755,
									"id": 1297,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1633": {
									"entryPoint": 3548,
									"id": 1633,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1829": {
									"entryPoint": 4199,
									"id": 1829,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_398": {
									"entryPoint": 3466,
									"id": 398,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1577": {
									"entryPoint": 3041,
									"id": 1577,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_1136": {
									"entryPoint": 1301,
									"id": 1136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_994": {
									"entryPoint": 1986,
									"id": 994,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1733": {
									"entryPoint": 1745,
									"id": 1733,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": null,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1157": {
									"entryPoint": 1160,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_1192": {
									"entryPoint": null,
									"id": 1192,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_418": {
									"entryPoint": null,
									"id": 418,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1032": {
									"entryPoint": 1014,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1022": {
									"entryPoint": 1867,
									"id": 1022,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_355": {
									"entryPoint": 2121,
									"id": 355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_1921": {
									"entryPoint": 2320,
									"id": 1921,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_1238": {
									"entryPoint": 1718,
									"id": 1238,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1268": {
									"entryPoint": 2253,
									"id": 1268,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1174": {
									"entryPoint": 2238,
									"id": 1174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_970": {
									"entryPoint": 932,
									"id": 970,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1042": {
									"entryPoint": 2223,
									"id": 1042,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_157": {
									"entryPoint": 5093,
									"id": 157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1084": {
									"entryPoint": 4671,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1807": {
									"entryPoint": 3806,
									"id": 1807,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1952": {
									"entryPoint": 2309,
									"id": 1952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_1219": {
									"entryPoint": 1579,
									"id": 1219,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_378": {
									"entryPoint": 2468,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1986": {
									"entryPoint": 1629,
									"id": 1986,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_bytes": {
									"entryPoint": 5861,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 6329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 6552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6643,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da0149cb360fb4e4f8471d86b0cc492e1d1d006bd39175f1934f6cae8e4c884c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7125,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 7191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16145:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "88:557:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "98:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "108:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "102:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "153:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "155:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "155:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "155:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "141:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "149:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "138:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "138:14:1"
															},
															"nodeType": "YulIf",
															"src": "135:40:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "198:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "194:7:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "210:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "230:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "224:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "214:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "264:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "288:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "296:2:1",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "284:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "284:15:1"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "301:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "280:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "280:24:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "306:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "276:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "276:33:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "311:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "272:42:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "260:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:55:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "246:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "374:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "376:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "376:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "376:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "333:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "345:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "330:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "353:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "365:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "350:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "350:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "327:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:46:1"
															},
															"nodeType": "YulIf",
															"src": "324:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "416:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "405:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "405:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "436:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "445:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "467:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "475:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "460:22:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "520:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "532:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "522:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "522:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "522:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "501:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "506:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "515:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "494:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:25:1"
															},
															"nodeType": "YulIf",
															"src": "491:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "562:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "570:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:17:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "582:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "545:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "545:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "545:44:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "613:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "621:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "609:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "609:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "605:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "605:30:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "598:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "598:41:1"
														}
													]
												},
												"name": "abi_decode_available_length_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "57:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "62:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "70:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "78:5:1",
														"type": ""
													}
												],
												"src": "14:631:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "699:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "709:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "731:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "718:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "718:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "709:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "760:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "771:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "786:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "791:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "782:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "782:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "795:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "778:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "778:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "767:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "767:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "757:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "757:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:50:1"
															},
															"nodeType": "YulIf",
															"src": "747:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "678:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "689:5:1",
														"type": ""
													}
												],
												"src": "650:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "944:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "953:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "956:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "946:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "946:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "946:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:32:1"
															},
															"nodeType": "YulIf",
															"src": "908:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "969:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "998:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "979:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "864:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "875:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "887:6:1",
														"type": ""
													}
												],
												"src": "828:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1106:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1152:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1154:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1154:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1154:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1127:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1136:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1148:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:32:1"
															},
															"nodeType": "YulIf",
															"src": "1116:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1206:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1187:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1187:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1225:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1269:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1254:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1235:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1225:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1064:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1075:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1087:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1095:6:1",
														"type": ""
													}
												],
												"src": "1019:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1388:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1434:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1446:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1436:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1436:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1409:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1418:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1405:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1430:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1401:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:32:1"
															},
															"nodeType": "YulIf",
															"src": "1398:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1459:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1488:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1469:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1459:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1507:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1540:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1551:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1536:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1517:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1517:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1564:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1602:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1587:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1574:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1564:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1338:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1349:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1361:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1369:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1377:6:1",
														"type": ""
													}
												],
												"src": "1284:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:536:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1794:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1803:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1806:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1796:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1796:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1796:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1768:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1777:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1764:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1789:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:33:1"
															},
															"nodeType": "YulIf",
															"src": "1757:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1819:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1848:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1829:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1877:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1867:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1924:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1934:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1934:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1975:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2017:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2002:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1989:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1979:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2064:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2073:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2076:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2066:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2066:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2066:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2044:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2033:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:30:1"
															},
															"nodeType": "YulIf",
															"src": "2030:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2089:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2103:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2114:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2099:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2093:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2148:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2152:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2159:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2140:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2133:35:1"
															},
															"nodeType": "YulIf",
															"src": "2130:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2194:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2242:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2264:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2251:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2251:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2269:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2204:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:73:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1689:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1700:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1712:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1720:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1728:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1736:6:1",
														"type": ""
													}
												],
												"src": "1617:666:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2372:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2418:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2427:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2430:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2420:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2420:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2420:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2393:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2402:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2389:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2414:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2385:32:1"
															},
															"nodeType": "YulIf",
															"src": "2382:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2443:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2472:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2453:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2453:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2491:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2532:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2517:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2504:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2504:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2495:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2589:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2598:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2601:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2591:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2591:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2591:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2558:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2579:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2572:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2572:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2565:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2565:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2555:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2555:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:40:1"
															},
															"nodeType": "YulIf",
															"src": "2545:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2624:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2330:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2341:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2353:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2361:6:1",
														"type": ""
													}
												],
												"src": "2288:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2737:427:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2795:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2785:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2758:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2767:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2754:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2779:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2750:32:1"
															},
															"nodeType": "YulIf",
															"src": "2747:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2808:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2837:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2818:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2818:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2856:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2887:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2898:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2883:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2883:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2870:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2860:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2945:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2954:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2957:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2947:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2947:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2947:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2917:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2914:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2914:30:1"
															},
															"nodeType": "YulIf",
															"src": "2911:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2970:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2984:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2995:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2974:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3050:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3059:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3062:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3052:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3052:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3052:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3029:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3033:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3025:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3025:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3040:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3021:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:35:1"
															},
															"nodeType": "YulIf",
															"src": "3011:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3075:83:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3123:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3127:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3145:2:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3132:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3132:16:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3150:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3085:33:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:73:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3075:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2695:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2706:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2718:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2726:6:1",
														"type": ""
													}
												],
												"src": "2640:524:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3256:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3302:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3311:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3314:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3304:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3304:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3277:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3286:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3273:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3298:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3269:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3269:32:1"
															},
															"nodeType": "YulIf",
															"src": "3266:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3327:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3337:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3375:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3402:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3413:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3375:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3214:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3225:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3237:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3245:6:1",
														"type": ""
													}
												],
												"src": "3169:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3497:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3543:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3555:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3545:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3545:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3545:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3518:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3527:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3514:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3514:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3539:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:32:1"
															},
															"nodeType": "YulIf",
															"src": "3507:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3568:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3581:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3581:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3572:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3637:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3613:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3652:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3662:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3652:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3463:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3474:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3486:6:1",
														"type": ""
													}
												],
												"src": "3428:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3758:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3804:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3816:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3806:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3806:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3806:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3779:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3788:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3775:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3771:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:32:1"
															},
															"nodeType": "YulIf",
															"src": "3768:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3829:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3848:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3842:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3833:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3891:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "3867:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3867:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3867:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3906:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3916:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3906:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3724:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3735:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3747:6:1",
														"type": ""
													}
												],
												"src": "3678:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4002:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4048:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4057:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4060:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4050:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4050:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4050:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4023:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:32:1"
															},
															"nodeType": "YulIf",
															"src": "4012:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4073:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4096:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4083:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4073:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3968:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3979:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"src": "3932:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4166:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4176:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4196:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4190:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4180:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4218:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4223:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4211:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4211:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4272:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4261:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4283:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4288:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4279:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4295:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4239:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4239:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4311:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4326:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4339:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4347:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4335:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4335:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4356:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4352:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4352:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4331:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4331:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4322:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4322:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4363:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4311:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4150:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4158:3:1",
														"type": ""
													}
												],
												"src": "4117:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4566:283:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4576:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4596:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4590:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4580:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4638:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4646:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4634:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4653:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4658:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4612:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4612:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4612:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4674:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4691:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4696:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4687:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:16:1"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "4678:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4712:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4734:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4728:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4728:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "4716:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4784:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:17:1"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4791:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4798:8:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4750:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4750:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4750:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4816:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "4827:5:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "4834:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4823:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:20:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4534:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4539:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4547:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4558:3:1",
														"type": ""
													}
												],
												"src": "4379:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4955:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4965:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4977:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4988:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4973:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4973:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4965:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5007:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5022:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5038:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5043:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5034:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5034:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5047:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5030:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5030:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5018:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5000:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4924:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4935:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4946:4:1",
														"type": ""
													}
												],
												"src": "4854:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5265:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5275:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5293:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5289:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5285:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5285:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5279:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5320:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5335:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5343:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5313:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5313:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5378:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5363:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5387:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5395:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5356:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5356:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5430:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5415:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5435:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5408:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5408:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5473:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5458:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5478:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5451:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5491:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5528:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5539:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5524:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5499:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5499:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5491:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5210:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5221:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5229:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5237:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5245:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5256:4:1",
														"type": ""
													}
												],
												"src": "5062:488:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5650:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5660:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5672:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5683:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5660:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5702:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "5727:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5720:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5720:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5713:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5713:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5695:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5619:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5630:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5641:4:1",
														"type": ""
													}
												],
												"src": "5555:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5868:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5885:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5896:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5878:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5908:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5933:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5916:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5908:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5837:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5848:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5859:4:1",
														"type": ""
													}
												],
												"src": "5747:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:240:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:1",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:1",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:1"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6322:20:1",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6364:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6375:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6360:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6360:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6352:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6122:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:1",
														"type": ""
													}
												],
												"src": "5971:414:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6564:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6626:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6611:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6650:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6670:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6643:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6643:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6736:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6721:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6741:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6714:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6714:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6759:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6771:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6782:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6767:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6759:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6541:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6555:4:1",
														"type": ""
													}
												],
												"src": "6390:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6971:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6988:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6999:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6981:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6981:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6981:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7033:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7018:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7038:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7011:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7011:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7077:30:1",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7117:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7129:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7140:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7117:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6948:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6962:4:1",
														"type": ""
													}
												],
												"src": "6797:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7328:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7345:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7338:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7338:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7375:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7368:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7418:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7429:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7414:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7414:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7434:34:1",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7407:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7407:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7407:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7489:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7500:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7485:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7485:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7505:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7478:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7478:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7521:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7544:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7529:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7521:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7305:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7319:4:1",
														"type": ""
													}
												],
												"src": "7154:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:175:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7750:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7784:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7780:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7780:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:2:1",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7773:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7823:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7834:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7819:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7839:27:1",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7812:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7812:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7876:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7888:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7899:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7876:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7710:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7724:4:1",
														"type": ""
													}
												],
												"src": "7559:349:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8087:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8104:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8115:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8097:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8149:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8134:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8154:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8127:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8177:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8188:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8173:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8173:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8193:34:1",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8166:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8248:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8259:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8244:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8264:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8237:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8237:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8288:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8300:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8311:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8288:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8064:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8078:4:1",
														"type": ""
													}
												],
												"src": "7913:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8500:246:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8517:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8528:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8510:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8510:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8551:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8562:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8547:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8547:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8567:2:1",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8540:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8540:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8540:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8590:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8601:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8586:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8606:34:1",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8579:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8579:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8661:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8672:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8657:18:1"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8677:26:1",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8650:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8650:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8713:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8725:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8736:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8721:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8713:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8477:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8491:4:1",
														"type": ""
													}
												],
												"src": "8326:420:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8925:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8942:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8953:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8935:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8935:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8935:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8976:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8987:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8972:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8992:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8965:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9026:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9011:18:1"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9031:34:1",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9004:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9097:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9082:18:1"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9102:12:1",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9075:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9075:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9124:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9147:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9124:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8902:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8916:4:1",
														"type": ""
													}
												],
												"src": "8751:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9336:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9403:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9437:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9422:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9442:34:1",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9415:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9415:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9415:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:1"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9513:11:1",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9534:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9546:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9557:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9534:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9313:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9327:4:1",
														"type": ""
													}
												],
												"src": "9162:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9746:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9756:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9797:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9793:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9813:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9786:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9786:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9847:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9832:18:1"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9852:34:1",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9825:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9825:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9825:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9907:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9918:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9903:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9903:18:1"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9923:16:1",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9949:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9972:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9957:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9949:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9723:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9737:4:1",
														"type": ""
													}
												],
												"src": "9572:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10161:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10178:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10208:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10228:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10201:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10201:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10262:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10247:18:1"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10267:34:1",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10240:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10240:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10311:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10323:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10334:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10319:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10319:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10311:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10138:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10152:4:1",
														"type": ""
													}
												],
												"src": "9987:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10522:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10539:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10550:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10532:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10532:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10573:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10584:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10569:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10569:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10589:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10562:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10562:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10608:18:1"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10628:34:1",
																		"type": "",
																		"value": "ERC721URIStorage: URI query for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10601:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10683:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10694:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10679:18:1"
																	},
																	{
																		"hexValue": "6e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10699:19:1",
																		"type": "",
																		"value": "nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10672:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10672:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10728:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10740:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10751:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10736:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10728:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10499:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10513:4:1",
														"type": ""
													}
												],
												"src": "10348:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10940:234:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10957:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10968:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10950:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10950:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11002:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10987:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11007:2:1",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10980:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10980:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11030:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11041:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11026:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11046:34:1",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11019:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11101:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11112:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11097:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11097:18:1"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11117:14:1",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11090:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11090:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11141:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11164:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11141:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10917:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10931:4:1",
														"type": ""
													}
												],
												"src": "10766:408:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11353:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11370:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11381:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11363:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11363:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11415:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11400:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11393:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11393:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11454:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11439:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11459:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11432:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11432:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11503:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11526:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11330:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11344:4:1",
														"type": ""
													}
												],
												"src": "11179:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11714:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11742:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11724:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11724:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11724:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11765:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11776:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11761:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11761:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11781:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11754:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11815:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11800:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e20746861742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11820:34:1",
																		"type": "",
																		"value": "ERC721: transfer of token that i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11875:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11886:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11871:18:1"
																	},
																	{
																		"hexValue": "73206e6f74206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11891:11:1",
																		"type": "",
																		"value": "s not own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11864:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11864:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11912:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11924:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11935:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11912:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11691:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11705:4:1",
														"type": ""
													}
												],
												"src": "11540:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12124:237:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12141:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12152:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12134:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12134:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12134:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12175:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12186:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12171:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12191:2:1",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12164:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12164:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12164:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12214:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12225:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12210:18:1"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12230:34:1",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12203:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12203:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12285:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12296:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12281:18:1"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12301:17:1",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12274:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12274:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12274:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12328:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12340:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12351:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12336:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12328:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12101:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12115:4:1",
														"type": ""
													}
												],
												"src": "11950:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12540:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12557:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12568:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12550:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12550:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12602:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12587:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12607:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12580:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12580:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12641:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12626:18:1"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12646:34:1",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12619:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12619:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12701:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12712:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12697:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12717:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12690:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12690:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12730:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12742:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12753:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12738:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12730:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12517:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12531:4:1",
														"type": ""
													}
												],
												"src": "12366:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12942:239:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12970:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12952:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12952:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12993:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13004:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12989:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13009:2:1",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12982:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13032:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13043:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13028:18:1"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13048:34:1",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13021:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13021:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13114:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13099:18:1"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13119:19:1",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13092:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13092:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13092:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13148:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13160:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13171:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13156:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13156:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13148:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12919:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12933:4:1",
														"type": ""
													}
												],
												"src": "12768:413:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13360:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13377:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13388:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13370:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13370:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13370:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13411:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13422:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13407:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13407:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13427:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13400:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13400:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13400:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13461:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13446:18:1"
																	},
																	{
																		"hexValue": "4f6e6c79203220676c6d7220616c6c6f77656420746f206265207472616e7366",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13466:34:1",
																		"type": "",
																		"value": "Only 2 glmr allowed to be transf"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13439:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13439:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13521:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13532:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13517:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:18:1"
																	},
																	{
																		"hexValue": "657265642e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13537:7:1",
																		"type": "",
																		"value": "ered."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13510:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13510:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13554:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13566:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13577:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13554:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da0149cb360fb4e4f8471d86b0cc492e1d1d006bd39175f1934f6cae8e4c884c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13337:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13351:4:1",
														"type": ""
													}
												],
												"src": "13186:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13766:238:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13783:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13794:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13776:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13776:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13817:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13828:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13813:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13833:2:1",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13806:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13806:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13806:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13856:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13867:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13852:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13852:18:1"
																	},
																	{
																		"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13872:34:1",
																		"type": "",
																		"value": "ERC721Burnable: caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13845:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13845:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13927:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13938:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13923:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13923:18:1"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13943:18:1",
																		"type": "",
																		"value": "ner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13916:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13916:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13971:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13983:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13994:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13979:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13971:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13743:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13757:4:1",
														"type": ""
													}
												],
												"src": "13592:412:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14110:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14120:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14132:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14143:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14128:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14128:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14120:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14162:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14173:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14155:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14155:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14079:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14090:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14101:4:1",
														"type": ""
													}
												],
												"src": "14009:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14239:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14266:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14268:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14268:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14268:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14255:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14262:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14258:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14252:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14252:13:1"
															},
															"nodeType": "YulIf",
															"src": "14249:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14297:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14308:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14311:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14304:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14304:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14297:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14222:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14225:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14231:3:1",
														"type": ""
													}
												],
												"src": "14191:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14370:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14393:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "14395:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14395:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14395:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14390:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14383:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14383:9:1"
															},
															"nodeType": "YulIf",
															"src": "14380:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14424:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14433:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14436:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14429:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14424:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14355:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14358:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14364:1:1",
														"type": ""
													}
												],
												"src": "14324:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14498:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14520:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14522:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14522:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14522:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14514:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14517:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14511:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:8:1"
															},
															"nodeType": "YulIf",
															"src": "14508:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14551:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14563:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14566:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14559:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14559:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14551:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14480:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14483:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14489:4:1",
														"type": ""
													}
												],
												"src": "14449:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14632:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14642:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14651:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14646:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14711:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14736:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14741:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14732:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14732:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14755:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14760:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14751:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14751:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14745:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14745:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14725:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14725:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14725:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14672:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14675:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14669:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14669:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14683:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14685:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14694:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14697:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14690:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14690:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14685:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14665:3:1",
																"statements": []
															},
															"src": "14661:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14800:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14813:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "14818:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14809:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14809:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14827:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14802:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14802:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14802:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14789:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14792:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14786:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14786:13:1"
															},
															"nodeType": "YulIf",
															"src": "14783:48:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14610:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14615:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14620:6:1",
														"type": ""
													}
												],
												"src": "14579:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14897:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14907:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14921:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14924:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "14917:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14917:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14907:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14938:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14968:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14974:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14964:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14964:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "14942:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15015:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15017:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "15031:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15039:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "15027:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15027:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15017:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "14995:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14988:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14988:26:1"
															},
															"nodeType": "YulIf",
															"src": "14985:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15105:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15126:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15133:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15138:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "15129:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15129:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15119:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15119:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15170:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15173:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15163:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15163:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15163:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15198:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15201:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15191:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15191:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15191:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "15061:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15084:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15092:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "15081:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15081:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15058:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15058:38:1"
															},
															"nodeType": "YulIf",
															"src": "15055:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14877:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14886:6:1",
														"type": ""
													}
												],
												"src": "14842:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15274:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15305:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15307:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15307:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15307:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15290:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15301:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15297:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15287:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15287:17:1"
															},
															"nodeType": "YulIf",
															"src": "15284:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15336:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15347:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15354:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15343:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15343:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15336:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15256:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15266:3:1",
														"type": ""
													}
												],
												"src": "15227:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15405:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15428:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15430:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15430:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15430:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15425:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15418:9:1"
															},
															"nodeType": "YulIf",
															"src": "15415:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15459:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15468:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15471:1:1"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "15464:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15464:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15459:1:1"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15390:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15393:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15399:1:1",
														"type": ""
													}
												],
												"src": "15367:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15516:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15533:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15540:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15545:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15536:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15526:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15526:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15573:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15576:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15566:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15566:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15566:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15597:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15600:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15590:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15590:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15590:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "15484:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15648:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15665:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15672:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15677:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15668:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15668:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15658:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15658:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15658:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15705:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15708:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15698:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15698:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15698:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15729:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15732:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15722:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15722:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "15616:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15780:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15797:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15804:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15809:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15800:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15790:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15790:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15837:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15840:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15830:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15830:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15830:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15861:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15864:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15854:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15854:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15748:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15912:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15929:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15936:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15941:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15932:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15922:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15922:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15969:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15972:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15962:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15962:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15962:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15993:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15996:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15986:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15986:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15986:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "15880:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16056:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16121:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16130:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16133:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16123:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16123:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16123:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16079:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16090:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16101:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16106:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "16097:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16097:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "16086:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16086:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16076:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16076:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16069:51:1"
															},
															"nodeType": "YulIf",
															"src": "16066:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16045:5:1",
														"type": ""
													}
												],
												"src": "16012:131:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da0149cb360fb4e4f8471d86b0cc492e1d1d006bd39175f1934f6cae8e4c884c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Only 2 glmr allowed to be transf\")\n        mstore(add(headStart, 96), \"ered.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC721Burnable: caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101145760003560e01c806370a08231116100a0578063b88d4fde11610064578063b88d4fde146102e8578063c87b56dd14610308578063d204c45e14610328578063e985e9c51461033b578063f2fde38b1461038457600080fd5b806370a0823114610252578063715018a6146102805780638da5cb5b1461029557806395d89b41146102b3578063a22cb465146102c857600080fd5b806323b872dd116100e757806323b872dd146101ca5780633ccfd60b146101ea57806342842e0e146101f257806342966c68146102125780636352211e1461023257600080fd5b806301ffc9a71461011957806306fdde031461014e578063081812fc14610170578063095ea7b3146101a8575b600080fd5b34801561012557600080fd5b50610139610134366004611945565b6103a4565b60405190151581526020015b60405180910390f35b34801561015a57600080fd5b506101636103f6565b6040516101459190611a30565b34801561017c57600080fd5b5061019061018b36600461197f565b610488565b6040516001600160a01b039091168152602001610145565b3480156101b457600080fd5b506101c86101c336600461191b565b610515565b005b3480156101d657600080fd5b506101c86101e53660046117c5565b61062b565b6101c861065d565b3480156101fe57600080fd5b506101c861020d3660046117c5565b6106b6565b34801561021e57600080fd5b506101c861022d36600461197f565b6106d1565b34801561023e57600080fd5b5061019061024d36600461197f565b61074b565b34801561025e57600080fd5b5061027261026d366004611777565b6107c2565b604051908152602001610145565b34801561028c57600080fd5b506101c8610849565b3480156102a157600080fd5b506007546001600160a01b0316610190565b3480156102bf57600080fd5b506101636108af565b3480156102d457600080fd5b506101c86102e336600461187d565b6108be565b3480156102f457600080fd5b506101c8610303366004611801565b6108cd565b34801561031457600080fd5b5061016361032336600461197f565b610905565b6101c86103363660046118b9565b610910565b34801561034757600080fd5b50610139610356366004611792565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561039057600080fd5b506101c861039f366004611777565b6109a4565b60006001600160e01b031982166380ac58cd60e01b14806103d557506001600160e01b03198216635b5e139f60e01b145b806103f057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461040590611b55565b80601f016020809104026020016040519081016040528092919081815260200182805461043190611b55565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b600061049382610a6c565b6104f95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105208261074b565b9050806001600160a01b0316836001600160a01b0316141561058e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104f0565b336001600160a01b03821614806105aa57506105aa8133610356565b61061c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104f0565b6106268383610a89565b505050565b610636335b82610af7565b6106525760405162461bcd60e51b81526004016104f090611a95565b610626838383610be1565b60006106716007546001600160a01b031690565b90506001600160a01b038116331461068857600080fd5b604051339081904780156108fc02916000818181858888f19350505050158015610626573d6000803e3d6000fd5b610626838383604051806020016040528060008152506108cd565b6106da33610630565b61073f5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016104f0565b61074881610d81565b50565b6000818152600260205260408120546001600160a01b0316806103f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104f0565b60006001600160a01b03821661082d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104f0565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146108a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f0565b6108ad6000610d8a565b565b60606001805461040590611b55565b6108c9338383610ddc565b5050565b6108d73383610af7565b6108f35760405162461bcd60e51b81526004016104f090611a95565b6108ff84848484610eab565b50505050565b60606103f082610ede565b34671bc16d674ec80000146109755760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79203220676c6d7220616c6c6f77656420746f206265207472616e736660448201526432b932b21760d91b60648201526084016104f0565b600061098060085490565b9050610990600880546001019055565b61099a838261104d565b6106268183611067565b6007546001600160a01b031633146109fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104f0565b6001600160a01b038116610a635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104f0565b61074881610d8a565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610abe8261074b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b0282610a6c565b610b635760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104f0565b6000610b6e8361074b565b9050806001600160a01b0316846001600160a01b03161480610ba95750836001600160a01b0316610b9e84610488565b6001600160a01b0316145b80610bd957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610bf48261074b565b6001600160a01b031614610c5c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016104f0565b6001600160a01b038216610cbe5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104f0565b610cc9600082610a89565b6001600160a01b0383166000908152600360205260408120805460019290610cf2908490611b12565b90915550506001600160a01b0382166000908152600360205260408120805460019290610d20908490611ae6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610748816110f2565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610e3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104f0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610eb6848484610be1565b610ec284848484611132565b6108ff5760405162461bcd60e51b81526004016104f090611a43565b6060610ee982610a6c565b610f4f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104f0565b60008281526006602052604081208054610f6890611b55565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9490611b55565b8015610fe15780601f10610fb657610100808354040283529160200191610fe1565b820191906000526020600020905b815481529060010190602001808311610fc457829003601f168201915b505050505090506000610fff60408051602081019091526000815290565b9050805160001415611012575092915050565b81511561104457808260405160200161102c9291906119c4565b60405160208183030381529060405292505050919050565b610bd98461123f565b6108c9828260405180602001604052806000815250611317565b61107082610a6c565b6110d35760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104f0565b6000828152600660209081526040909120825161062692840190611616565b6110fb8161134a565b6000818152600660205260409020805461111490611b55565b1590506107485760008181526006602052604081206107489161169a565b60006001600160a01b0384163b1561123457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906111769033908990889088906004016119f3565b602060405180830381600087803b15801561119057600080fd5b505af19250505080156111c0575060408051601f3d908101601f191682019092526111bd91810190611962565b60015b61121a573d8080156111ee576040519150601f19603f3d011682016040523d82523d6000602084013e6111f3565b606091505b5080516112125760405162461bcd60e51b81526004016104f090611a43565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610bd9565b506001949350505050565b606061124a82610a6c565b6112ae5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104f0565b60006112c560408051602081019091526000815290565b905060008151116112e55760405180602001604052806000815250611310565b806112ef846113e5565b6040516020016113009291906119c4565b6040516020818303038152906040525b9392505050565b61132183836114e3565b61132e6000848484611132565b6106265760405162461bcd60e51b81526004016104f090611a43565b60006113558261074b565b9050611362600083610a89565b6001600160a01b038116600090815260036020526040812080546001929061138b908490611b12565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816114095750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611433578061141d81611b90565b915061142c9050600a83611afe565b915061140d565b60008167ffffffffffffffff81111561144e5761144e611c01565b6040519080825280601f01601f191660200182016040528015611478576020820181803683370190505b5090505b8415610bd95761148d600183611b12565b915061149a600a86611bab565b6114a5906030611ae6565b60f81b8183815181106114ba576114ba611beb565b60200101906001600160f81b031916908160001a9053506114dc600a86611afe565b945061147c565b6001600160a01b0382166115395760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104f0565b61154281610a6c565b1561158f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104f0565b6001600160a01b03821660009081526003602052604081208054600192906115b8908490611ae6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461162290611b55565b90600052602060002090601f016020900481019282611644576000855561168a565b82601f1061165d57805160ff191683800117855561168a565b8280016001018555821561168a579182015b8281111561168a57825182559160200191906001019061166f565b506116969291506116d0565b5090565b5080546116a690611b55565b6000825580601f106116b6575050565b601f01602090049060005260206000209081019061074891905b5b8082111561169657600081556001016116d1565b600067ffffffffffffffff8084111561170057611700611c01565b604051601f8501601f19908116603f0116810190828211818310171561172857611728611c01565b8160405280935085815286868601111561174157600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461177257600080fd5b919050565b60006020828403121561178957600080fd5b6113108261175b565b600080604083850312156117a557600080fd5b6117ae8361175b565b91506117bc6020840161175b565b90509250929050565b6000806000606084860312156117da57600080fd5b6117e38461175b565b92506117f16020850161175b565b9150604084013590509250925092565b6000806000806080858703121561181757600080fd5b6118208561175b565b935061182e6020860161175b565b925060408501359150606085013567ffffffffffffffff81111561185157600080fd5b8501601f8101871361186257600080fd5b611871878235602084016116e5565b91505092959194509250565b6000806040838503121561189057600080fd5b6118998361175b565b9150602083013580151581146118ae57600080fd5b809150509250929050565b600080604083850312156118cc57600080fd5b6118d58361175b565b9150602083013567ffffffffffffffff8111156118f157600080fd5b8301601f8101851361190257600080fd5b611911858235602084016116e5565b9150509250929050565b6000806040838503121561192e57600080fd5b6119378361175b565b946020939093013593505050565b60006020828403121561195757600080fd5b813561131081611c17565b60006020828403121561197457600080fd5b815161131081611c17565b60006020828403121561199157600080fd5b5035919050565b600081518084526119b0816020860160208601611b29565b601f01601f19169290920160200192915050565b600083516119d6818460208801611b29565b8351908301906119ea818360208801611b29565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a2690830184611998565b9695505050505050565b6020815260006113106020830184611998565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611af957611af9611bbf565b500190565b600082611b0d57611b0d611bd5565b500490565b600082821015611b2457611b24611bbf565b500390565b60005b83811015611b44578181015183820152602001611b2c565b838111156108ff5750506000910152565b600181811c90821680611b6957607f821691505b60208210811415611b8a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611ba457611ba4611bbf565b5060010190565b600082611bba57611bba611bd5565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461074857600080fdfea2646970667358221220644b3dc2024b1fa1cf5b8f6a994204b648d85e179cfde40644c717a12f36502664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xD204C45E EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1945 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x1A30 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x62B JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x65D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x17C5 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x190 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x272 PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x187D JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x303 CALLDATASIZE PUSH1 0x4 PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x163 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x905 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x18B9 JUMP JUMPDEST PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0x1792 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C8 PUSH2 0x39F CALLDATASIZE PUSH1 0x4 PUSH2 0x1777 JUMP JUMPDEST PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3D5 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3F0 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x453 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x493 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x520 DUP3 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5AA JUMPI POP PUSH2 0x5AA DUP2 CALLER PUSH2 0x356 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 PUSH2 0xA89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x636 CALLER JUMPDEST DUP3 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x626 DUP4 DUP4 DUP4 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x671 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x688 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP2 SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x626 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x6DA CALLER PUSH2 0x630 JUMP JUMPDEST PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0xD81 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x8AD PUSH1 0x0 PUSH2 0xD8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH2 0x8C9 CALLER DUP4 DUP4 PUSH2 0xDDC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8D7 CALLER DUP4 PUSH2 0xAF7 JUMP JUMPDEST PUSH2 0x8F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A95 JUMP JUMPDEST PUSH2 0x8FF DUP5 DUP5 DUP5 DUP5 PUSH2 0xEAB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3F0 DUP3 PUSH2 0xEDE JUMP JUMPDEST CALLVALUE PUSH8 0x1BC16D674EC80000 EQ PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79203220676C6D7220616C6C6F77656420746F206265207472616E7366 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x32B932B217 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x980 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x990 PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x99A DUP4 DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH2 0x626 DUP2 DUP4 PUSH2 0x1067 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xABE DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB02 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xB63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6E DUP4 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xBA9 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB9E DUP5 PUSH2 0x488 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xBD9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBF4 DUP3 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0xCC9 PUSH1 0x0 DUP3 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xCF2 SWAP1 DUP5 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD20 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xE3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xEB6 DUP5 DUP5 DUP5 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0xEC2 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x8FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEE9 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0xF4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0xF68 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF94 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFE1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFB6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFE1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xFFF PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1012 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1044 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x102C SWAP3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBD9 DUP5 PUSH2 0x123F JUMP JUMPDEST PUSH2 0x8C9 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1317 JUMP JUMPDEST PUSH2 0x1070 DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x10D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x626 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x10FB DUP2 PUSH2 0x134A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1114 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x748 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x748 SWAP2 PUSH2 0x169A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1234 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1176 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11C0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x11BD SWAP2 DUP2 ADD SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x121A JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x1212 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xBD9 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x124A DUP3 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x12E5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1310 JUMP JUMPDEST DUP1 PUSH2 0x12EF DUP5 PUSH2 0x13E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1300 SWAP3 SWAP2 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1321 DUP4 DUP4 PUSH2 0x14E3 JUMP JUMPDEST PUSH2 0x132E PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x626 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 DUP3 PUSH2 0x74B JUMP JUMPDEST SWAP1 POP PUSH2 0x1362 PUSH1 0x0 DUP4 PUSH2 0xA89 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x138B SWAP1 DUP5 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1409 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1433 JUMPI DUP1 PUSH2 0x141D DUP2 PUSH2 0x1B90 JUMP JUMPDEST SWAP2 POP PUSH2 0x142C SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1AFE JUMP JUMPDEST SWAP2 POP PUSH2 0x140D JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144E PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1478 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xBD9 JUMPI PUSH2 0x148D PUSH1 0x1 DUP4 PUSH2 0x1B12 JUMP JUMPDEST SWAP2 POP PUSH2 0x149A PUSH1 0xA DUP7 PUSH2 0x1BAB JUMP JUMPDEST PUSH2 0x14A5 SWAP1 PUSH1 0x30 PUSH2 0x1AE6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14BA JUMPI PUSH2 0x14BA PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x14DC PUSH1 0xA DUP7 PUSH2 0x1AFE JUMP JUMPDEST SWAP5 POP PUSH2 0x147C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH2 0x1542 DUP2 PUSH2 0xA6C JUMP JUMPDEST ISZERO PUSH2 0x158F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x15B8 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1622 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1644 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x168A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x165D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x168A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x168A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x168A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x166F JUMP JUMPDEST POP PUSH2 0x1696 SWAP3 SWAP2 POP PUSH2 0x16D0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x16A6 SWAP1 PUSH2 0x1B55 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x16B6 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x748 SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1700 JUMPI PUSH2 0x1700 PUSH2 0x1C01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1728 JUMPI PUSH2 0x1728 PUSH2 0x1C01 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1310 DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AE DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH2 0x17BC PUSH1 0x20 DUP5 ADD PUSH2 0x175B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17E3 DUP5 PUSH2 0x175B JUMP JUMPDEST SWAP3 POP PUSH2 0x17F1 PUSH1 0x20 DUP6 ADD PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1820 DUP6 PUSH2 0x175B JUMP JUMPDEST SWAP4 POP PUSH2 0x182E PUSH1 0x20 DUP7 ADD PUSH2 0x175B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1851 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1871 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1899 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D5 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1902 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1911 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1937 DUP4 PUSH2 0x175B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1310 DUP2 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1974 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1310 DUP2 PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x19B0 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x19D6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19EA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1B29 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A26 SWAP1 DUP4 ADD DUP5 PUSH2 0x1998 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1310 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1998 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1AF9 JUMPI PUSH2 0x1AF9 PUSH2 0x1BBF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B0D JUMPI PUSH2 0x1B0D PUSH2 0x1BD5 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B24 JUMPI PUSH2 0x1B24 PUSH2 0x1BBF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B44 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B2C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8FF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B69 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B8A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1BA4 JUMPI PUSH2 0x1BA4 PUSH2 0x1BBF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BBA JUMPI PUSH2 0x1BBA PUSH2 0x1BD5 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x4B3DC2024B 0x1F LOG1 0xCF JUMPDEST DUP16 PUSH11 0x994204B648D85E179CFDE4 MOD DIFFICULTY 0xC7 OR LOG1 0x2F CALLDATASIZE POP 0x26 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "39309:1069:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24483:300;;;;;;;;;;-1:-1:-1;24483:300:0;;;;;:::i;:::-;;:::i;:::-;;;5720:14:1;;5713:22;5695:41;;5683:2;5668:18;24483:300:0;;;;;;;;25401:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;26912:217::-;;;;;;;;;;-1:-1:-1;26912:217:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5018:32:1;;;5000:51;;4988:2;4973:18;26912:217:0;4854:203:1;26450:401:0;;;;;;;;;;-1:-1:-1;26450:401:0;;;;;:::i;:::-;;:::i;:::-;;27639:330;;;;;;;;;;-1:-1:-1;27639:330:0;;;;;:::i;:::-;;:::i;40163:212::-;;;:::i;28035:179::-;;;;;;;;;;-1:-1:-1;28035:179:0;;;;;:::i;:::-;;:::i;37064:241::-;;;;;;;;;;-1:-1:-1;37064:241:0;;;;;:::i;:::-;;:::i;25104:235::-;;;;;;;;;;-1:-1:-1;25104:235:0;;;;;:::i;:::-;;:::i;24842:205::-;;;;;;;;;;-1:-1:-1;24842:205:0;;;;;:::i;:::-;;:::i;:::-;;;14155:25:1;;;14143:2;14128:18;24842:205:0;14009:177:1;6030:101:0;;;;;;;;;;;;;:::i;5398:85::-;;;;;;;;;;-1:-1:-1;5470:6:0;;-1:-1:-1;;;;;5470:6:0;5398:85;;25563:102;;;;;;;;;;;;;:::i;27196:153::-;;;;;;;;;;-1:-1:-1;27196:153:0;;;;;:::i;:::-;;:::i;28280:320::-;;;;;;;;;;-1:-1:-1;28280:320:0;;;;;:::i;:::-;;:::i;39968:189::-;;;;;;;;;;-1:-1:-1;39968:189:0;;;;;:::i;:::-;;:::i;39525:318::-;;;;;;:::i;:::-;;:::i;27415:162::-;;;;;;;;;;-1:-1:-1;27415:162:0;;;;;:::i;:::-;-1:-1:-1;;;;;27535:25:0;;;27512:4;27535:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;27415:162;6280:198;;;;;;;;;;-1:-1:-1;6280:198:0;;;;;:::i;:::-;;:::i;24483:300::-;24585:4;-1:-1:-1;;;;;;24620:40:0;;-1:-1:-1;;;24620:40:0;;:104;;-1:-1:-1;;;;;;;24676:48:0;;-1:-1:-1;;;24676:48:0;24620:104;:156;;;-1:-1:-1;;;;;;;;;;17591:40:0;;;24740:36;24601:175;24483:300;-1:-1:-1;;24483:300:0:o;25401:98::-;25455:13;25487:5;25480:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25401:98;:::o;26912:217::-;26988:7;27015:16;27023:7;27015;:16::i;:::-;27007:73;;;;-1:-1:-1;;;27007:73:0;;10968:2:1;27007:73:0;;;10950:21:1;11007:2;10987:18;;;10980:30;11046:34;11026:18;;;11019:62;-1:-1:-1;;;11097:18:1;;;11090:42;11149:19;;27007:73:0;;;;;;;;;-1:-1:-1;27098:24:0;;;;:15;:24;;;;;;-1:-1:-1;;;;;27098:24:0;;26912:217::o;26450:401::-;26530:13;26546:23;26561:7;26546:14;:23::i;:::-;26530:39;;26593:5;-1:-1:-1;;;;;26587:11:0;:2;-1:-1:-1;;;;;26587:11:0;;;26579:57;;;;-1:-1:-1;;;26579:57:0;;12568:2:1;26579:57:0;;;12550:21:1;12607:2;12587:18;;;12580:30;12646:34;12626:18;;;12619:62;-1:-1:-1;;;12697:18:1;;;12690:31;12738:19;;26579:57:0;12366:397:1;26579:57:0;4245:10;-1:-1:-1;;;;;26668:21:0;;;;:62;;-1:-1:-1;26693:37:0;26710:5;4245:10;27415:162;:::i;26693:37::-;26647:165;;;;-1:-1:-1;;;26647:165:0;;8528:2:1;26647:165:0;;;8510:21:1;8567:2;8547:18;;;8540:30;8606:34;8586:18;;;8579:62;8677:26;8657:18;;;8650:54;8721:19;;26647:165:0;8326:420:1;26647:165:0;26823:21;26832:2;26836:7;26823:8;:21::i;:::-;26520:331;26450:401;;:::o;27639:330::-;27828:41;4245:10;27847:12;27861:7;27828:18;:41::i;:::-;27820:103;;;;-1:-1:-1;;;27820:103:0;;;;;;;:::i;:::-;27934:28;27944:4;27950:2;27954:7;27934:9;:28::i;40163:212::-;40210:13;40226:7;5470:6;;-1:-1:-1;;;;;5470:6:0;;5398:85;40226:7;40210:23;-1:-1:-1;;;;;;40251:19:0;;40260:10;40251:19;40243:28;;;;;;40331:34;;40310:10;;;;40343:21;40331:34;;;;;40281:18;40331:34;40281:18;40331:34;40343:21;40310:10;40331:34;;;;;;;;;;;;;;;;;;;28035:179;28168:39;28185:4;28191:2;28195:7;28168:39;;;;;;;;;;;;:16;:39::i;37064:241::-;37180:41;4245:10;37199:12;4166:96;37180:41;37172:102;;;;-1:-1:-1;;;37172:102:0;;13794:2:1;37172:102:0;;;13776:21:1;13833:2;13813:18;;;13806:30;13872:34;13852:18;;;13845:62;-1:-1:-1;;;13923:18:1;;;13916:46;13979:19;;37172:102:0;13592:412:1;37172:102:0;37284:14;37290:7;37284:5;:14::i;:::-;37064:241;:::o;25104:235::-;25176:7;25211:16;;;:7;:16;;;;;;-1:-1:-1;;;;;25211:16:0;25245:19;25237:73;;;;-1:-1:-1;;;25237:73:0;;9364:2:1;25237:73:0;;;9346:21:1;9403:2;9383:18;;;9376:30;9442:34;9422:18;;;9415:62;-1:-1:-1;;;9493:18:1;;;9486:39;9542:19;;25237:73:0;9162:405:1;24842:205:0;24914:7;-1:-1:-1;;;;;24941:19:0;;24933:74;;;;-1:-1:-1;;;24933:74:0;;8953:2:1;24933:74:0;;;8935:21:1;8992:2;8972:18;;;8965:30;9031:34;9011:18;;;9004:62;-1:-1:-1;;;9082:18:1;;;9075:40;9132:19;;24933:74:0;8751:406:1;24933:74:0;-1:-1:-1;;;;;;25024:16:0;;;;;:9;:16;;;;;;;24842:205::o;6030:101::-;5470:6;;-1:-1:-1;;;;;5470:6:0;4245:10;5610:23;5602:68;;;;-1:-1:-1;;;5602:68:0;;11381:2:1;5602:68:0;;;11363:21:1;;;11400:18;;;11393:30;11459:34;11439:18;;;11432:62;11511:18;;5602:68:0;11179:356:1;5602:68:0;6094:30:::1;6121:1;6094:18;:30::i;:::-;6030:101::o:0;25563:102::-;25619:13;25651:7;25644:14;;;;;:::i;27196:153::-;27290:52;4245:10;27323:8;27333;27290:18;:52::i;:::-;27196:153;;:::o;28280:320::-;28449:41;4245:10;28482:7;28449:18;:41::i;:::-;28441:103;;;;-1:-1:-1;;;28441:103:0;;;;;;;:::i;:::-;28554:39;28568:4;28574:2;28578:7;28587:5;28554:13;:39::i;:::-;28280:320;;;;:::o;39968:189::-;40091:13;40127:23;40142:7;40127:14;:23::i;39525:318::-;39607:9;39620:7;39607:20;39599:70;;;;-1:-1:-1;;;39599:70:0;;13388:2:1;39599:70:0;;;13370:21:1;13427:2;13407:18;;;13400:30;13466:34;13446:18;;;13439:62;-1:-1:-1;;;13517:18:1;;;13510:35;13562:19;;39599:70:0;13186:401:1;39599:70:0;39688:15;39706:25;:15;972:14;;881:112;39706:25;39688:43;;39741:27;:15;1086:19;;1104:1;1086:19;;;999:123;39741:27;39778:22;39788:2;39792:7;39778:9;:22::i;:::-;39810:26;39823:7;39832:3;39810:12;:26::i;6280:198::-;5470:6;;-1:-1:-1;;;;;5470:6:0;4245:10;5610:23;5602:68;;;;-1:-1:-1;;;5602:68:0;;11381:2:1;5602:68:0;;;11363:21:1;;;11400:18;;;11393:30;11459:34;11439:18;;;11432:62;11511:18;;5602:68:0;11179:356:1;5602:68:0;-1:-1:-1;;;;;6368:22:0;::::1;6360:73;;;::::0;-1:-1:-1;;;6360:73:0;;6592:2:1;6360:73:0::1;::::0;::::1;6574:21:1::0;6631:2;6611:18;;;6604:30;6670:34;6650:18;;;6643:62;-1:-1:-1;;;6721:18:1;;;6714:36;6767:19;;6360:73:0::1;6390:402:1::0;6360:73:0::1;6443:28;6462:8;6443:18;:28::i;30072:125::-:0;30137:4;30160:16;;;:7;:16;;;;;;-1:-1:-1;;;;;30160:16:0;:30;;;30072:125::o;33923:171::-;33997:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;33997:29:0;-1:-1:-1;;;;;33997:29:0;;;;;;;;:24;;34050:23;33997:24;34050:14;:23::i;:::-;-1:-1:-1;;;;;34041:46:0;;;;;;;;;;;33923:171;;:::o;30355:344::-;30448:4;30472:16;30480:7;30472;:16::i;:::-;30464:73;;;;-1:-1:-1;;;30464:73:0;;8115:2:1;30464:73:0;;;8097:21:1;8154:2;8134:18;;;8127:30;8193:34;8173:18;;;8166:62;-1:-1:-1;;;8244:18:1;;;8237:42;8296:19;;30464:73:0;7913:408:1;30464:73:0;30547:13;30563:23;30578:7;30563:14;:23::i;:::-;30547:39;;30615:5;-1:-1:-1;;;;;30604:16:0;:7;-1:-1:-1;;;;;30604:16:0;;:51;;;;30648:7;-1:-1:-1;;;;;30624:31:0;:20;30636:7;30624:11;:20::i;:::-;-1:-1:-1;;;;;30624:31:0;;30604:51;:87;;;-1:-1:-1;;;;;;27535:25:0;;;27512:4;27535:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;30659:32;30596:96;30355:344;-1:-1:-1;;;;30355:344:0:o;33252:560::-;33406:4;-1:-1:-1;;;;;33379:31:0;:23;33394:7;33379:14;:23::i;:::-;-1:-1:-1;;;;;33379:31:0;;33371:85;;;;-1:-1:-1;;;33371:85:0;;11742:2:1;33371:85:0;;;11724:21:1;11781:2;11761:18;;;11754:30;11820:34;11800:18;;;11793:62;-1:-1:-1;;;11871:18:1;;;11864:39;11920:19;;33371:85:0;11540:405:1;33371:85:0;-1:-1:-1;;;;;33474:16:0;;33466:65;;;;-1:-1:-1;;;33466:65:0;;7356:2:1;33466:65:0;;;7338:21:1;7395:2;7375:18;;;7368:30;7434:34;7414:18;;;7407:62;-1:-1:-1;;;7485:18:1;;;7478:34;7529:19;;33466:65:0;7154:400:1;33466:65:0;33643:29;33660:1;33664:7;33643:8;:29::i;:::-;-1:-1:-1;;;;;33683:15:0;;;;;;:9;:15;;;;;:20;;33702:1;;33683:15;:20;;33702:1;;33683:20;:::i;:::-;;;;-1:-1:-1;;;;;;;33713:13:0;;;;;;:9;:13;;;;;:18;;33730:1;;33713:13;:18;;33730:1;;33713:18;:::i;:::-;;;;-1:-1:-1;;33741:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;33741:21:0;-1:-1:-1;;;;;33741:21:0;;;;;;;;;33778:27;;33741:16;;33778:27;;;;;;;33252:560;;;:::o;39849:113::-;39935:20;39947:7;39935:11;:20::i;6632:187::-;6724:6;;;-1:-1:-1;;;;;6740:17:0;;;-1:-1:-1;;;;;;6740:17:0;;;;;;;6772:40;;6724:6;;;6740:17;6724:6;;6772:40;;6705:16;;6772:40;6695:124;6632:187;:::o;34229:307::-;34379:8;-1:-1:-1;;;;;34370:17:0;:5;-1:-1:-1;;;;;34370:17:0;;;34362:55;;;;-1:-1:-1;;;34362:55:0;;7761:2:1;34362:55:0;;;7743:21:1;7800:2;7780:18;;;7773:30;7839:27;7819:18;;;7812:55;7884:18;;34362:55:0;7559:349:1;34362:55:0;-1:-1:-1;;;;;34427:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;34427:46:0;;;;;;;;;;34488:41;;5695::1;;;34488::0;;5668:18:1;34488:41:0;;;;;;;34229:307;;;:::o;29462:::-;29613:28;29623:4;29629:2;29633:7;29613:9;:28::i;:::-;29659:48;29682:4;29688:2;29692:7;29701:5;29659:22;:48::i;:::-;29651:111;;;;-1:-1:-1;;;29651:111:0;;;;;;;:::i;37800:663::-;37873:13;37906:16;37914:7;37906;:16::i;:::-;37898:78;;;;-1:-1:-1;;;37898:78:0;;10550:2:1;37898:78:0;;;10532:21:1;10589:2;10569:18;;;10562:30;10628:34;10608:18;;;10601:62;-1:-1:-1;;;10679:18:1;;;10672:47;10736:19;;37898:78:0;10348:413:1;37898:78:0;37987:23;38013:19;;;:10;:19;;;;;37987:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38042:18;38063:10;26377:9;;;;;;;;;-1:-1:-1;26377:9:0;;;26301:92;38063:10;38042:31;;38152:4;38146:18;38168:1;38146:23;38142:70;;;-1:-1:-1;38192:9:0;37800:663;-1:-1:-1;;37800:663:0:o;38142:70::-;38314:23;;:27;38310:106;;38388:4;38394:9;38371:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;38357:48;;;;37800:663;;;:::o;38310:106::-;38433:23;38448:7;38433:14;:23::i;31029:108::-;31104:26;31114:2;31118:7;31104:26;;;;;;;;;;;;:9;:26::i;38610:214::-;38709:16;38717:7;38709;:16::i;:::-;38701:75;;;;-1:-1:-1;;;38701:75:0;;9774:2:1;38701:75:0;;;9756:21:1;9813:2;9793:18;;;9786:30;9852:34;9832:18;;;9825:62;-1:-1:-1;;;9903:18:1;;;9896:44;9957:19;;38701:75:0;9572:410:1;38701:75:0;38786:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;39041:200::-;39109:20;39121:7;39109:11;:20::i;:::-;39150:19;;;;:10;:19;;;;;39144:33;;;;;:::i;:::-;:38;;-1:-1:-1;39140:95:0;;39205:19;;;;:10;:19;;;;;39198:26;;;:::i;35089:778::-;35239:4;-1:-1:-1;;;;;35259:13:0;;7931:20;7977:8;35255:606;;35294:72;;-1:-1:-1;;;35294:72:0;;-1:-1:-1;;;;;35294:36:0;;;;;:72;;4245:10;;35345:4;;35351:7;;35360:5;;35294:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35294:72:0;;;;;;;;-1:-1:-1;;35294:72:0;;;;;;;;;;;;:::i;:::-;;;35290:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35533:13:0;;35529:266;;35575:60;;-1:-1:-1;;;35575:60:0;;;;;;;:::i;35529:266::-;35747:6;35741:13;35732:6;35728:2;35724:15;35717:38;35290:519;-1:-1:-1;;;;;;35416:51:0;-1:-1:-1;;;35416:51:0;;-1:-1:-1;35409:58:0;;35255:606;-1:-1:-1;35846:4:0;35089:778;;;;;;:::o;25731:329::-;25804:13;25837:16;25845:7;25837;:16::i;:::-;25829:76;;;;-1:-1:-1;;;25829:76:0;;12152:2:1;25829:76:0;;;12134:21:1;12191:2;12171:18;;;12164:30;12230:34;12210:18;;;12203:62;-1:-1:-1;;;12281:18:1;;;12274:45;12336:19;;25829:76:0;11950:411:1;25829:76:0;25916:21;25940:10;26377:9;;;;;;;;;-1:-1:-1;26377:9:0;;;26301:92;25940:10;25916:34;;25991:1;25973:7;25967:21;:25;:86;;;;;;;;;;;;;;;;;26019:7;26028:18;:7;:16;:18::i;:::-;26002:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;25967:86;25960:93;25731:329;-1:-1:-1;;;25731:329:0:o;31358:311::-;31483:18;31489:2;31493:7;31483:5;:18::i;:::-;31532:54;31563:1;31567:2;31571:7;31580:5;31532:22;:54::i;:::-;31511:151;;;;-1:-1:-1;;;31511:151:0;;;;;;;:::i;32580:348::-;32639:13;32655:23;32670:7;32655:14;:23::i;:::-;32639:39;;32775:29;32792:1;32796:7;32775:8;:29::i;:::-;-1:-1:-1;;;;;32815:16:0;;;;;;:9;:16;;;;;:21;;32835:1;;32815:16;:21;;32835:1;;32815:21;:::i;:::-;;;;-1:-1:-1;;32853:16:0;;;;:7;:16;;;;;;32846:23;;-1:-1:-1;;;;;;32846:23:0;;;32885:36;32861:7;;32853:16;-1:-1:-1;;;;;32885:36:0;;;;;32853:16;;32885:36;32629:299;32580:348;:::o;1800:703::-;1856:13;2073:10;2069:51;;-1:-1:-1;;2099:10:0;;;;;;;;;;;;-1:-1:-1;;;2099:10:0;;;;;1800:703::o;2069:51::-;2144:5;2129:12;2183:75;2190:9;;2183:75;;2215:8;;;;:::i;:::-;;-1:-1:-1;2237:10:0;;-1:-1:-1;2245:2:0;2237:10;;:::i;:::-;;;2183:75;;;2267:19;2299:6;2289:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2289:17:0;;2267:39;;2316:150;2323:10;;2316:150;;2349:11;2359:1;2349:11;;:::i;:::-;;-1:-1:-1;2417:10:0;2425:2;2417:5;:10;:::i;:::-;2404:24;;:2;:24;:::i;:::-;2391:39;;2374:6;2381;2374:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;2374:56:0;;;;;;;;-1:-1:-1;2444:11:0;2453:2;2444:11;;:::i;:::-;;;2316:150;;31991:372;-1:-1:-1;;;;;32070:16:0;;32062:61;;;;-1:-1:-1;;;32062:61:0;;10189:2:1;32062:61:0;;;10171:21:1;;;10208:18;;;10201:30;10267:34;10247:18;;;10240:62;10319:18;;32062:61:0;9987:356:1;32062:61:0;32142:16;32150:7;32142;:16::i;:::-;32141:17;32133:58;;;;-1:-1:-1;;;32133:58:0;;6999:2:1;32133:58:0;;;6981:21:1;7038:2;7018:18;;;7011:30;7077;7057:18;;;7050:58;7125:18;;32133:58:0;6797:352:1;32133:58:0;-1:-1:-1;;;;;32258:13:0;;;;;;:9;:13;;;;;:18;;32275:1;;32258:13;:18;;32275:1;;32258:18;:::i;:::-;;;;-1:-1:-1;;32286:16:0;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;32286:21:0;-1:-1:-1;;;;;32286:21:0;;;;;;;;32323:33;;32286:16;;;32323:33;;32286:16;;32323:33;31991:372;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:631:1;78:5;108:18;149:2;141:6;138:14;135:40;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:1;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:72;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:45;;;532:1;529;522:12;491:45;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;14:631;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:1;;757:42;;747:70;;813:1;810;803:12;747:70;650:173;;;:::o;828:186::-;887:6;940:2;928:9;919:7;915:23;911:32;908:52;;;956:1;953;946:12;908:52;979:29;998:9;979:29;:::i;1019:260::-;1087:6;1095;1148:2;1136:9;1127:7;1123:23;1119:32;1116:52;;;1164:1;1161;1154:12;1116:52;1187:29;1206:9;1187:29;:::i;:::-;1177:39;;1235:38;1269:2;1258:9;1254:18;1235:38;:::i;:::-;1225:48;;1019:260;;;;;:::o;1284:328::-;1361:6;1369;1377;1430:2;1418:9;1409:7;1405:23;1401:32;1398:52;;;1446:1;1443;1436:12;1398:52;1469:29;1488:9;1469:29;:::i;:::-;1459:39;;1517:38;1551:2;1540:9;1536:18;1517:38;:::i;:::-;1507:48;;1602:2;1591:9;1587:18;1574:32;1564:42;;1284:328;;;;;:::o;1617:666::-;1712:6;1720;1728;1736;1789:3;1777:9;1768:7;1764:23;1760:33;1757:53;;;1806:1;1803;1796:12;1757:53;1829:29;1848:9;1829:29;:::i;:::-;1819:39;;1877:38;1911:2;1900:9;1896:18;1877:38;:::i;:::-;1867:48;;1962:2;1951:9;1947:18;1934:32;1924:42;;2017:2;2006:9;2002:18;1989:32;2044:18;2036:6;2033:30;2030:50;;;2076:1;2073;2066:12;2030:50;2099:22;;2152:4;2144:13;;2140:27;-1:-1:-1;2130:55:1;;2181:1;2178;2171:12;2130:55;2204:73;2269:7;2264:2;2251:16;2246:2;2242;2238:11;2204:73;:::i;:::-;2194:83;;;1617:666;;;;;;;:::o;2288:347::-;2353:6;2361;2414:2;2402:9;2393:7;2389:23;2385:32;2382:52;;;2430:1;2427;2420:12;2382:52;2453:29;2472:9;2453:29;:::i;:::-;2443:39;;2532:2;2521:9;2517:18;2504:32;2579:5;2572:13;2565:21;2558:5;2555:32;2545:60;;2601:1;2598;2591:12;2545:60;2624:5;2614:15;;;2288:347;;;;;:::o;2640:524::-;2718:6;2726;2779:2;2767:9;2758:7;2754:23;2750:32;2747:52;;;2795:1;2792;2785:12;2747:52;2818:29;2837:9;2818:29;:::i;:::-;2808:39;;2898:2;2887:9;2883:18;2870:32;2925:18;2917:6;2914:30;2911:50;;;2957:1;2954;2947:12;2911:50;2980:22;;3033:4;3025:13;;3021:27;-1:-1:-1;3011:55:1;;3062:1;3059;3052:12;3011:55;3085:73;3150:7;3145:2;3132:16;3127:2;3123;3119:11;3085:73;:::i;:::-;3075:83;;;2640:524;;;;;:::o;3169:254::-;3237:6;3245;3298:2;3286:9;3277:7;3273:23;3269:32;3266:52;;;3314:1;3311;3304:12;3266:52;3337:29;3356:9;3337:29;:::i;:::-;3327:39;3413:2;3398:18;;;;3385:32;;-1:-1:-1;;;3169:254:1:o;3428:245::-;3486:6;3539:2;3527:9;3518:7;3514:23;3510:32;3507:52;;;3555:1;3552;3545:12;3507:52;3594:9;3581:23;3613:30;3637:5;3613:30;:::i;3678:249::-;3747:6;3800:2;3788:9;3779:7;3775:23;3771:32;3768:52;;;3816:1;3813;3806:12;3768:52;3848:9;3842:16;3867:30;3891:5;3867:30;:::i;3932:180::-;3991:6;4044:2;4032:9;4023:7;4019:23;4015:32;4012:52;;;4060:1;4057;4050:12;4012:52;-1:-1:-1;4083:23:1;;3932:180;-1:-1:-1;3932:180:1:o;4117:257::-;4158:3;4196:5;4190:12;4223:6;4218:3;4211:19;4239:63;4295:6;4288:4;4283:3;4279:14;4272:4;4265:5;4261:16;4239:63;:::i;:::-;4356:2;4335:15;-1:-1:-1;;4331:29:1;4322:39;;;;4363:4;4318:50;;4117:257;-1:-1:-1;;4117:257:1:o;4379:470::-;4558:3;4596:6;4590:13;4612:53;4658:6;4653:3;4646:4;4638:6;4634:17;4612:53;:::i;:::-;4728:13;;4687:16;;;;4750:57;4728:13;4687:16;4784:4;4772:17;;4750:57;:::i;:::-;4823:20;;4379:470;-1:-1:-1;;;;4379:470:1:o;5062:488::-;-1:-1:-1;;;;;5331:15:1;;;5313:34;;5383:15;;5378:2;5363:18;;5356:43;5430:2;5415:18;;5408:34;;;5478:3;5473:2;5458:18;;5451:31;;;5256:4;;5499:45;;5524:19;;5516:6;5499:45;:::i;:::-;5491:53;5062:488;-1:-1:-1;;;;;;5062:488:1:o;5747:219::-;5896:2;5885:9;5878:21;5859:4;5916:44;5956:2;5945:9;5941:18;5933:6;5916:44;:::i;5971:414::-;6173:2;6155:21;;;6212:2;6192:18;;;6185:30;6251:34;6246:2;6231:18;;6224:62;-1:-1:-1;;;6317:2:1;6302:18;;6295:48;6375:3;6360:19;;5971:414::o;12768:413::-;12970:2;12952:21;;;13009:2;12989:18;;;12982:30;13048:34;13043:2;13028:18;;13021:62;-1:-1:-1;;;13114:2:1;13099:18;;13092:47;13171:3;13156:19;;12768:413::o;14191:128::-;14231:3;14262:1;14258:6;14255:1;14252:13;14249:39;;;14268:18;;:::i;:::-;-1:-1:-1;14304:9:1;;14191:128::o;14324:120::-;14364:1;14390;14380:35;;14395:18;;:::i;:::-;-1:-1:-1;14429:9:1;;14324:120::o;14449:125::-;14489:4;14517:1;14514;14511:8;14508:34;;;14522:18;;:::i;:::-;-1:-1:-1;14559:9:1;;14449:125::o;14579:258::-;14651:1;14661:113;14675:6;14672:1;14669:13;14661:113;;;14751:11;;;14745:18;14732:11;;;14725:39;14697:2;14690:10;14661:113;;;14792:6;14789:1;14786:13;14783:48;;;-1:-1:-1;;14827:1:1;14809:16;;14802:27;14579:258::o;14842:380::-;14921:1;14917:12;;;;14964;;;14985:61;;15039:4;15031:6;15027:17;15017:27;;14985:61;15092:2;15084:6;15081:14;15061:18;15058:38;15055:161;;;15138:10;15133:3;15129:20;15126:1;15119:31;15173:4;15170:1;15163:15;15201:4;15198:1;15191:15;15055:161;;14842:380;;;:::o;15227:135::-;15266:3;-1:-1:-1;;15287:17:1;;15284:43;;;15307:18;;:::i;:::-;-1:-1:-1;15354:1:1;15343:13;;15227:135::o;15367:112::-;15399:1;15425;15415:35;;15430:18;;:::i;:::-;-1:-1:-1;15464:9:1;;15367:112::o;15484:127::-;15545:10;15540:3;15536:20;15533:1;15526:31;15576:4;15573:1;15566:15;15600:4;15597:1;15590:15;15616:127;15677:10;15672:3;15668:20;15665:1;15658:31;15708:4;15705:1;15698:15;15732:4;15729:1;15722:15;15748:127;15809:10;15804:3;15800:20;15797:1;15790:31;15840:4;15837:1;15830:15;15864:4;15861:1;15854:15;15880:127;15941:10;15936:3;15932:20;15929:1;15922:31;15972:4;15969:1;15962:15;15996:4;15993:1;15986:15;16012:131;-1:-1:-1;;;;;;16086:32:1;;16076:43;;16066:71;;16133:1;16130;16123:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1453400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2612",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "4799",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"ownerOf(uint256)": "2667",
								"renounceOwnership()": "28162",
								"safeMint(address,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26797",
								"supportsInterface(bytes4)": "534",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28422",
								"withdraw()": "infinite"
							},
							"internal": {
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39475,
									"end": 39519,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D6F6F6E43617473"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D43415453"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 24369,
									"end": 24382,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24399,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24392,
									"end": 24399,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24392,
									"end": 24409,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24303,
									"end": 24416,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5283,
									"end": 5315,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5302,
									"end": 5312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 5302,
									"end": 5312,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5302,
									"end": 5312,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 5302,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5283,
									"end": 5301,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 5283,
									"end": 5315,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 5283,
									"end": 5315,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5283,
									"end": 5315,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4166,
									"end": 4262,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 4166,
									"end": 4262,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4245,
									"end": 4255,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 4245,
									"end": 4255,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4166,
									"end": 4262,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 6632,
									"end": 6819,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6632,
									"end": 6819,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 6812,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6772,
									"end": 6812,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6740,
									"end": 6757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6724,
									"end": 6730,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 6812,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 6772,
									"end": 6812,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6705,
									"end": 6721,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6705,
									"end": 6721,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6772,
									"end": 6812,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6695,
									"end": 6819,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6632,
									"end": 6819,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6632,
									"end": 6819,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 94,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 89,
									"end": 101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 136,
									"end": 148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 215,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 203,
									"end": 209,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 199,
									"end": 216,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 189,
									"end": 216,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 157,
									"end": 218,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 157,
									"end": 218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 256,
									"end": 262,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 253,
									"end": 267,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 251,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 230,
									"end": 268,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 310,
									"end": 320,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 305,
									"end": 308,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 301,
									"end": 321,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 298,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 291,
									"end": 322,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 345,
									"end": 349,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 342,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 335,
									"end": 350,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 373,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 378,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 227,
									"end": 388,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 227,
									"end": 388,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 14,
									"end": 394,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39309,
									"end": 40378,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220644b3dc2024b1fa1cf5b8f6a994204b648d85e179cfde40644c717a12f36502664736f6c63430008070033",
									".code": [
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "D204C45E"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39309,
											"end": 40378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5720,
											"end": 5734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5734,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5735,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4988,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4973,
											"end": 4991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4854,
											"end": 5057,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14155,
											"end": 14180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14155,
											"end": 14180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14143,
											"end": 14145,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14128,
											"end": 14146,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 14009,
											"end": 14186,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27512,
											"end": 27516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27553,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24585,
											"end": 24589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24676,
											"end": 24724,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 24620,
											"end": 24724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24620,
											"end": 24776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17591,
											"end": 17631,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24740,
											"end": 24776,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 24740,
											"end": 24776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24601,
											"end": 24776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24483,
											"end": 24783,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25455,
											"end": 25468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25487,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25480,
											"end": 25492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25401,
											"end": 25499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26988,
											"end": 26995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27015,
											"end": 27031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27023,
											"end": 27030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27015,
											"end": 27022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 27015,
											"end": 27031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27015,
											"end": 27031,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 27015,
											"end": 27031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10968,
											"end": 10970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 10971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11046,
											"end": 11080,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 11026,
											"end": 11044,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11026,
											"end": 11044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11168,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11149,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 27007,
											"end": 27080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27098,
											"end": 27122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26912,
											"end": 27129,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 26561,
											"end": 26568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26546,
											"end": 26560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 26546,
											"end": 26569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26530,
											"end": 26569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26593,
											"end": 26598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26587,
											"end": 26598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12568,
											"end": 12570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12550,
											"end": 12571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12609,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12587,
											"end": 12605,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12587,
											"end": 12605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12587,
											"end": 12605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12580,
											"end": 12610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12646,
											"end": 12680,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12626,
											"end": 12644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12619,
											"end": 12681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12697,
											"end": 12715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12721,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12738,
											"end": 12757,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12738,
											"end": 12757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12366,
											"end": 12763,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 26579,
											"end": 26636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26668,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26668,
											"end": 26730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26710,
											"end": 26715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 27415,
											"end": 27577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26693,
											"end": 26730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8528,
											"end": 8530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8510,
											"end": 8531,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8567,
											"end": 8569,
											"name": "PUSH",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8606,
											"end": 8640,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8579,
											"end": 8641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8677,
											"end": 8703,
											"name": "PUSH",
											"source": 1,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8721,
											"end": 8740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8326,
											"end": 8746,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26647,
											"end": 26812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26832,
											"end": 26834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26836,
											"end": 26843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26823,
											"end": 26831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 26823,
											"end": 26844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26450,
											"end": 26851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27639,
											"end": 27969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27847,
											"end": 27859,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 27847,
											"end": 27859,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27861,
											"end": 27868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27828,
											"end": 27846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27828,
											"end": 27869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 27820,
											"end": 27923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27934,
											"end": 27962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27944,
											"end": 27948,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27950,
											"end": 27952,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27954,
											"end": 27961,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27934,
											"end": 27943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 27934,
											"end": 27962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 40163,
											"end": 40375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40210,
											"end": 40223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40226,
											"end": 40233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40226,
											"end": 40233,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 40226,
											"end": 40233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40210,
											"end": 40233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40251,
											"end": 40270,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40251,
											"end": 40270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40260,
											"end": 40270,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40251,
											"end": 40270,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 40243,
											"end": 40271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40310,
											"end": 40320,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 40310,
											"end": 40320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40310,
											"end": 40320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40310,
											"end": 40320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40343,
											"end": 40364,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40281,
											"end": 40299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40343,
											"end": 40364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40310,
											"end": 40320,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40331,
											"end": 40365,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 28035,
											"end": 28214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 28185,
											"end": 28189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28191,
											"end": 28193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28195,
											"end": 28202,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28168,
											"end": 28184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28168,
											"end": 28207,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 37199,
											"end": 37211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4166,
											"end": 4262,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37180,
											"end": 37221,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 37180,
											"end": 37221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13794,
											"end": 13796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13776,
											"end": 13797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13835,
											"name": "PUSH",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 13813,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13813,
											"end": 13831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13813,
											"end": 13831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13806,
											"end": 13836,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13872,
											"end": 13906,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 13852,
											"end": 13870,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13852,
											"end": 13870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 13870,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13845,
											"end": 13907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13923,
											"end": 13941,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13923,
											"end": 13941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13923,
											"end": 13941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13979,
											"end": 13998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13592,
											"end": 14004,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 37172,
											"end": 37274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37284,
											"end": 37298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37290,
											"end": 37297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37284,
											"end": 37289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 37284,
											"end": 37298,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37284,
											"end": 37298,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 37284,
											"end": 37298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37064,
											"end": 37305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 25104,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25176,
											"end": 25183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25218,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25211,
											"end": 25227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25245,
											"end": 25264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9364,
											"end": 9366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9346,
											"end": 9367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9405,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9376,
											"end": 9406,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9442,
											"end": 9476,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9415,
											"end": 9477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9486,
											"end": 9525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9561,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9542,
											"end": 9561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25237,
											"end": 25310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9162,
											"end": 9567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24914,
											"end": 24921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24941,
											"end": 24960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24941,
											"end": 24960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8953,
											"end": 8955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8935,
											"end": 8956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8992,
											"end": 8994,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8972,
											"end": 8990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 8995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9065,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9004,
											"end": 9066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9075,
											"end": 9115,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9132,
											"end": 9151,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9132,
											"end": 9151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 8751,
											"end": 9157,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 24933,
											"end": 25007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25033,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25024,
											"end": 25040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24842,
											"end": 25047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11393,
											"end": 11423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11511,
											"end": 11529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11179,
											"end": 11535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6121,
											"end": 6122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 6094,
											"end": 6124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25563,
											"end": 25665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25619,
											"end": 25632,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25651,
											"end": 25658,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25644,
											"end": 25658,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27323,
											"end": 27331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27333,
											"end": 27341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27290,
											"end": 27308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 27290,
											"end": 27342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27196,
											"end": 27349,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28482,
											"end": 28489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28449,
											"end": 28467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28449,
											"end": 28490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28441,
											"end": 28544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28568,
											"end": 28572,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28574,
											"end": 28576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28578,
											"end": 28585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28587,
											"end": 28592,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28554,
											"end": 28567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 28554,
											"end": 28593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28280,
											"end": 28600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 39968,
											"end": 40157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40091,
											"end": 40104,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40127,
											"end": 40150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 40142,
											"end": 40149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40127,
											"end": 40141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 40127,
											"end": 40150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 39525,
											"end": 39843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39607,
											"end": 39616,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39620,
											"end": 39627,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 39607,
											"end": 39627,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13388,
											"end": 13390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13370,
											"end": 13391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13429,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 13407,
											"end": 13425,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13407,
											"end": 13425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13407,
											"end": 13425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13400,
											"end": 13430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13466,
											"end": 13500,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79203220676C6D7220616C6C6F77656420746F206265207472616E7366"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13439,
											"end": 13501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B932B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13581,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13562,
											"end": 13581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13186,
											"end": 13587,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 39599,
											"end": 39669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39688,
											"end": 39703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39706,
											"end": 39731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 39706,
											"end": 39721,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 972,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 993,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39706,
											"end": 39731,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 39706,
											"end": 39731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39688,
											"end": 39731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39688,
											"end": 39731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39741,
											"end": 39768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 39741,
											"end": 39756,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1105,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1122,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39741,
											"end": 39768,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 39741,
											"end": 39768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39778,
											"end": 39800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 39788,
											"end": 39790,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39792,
											"end": 39799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39778,
											"end": 39787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 39778,
											"end": 39800,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39778,
											"end": 39800,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 39778,
											"end": 39800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 39823,
											"end": 39830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39832,
											"end": 39835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39810,
											"end": 39822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 39810,
											"end": 39836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6280,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5633,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11363,
											"end": 11384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11400,
											"end": 11418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11393,
											"end": 11423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11493,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11439,
											"end": 11457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11529,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11511,
											"end": 11529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11179,
											"end": 11535,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 5602,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6368,
											"end": 6390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6390,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6594,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6604,
											"end": 6634,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6704,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6721,
											"end": 6739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6714,
											"end": 6750,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6767,
											"end": 6786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6390,
											"end": 6792,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6360,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6462,
											"end": 6470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6443,
											"end": 6471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30072,
											"end": 30197,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 30072,
											"end": 30197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30137,
											"end": 30141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30167,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30160,
											"end": 30176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30190,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30160,
											"end": 30190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30072,
											"end": 30197,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34026,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 33997,
											"end": 34021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34050,
											"end": 34064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 34050,
											"end": 34073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34041,
											"end": 34087,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33923,
											"end": 34094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30448,
											"end": 30452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30472,
											"end": 30488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30480,
											"end": 30487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30472,
											"end": 30479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 30472,
											"end": 30488,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30472,
											"end": 30488,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 30472,
											"end": 30488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8154,
											"end": 8156,
											"name": "PUSH",
											"source": 1,
											"value": "2C"
										},
										{
											"begin": 8134,
											"end": 8152,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8134,
											"end": 8152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8127,
											"end": 8157,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8193,
											"end": 8227,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8173,
											"end": 8191,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8173,
											"end": 8191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8173,
											"end": 8191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8166,
											"end": 8228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8244,
											"end": 8262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8237,
											"end": 8279,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8315,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8296,
											"end": 8315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7913,
											"end": 8321,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 30464,
											"end": 30537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30560,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30578,
											"end": 30585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30563,
											"end": 30577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 30563,
											"end": 30586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30547,
											"end": 30586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30615,
											"end": 30620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30611,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30620,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30648,
											"end": 30655,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30636,
											"end": 30643,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 30624,
											"end": 30644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30624,
											"end": 30655,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 30604,
											"end": 30655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 30604,
											"end": 30691,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27512,
											"end": 27516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27553,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27560,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27535,
											"end": 27570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30659,
											"end": 30691,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 30659,
											"end": 30691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30596,
											"end": 30692,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 30355,
											"end": 30699,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33394,
											"end": 33401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 33379,
											"end": 33402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33379,
											"end": 33410,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11742,
											"end": 11744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11783,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11761,
											"end": 11779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11784,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11854,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11800,
											"end": 11818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11793,
											"end": 11855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39903737BA1037BBB7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 11889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11864,
											"end": 11903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11920,
											"end": 11939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11540,
											"end": 11945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 33371,
											"end": 33456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33474,
											"end": 33490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33474,
											"end": 33490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7395,
											"end": 7397,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7368,
											"end": 7398,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7434,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7414,
											"end": 7432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7407,
											"end": 7469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7485,
											"end": 7503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7512,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7529,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7529,
											"end": 7548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7154,
											"end": 7554,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 33466,
											"end": 33531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33660,
											"end": 33661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33664,
											"end": 33671,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33643,
											"end": 33651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 33643,
											"end": 33672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33692,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33702,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33683,
											"end": 33703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33722,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33713,
											"end": 33731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33748,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33762,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33741,
											"end": 33757,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33778,
											"end": 33805,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33252,
											"end": 33812,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 39849,
											"end": 39962,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 39849,
											"end": 39962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39935,
											"end": 39955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 39947,
											"end": 39954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39935,
											"end": 39946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 39935,
											"end": 39955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6632,
											"end": 6819,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 6632,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6740,
											"end": 6757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6772,
											"end": 6812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6772,
											"end": 6812,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6695,
											"end": 6819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6632,
											"end": 6819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34379,
											"end": 34387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34370,
											"end": 34387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7761,
											"end": 7763,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7743,
											"end": 7764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7800,
											"end": 7802,
											"name": "PUSH",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7780,
											"end": 7798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7839,
											"end": 7866,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7812,
											"end": 7867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7902,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7884,
											"end": 7902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7559,
											"end": 7908,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 34362,
											"end": 34417,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34445,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34462,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34427,
											"end": 34473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5668,
											"end": 5686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34488,
											"end": 34529,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34229,
											"end": 34536,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 29462,
											"end": 29769,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29462,
											"end": 29769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 29623,
											"end": 29627,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29629,
											"end": 29631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29633,
											"end": 29640,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29613,
											"end": 29622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 29613,
											"end": 29641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 29682,
											"end": 29686,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29688,
											"end": 29690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29692,
											"end": 29699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29701,
											"end": 29706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29659,
											"end": 29681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 29659,
											"end": 29707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 29651,
											"end": 29762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37886,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37906,
											"end": 37922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37914,
											"end": 37921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37906,
											"end": 37913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 37906,
											"end": 37922,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37906,
											"end": 37922,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 37906,
											"end": 37922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10550,
											"end": 10552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10553,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10589,
											"end": 10591,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 10569,
											"end": 10587,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10569,
											"end": 10587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10569,
											"end": 10587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10562,
											"end": 10592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10662,
											"name": "PUSH",
											"source": 1,
											"value": "45524337323155524953746F726167653A2055524920717565727920666F7220"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10601,
											"end": 10663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737B732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10679,
											"end": 10697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10672,
											"end": 10719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10736,
											"end": 10755,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10348,
											"end": 10761,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 37898,
											"end": 37976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38013,
											"end": 38023,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38013,
											"end": 38032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37987,
											"end": 38032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38042,
											"end": 38060,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38063,
											"end": 38073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38063,
											"end": 38073,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 38063,
											"end": 38073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38042,
											"end": 38073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38042,
											"end": 38073,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38152,
											"end": 38156,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38146,
											"end": 38164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38168,
											"end": 38169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38146,
											"end": 38169,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38142,
											"end": 38212,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38142,
											"end": 38212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38142,
											"end": 38212,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38192,
											"end": 38201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38142,
											"end": 38212,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 38142,
											"end": 38212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38314,
											"end": 38337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38314,
											"end": 38337,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38314,
											"end": 38341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38310,
											"end": 38416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38310,
											"end": 38416,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38388,
											"end": 38392,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38394,
											"end": 38403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38371,
											"end": 38404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38357,
											"end": 38405,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38357,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38357,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38357,
											"end": 38405,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37800,
											"end": 38463,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 38310,
											"end": 38416,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 38310,
											"end": 38416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38433,
											"end": 38456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 38448,
											"end": 38455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38433,
											"end": 38447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 38433,
											"end": 38456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31029,
											"end": 31137,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 31029,
											"end": 31137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 31114,
											"end": 31116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31118,
											"end": 31125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31104,
											"end": 31113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 31104,
											"end": 31130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38610,
											"end": 38824,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 38610,
											"end": 38824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38709,
											"end": 38725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 38717,
											"end": 38724,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38709,
											"end": 38716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 38709,
											"end": 38725,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38709,
											"end": 38725,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 38709,
											"end": 38725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9774,
											"end": 9776,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9756,
											"end": 9777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9815,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 9816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 9886,
											"name": "PUSH",
											"source": 1,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9832,
											"end": 9850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9825,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9957,
											"end": 9976,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9957,
											"end": 9976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9572,
											"end": 9982,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 38701,
											"end": 38776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38796,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 38786,
											"end": 38817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39041,
											"end": 39241,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 39041,
											"end": 39241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39109,
											"end": 39129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 39121,
											"end": 39128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39109,
											"end": 39120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 39109,
											"end": 39129,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39109,
											"end": 39129,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 39109,
											"end": 39129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39160,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39150,
											"end": 39169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 39144,
											"end": 39177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39182,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39144,
											"end": 39182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39140,
											"end": 39235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 39140,
											"end": 39235,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39215,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39205,
											"end": 39224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39198,
											"end": 39224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 39198,
											"end": 39224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39198,
											"end": 39224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 39198,
											"end": 39224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35239,
											"end": 35243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35259,
											"end": 35272,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35259,
											"end": 35272,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7931,
											"end": 7951,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7977,
											"end": 7985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 35294,
											"end": 35330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4245,
											"end": 4255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35345,
											"end": 35349,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 35345,
											"end": 35349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35358,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35351,
											"end": 35358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35365,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35360,
											"end": 35365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 35294,
											"end": 35366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35533,
											"end": 35546,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35533,
											"end": 35546,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 35575,
											"end": 35635,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 35529,
											"end": 35795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35747,
											"end": 35753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35741,
											"end": 35754,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35732,
											"end": 35738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35728,
											"end": 35730,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35724,
											"end": 35739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35717,
											"end": 35755,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 35290,
											"end": 35809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 35416,
											"end": 35467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35409,
											"end": 35467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 35409,
											"end": 35467,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 35255,
											"end": 35861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35846,
											"end": 35850,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35089,
											"end": 35867,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25804,
											"end": 25817,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25837,
											"end": 25853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 25845,
											"end": 25852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25837,
											"end": 25844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 25837,
											"end": 25853,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25837,
											"end": 25853,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 25837,
											"end": 25853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12152,
											"end": 12154,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12191,
											"end": 12193,
											"name": "PUSH",
											"source": 1,
											"value": "2F"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12264,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12203,
											"end": 12265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12336,
											"end": 12355,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12336,
											"end": 12355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 11950,
											"end": 12361,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 25829,
											"end": 25905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26377,
											"end": 26386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26301,
											"end": 26393,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 25940,
											"end": 25950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25916,
											"end": 25950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25991,
											"end": 25992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25973,
											"end": 25980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 25988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 25992,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26019,
											"end": 26026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 26028,
											"end": 26035,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26028,
											"end": 26044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 26028,
											"end": 26046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26002,
											"end": 26047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 25967,
											"end": 26053,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25960,
											"end": 26053,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25731,
											"end": 26060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 31358,
											"end": 31669,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 31358,
											"end": 31669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31483,
											"end": 31501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 31489,
											"end": 31491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31493,
											"end": 31500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31483,
											"end": 31488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 31483,
											"end": 31501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31483,
											"end": 31501,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 31483,
											"end": 31501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31532,
											"end": 31586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 31563,
											"end": 31564,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31567,
											"end": 31569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31571,
											"end": 31578,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31580,
											"end": 31585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31532,
											"end": 31554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 31532,
											"end": 31586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 31532,
											"end": 31586,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 31532,
											"end": 31586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 31511,
											"end": 31662,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32580,
											"end": 32928,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 32580,
											"end": 32928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32652,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32655,
											"end": 32678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 32670,
											"end": 32677,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32655,
											"end": 32669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 32655,
											"end": 32678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32655,
											"end": 32678,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 32655,
											"end": 32678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32639,
											"end": 32678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 32792,
											"end": 32793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32796,
											"end": 32803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32775,
											"end": 32783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 32775,
											"end": 32804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32775,
											"end": 32804,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 32775,
											"end": 32804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32824,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 32836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32835,
											"end": 32836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 32836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 32836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32815,
											"end": 32836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32860,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32869,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32846,
											"end": 32869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32846,
											"end": 32869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32861,
											"end": 32868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32853,
											"end": 32869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32885,
											"end": 32921,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 32629,
											"end": 32928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32928,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32580,
											"end": 32928,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1856,
											"end": 1869,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2073,
											"end": 2083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2503,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 2069,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2129,
											"end": 2141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2215,
											"end": 2223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2183,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2289,
											"end": 2306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 2306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2359,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2404,
											"end": 2406,
											"name": "PUSH",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 2404,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2430,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 2316,
											"end": 2466,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32363,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 31991,
											"end": 32363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32070,
											"end": 32086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32070,
											"end": 32086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10201,
											"end": 10231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10301,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 10247,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10247,
											"end": 10265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10247,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10240,
											"end": 10302,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9987,
											"end": 10343,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 32062,
											"end": 32123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32142,
											"end": 32158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 32150,
											"end": 32157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32142,
											"end": 32149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 32142,
											"end": 32158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32142,
											"end": 32158,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 32142,
											"end": 32158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32141,
											"end": 32158,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6999,
											"end": 7001,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7040,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7077,
											"end": 7107,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7108,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7125,
											"end": 7143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 6797,
											"end": 7149,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 32133,
											"end": 32191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32267,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 32275,
											"end": 32276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32275,
											"end": 32276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32258,
											"end": 32276,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32293,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32307,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32356,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 32323,
											"end": 32356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32286,
											"end": 32302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32323,
											"end": 32356,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 32363,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "308"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "122"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "398"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "399"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "400"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "316"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "122"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "403"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "405"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "170"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "402"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "401"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "407"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 78,
											"end": 83,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 108,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 149,
											"end": 151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 141,
											"end": 147,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 138,
											"end": 152,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 135,
											"end": 175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 135,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 135,
											"end": 175,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 155,
											"end": 173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 230,
											"end": 232,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 233,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 198,
											"end": 200,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 299,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 284,
											"end": 299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 280,
											"end": 304,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 306,
											"end": 308,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 276,
											"end": 309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 272,
											"end": 314,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 260,
											"end": 315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 350,
											"end": 372,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 327,
											"end": 373,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 324,
											"end": 396,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 324,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 324,
											"end": 396,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 376,
											"end": 394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 416,
											"end": 426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 436,
											"end": 451,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 436,
											"end": 451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 475,
											"end": 481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 467,
											"end": 473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 515,
											"end": 518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 497,
											"end": 513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 519,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 529,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 522,
											"end": 534,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 491,
											"end": 536,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 491,
											"end": 536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 588,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 562,
											"end": 568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 545,
											"end": 589,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 609,
											"end": 628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 598,
											"end": 639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 645,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 718,
											"end": 738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 718,
											"end": 738,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 757,
											"end": 799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 757,
											"end": 799,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 747,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 747,
											"end": 817,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 747,
											"end": 817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 650,
											"end": 823,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 828,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 828,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 887,
											"end": 893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 915,
											"end": 938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 911,
											"end": 943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 908,
											"end": 960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 908,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 908,
											"end": 960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 946,
											"end": 958,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 908,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 908,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 979,
											"end": 1008,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1148,
											"end": 1150,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1146,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1119,
											"end": 1151,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1164,
											"end": 1165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1166,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 1116,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 1187,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 1269,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1267,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1254,
											"end": 1272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 1235,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1279,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1361,
											"end": 1367,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1432,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1427,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1433,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 1398,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1488,
											"end": 1497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 1469,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1498,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1540,
											"end": 1549,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 1517,
											"end": 1555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1555,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1602,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1587,
											"end": 1605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1606,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1726,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1792,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1793,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1803,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1808,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 1757,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1848,
											"end": 1857,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 1829,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 1877,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1867,
											"end": 1915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 1966,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2017,
											"end": 2019,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2021,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2044,
											"end": 2062,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2063,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2078,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 2030,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2140,
											"end": 2167,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2251,
											"end": 2267,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2242,
											"end": 2244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 2204,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 2283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2411,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2400,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2412,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2417,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2427,
											"end": 2428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2432,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 2382,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 2453,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2443,
											"end": 2482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2532,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2536,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2572,
											"end": 2585,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2555,
											"end": 2587,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2601,
											"end": 2602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2599,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2603,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 2545,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2624,
											"end": 2629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2635,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2758,
											"end": 2765,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2777,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2782,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2797,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 2747,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2818,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2808,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2887,
											"end": 2896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2902,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2943,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2917,
											"end": 2923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2914,
											"end": 2944,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 2911,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3025,
											"end": 3038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3064,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 3150,
											"end": 3157,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3132,
											"end": 3148,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 3085,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 3164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3286,
											"end": 3295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3277,
											"end": 3284,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3301,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3314,
											"end": 3315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3316,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 3266,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3356,
											"end": 3365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 3337,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3366,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3417,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3417,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3423,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3673,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3428,
											"end": 3673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3514,
											"end": 3537,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3542,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 3507,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3604,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3637,
											"end": 3642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 3613,
											"end": 3643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3927,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3678,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3788,
											"end": 3797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3779,
											"end": 3786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3771,
											"end": 3803,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3817,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3818,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3858,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 3867,
											"end": 3897,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 3997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4032,
											"end": 4041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4030,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4042,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4047,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4050,
											"end": 4062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 4012,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4112,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4211,
											"end": 4230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4265,
											"end": 4270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4261,
											"end": 4277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 4239,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4356,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4335,
											"end": 4350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4322,
											"end": 4361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4363,
											"end": 4367,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4318,
											"end": 4368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4318,
											"end": 4368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4374,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4596,
											"end": 4602,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4658,
											"end": 4664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4653,
											"end": 4656,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4638,
											"end": 4644,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4651,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 4612,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 4728,
											"end": 4741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4784,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4789,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 4750,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4843,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5313,
											"end": 5347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5383,
											"end": 5398,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5363,
											"end": 5381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5399,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5442,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5458,
											"end": 5476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5524,
											"end": 5543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 5499,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5544,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5062,
											"end": 5550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5747,
											"end": 5966,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 5747,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5878,
											"end": 5899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5859,
											"end": 5863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5933,
											"end": 5939,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 5916,
											"end": 5960,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6295,
											"end": 6343,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12768,
											"end": 13181,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 12768,
											"end": 13181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12952,
											"end": 12973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13009,
											"end": 13011,
											"name": "PUSH",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13048,
											"end": 13082,
											"name": "PUSH",
											"source": 1,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 13043,
											"end": 13045,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13028,
											"end": 13046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13021,
											"end": 13083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13114,
											"end": 13116,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13099,
											"end": 13117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13092,
											"end": 13139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13171,
											"end": 13174,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13156,
											"end": 13175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13156,
											"end": 13175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 13181,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14191,
											"end": 14319,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14191,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14262,
											"end": 14263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14258,
											"end": 14264,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14255,
											"end": 14256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14252,
											"end": 14265,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14249,
											"end": 14288,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14249,
											"end": 14288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14249,
											"end": 14288,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 14268,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14304,
											"end": 14313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14304,
											"end": 14313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14191,
											"end": 14319,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14324,
											"end": 14444,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 14324,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14390,
											"end": 14391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14380,
											"end": 14415,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14429,
											"end": 14438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14324,
											"end": 14444,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14449,
											"end": 14574,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 14449,
											"end": 14574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14489,
											"end": 14493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14517,
											"end": 14518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14514,
											"end": 14515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14519,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14542,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14508,
											"end": 14542,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 14522,
											"end": 14540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14559,
											"end": 14568,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14559,
											"end": 14568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14449,
											"end": 14574,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14579,
											"end": 14837,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 14579,
											"end": 14837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14675,
											"end": 14681,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14672,
											"end": 14673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14669,
											"end": 14682,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14751,
											"end": 14762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14751,
											"end": 14762,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14751,
											"end": 14762,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14745,
											"end": 14763,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14732,
											"end": 14743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14725,
											"end": 14764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14699,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14690,
											"end": 14700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14661,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14792,
											"end": 14798,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14789,
											"end": 14790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14786,
											"end": 14799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14783,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 14783,
											"end": 14831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14827,
											"end": 14828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14809,
											"end": 14825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14802,
											"end": 14829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14579,
											"end": 14837,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14921,
											"end": 14922,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 14917,
											"end": 14929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 14976,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 14976,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14964,
											"end": 14976,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 14985,
											"end": 15046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15039,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 15031,
											"end": 15037,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15027,
											"end": 15044,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15017,
											"end": 15044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14985,
											"end": 15046,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 14985,
											"end": 15046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15084,
											"end": 15090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15081,
											"end": 15095,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15061,
											"end": 15079,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15058,
											"end": 15096,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15138,
											"end": 15148,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 15133,
											"end": 15136,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15129,
											"end": 15149,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15126,
											"end": 15127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15119,
											"end": 15150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15173,
											"end": 15177,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 15170,
											"end": 15171,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15163,
											"end": 15178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15201,
											"end": 15205,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15191,
											"end": 15206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15055,
											"end": 15216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14842,
											"end": 15222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15227,
											"end": 15362,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 15227,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15266,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15287,
											"end": 15304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15287,
											"end": 15304,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15284,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 15284,
											"end": 15327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 15307,
											"end": 15325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15354,
											"end": 15355,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15343,
											"end": 15356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15343,
											"end": 15356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15227,
											"end": 15362,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15367,
											"end": 15479,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 15367,
											"end": 15479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15399,
											"end": 15400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15425,
											"end": 15426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15415,
											"end": 15450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 15415,
											"end": 15450,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 15430,
											"end": 15448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15464,
											"end": 15473,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 15464,
											"end": 15473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15479,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15484,
											"end": 15611,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 15484,
											"end": 15611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15545,
											"end": 15555,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 15540,
											"end": 15543,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15536,
											"end": 15556,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15533,
											"end": 15534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15526,
											"end": 15557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15580,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 15573,
											"end": 15574,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15566,
											"end": 15581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15600,
											"end": 15604,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15597,
											"end": 15598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15590,
											"end": 15605,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15616,
											"end": 15743,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 15616,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15677,
											"end": 15687,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 15672,
											"end": 15675,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15668,
											"end": 15688,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15665,
											"end": 15666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15658,
											"end": 15689,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15708,
											"end": 15712,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 15705,
											"end": 15706,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15698,
											"end": 15713,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15736,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15729,
											"end": 15730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15722,
											"end": 15737,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15748,
											"end": 15875,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 15748,
											"end": 15875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15809,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 15804,
											"end": 15807,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15800,
											"end": 15820,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15797,
											"end": 15798,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15790,
											"end": 15821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15840,
											"end": 15844,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 15837,
											"end": 15838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15830,
											"end": 15845,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15864,
											"end": 15868,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15861,
											"end": 15862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15854,
											"end": 15869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 16007,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 15880,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15951,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 15936,
											"end": 15939,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15932,
											"end": 15952,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15929,
											"end": 15930,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15922,
											"end": 15953,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15972,
											"end": 15976,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 15969,
											"end": 15970,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15962,
											"end": 15977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15996,
											"end": 16000,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15993,
											"end": 15994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 16001,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16012,
											"end": 16143,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 16012,
											"end": 16143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16086,
											"end": 16118,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16086,
											"end": 16118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16076,
											"end": 16119,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 16066,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 16066,
											"end": 16137,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16133,
											"end": 16134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16130,
											"end": 16131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16123,
											"end": 16135,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"renounceOwnership()": "715018a6",
							"safeMint(address,string)": "d204c45e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"MoonCats\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 902,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 904,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 908,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 912,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 916,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 922,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1745,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 302,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_owner",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1876,
								"contract": "MoonCats_flat.sol:MoonCats",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "8",
								"type": "t_struct(Counter)5_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "MoonCats_flat.sol:MoonCats",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "MoonCats_flat.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MoonCats_flat.sol\":1618:3503  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"MoonCats_flat.sol\":1618:3503  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208167e9c88ebe67fb2e705fae3033b6657e364d350b3f52cb280788928cd321c664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208167e9c88ebe67fb2e705fae3033b6657e364d350b3f52cb280788928cd321c664736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH8 0xE9C88EBE67FB2E70 0x5F 0xAE ADDRESS CALLER 0xB6 PUSH6 0x7E364D350B3F MSTORE 0xCB 0x28 SMOD DUP9 SWAP3 DUP13 0xD3 0x21 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1618:1885:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1618:1885:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208167e9c88ebe67fb2e705fae3033b6657e364d350b3f52cb280788928cd321c664736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH8 0xE9C88EBE67FB2E70 0x5F 0xAE ADDRESS CALLER 0xB6 PUSH6 0x7E364D350B3F MSTORE 0xCB 0x28 SMOD DUP9 SWAP3 DUP13 0xD3 0x21 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1618:1885:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1618,
									"end": 3503,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208167e9c88ebe67fb2e705fae3033b6657e364d350b3f52cb280788928cd321c664736f6c63430008070033",
									".code": [
										{
											"begin": 1618,
											"end": 3503,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 3503,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MoonCats_flat.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"MoonCats_flat.sol\":{\"keccak256\":\"0xd2250d5a4e548deb642597d912334173fcc193d6c86645a70f0f964dfeac7e63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57ac2f971b55d5492461053e0de5f5c7d3c86fdace7bd0681ab6adf28e2ee297\",\"dweb:/ipfs/QmVUior4ccoJEu3jzTL2VqyV1746DrjWCztwMS7ACy7DFz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"MoonCats_flat.sol": {
				"ast": {
					"absolutePath": "MoonCats_flat.sol",
					"exportedSymbols": {
						"Address": [
							695
						],
						"Context": [
							296
						],
						"Counters": [
							73
						],
						"ERC165": [
							745
						],
						"ERC721": [
							1707
						],
						"ERC721Burnable": [
							1734
						],
						"ERC721URIStorage": [
							1860
						],
						"IERC165": [
							723
						],
						"IERC721": [
							859
						],
						"IERC721Metadata": [
							884
						],
						"IERC721Receiver": [
							712
						],
						"MoonCats": [
							1987
						],
						"Ownable": [
							399
						],
						"Strings": [
							275
						]
					},
					"id": 1988,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "141:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "166:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "486:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "848:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "840:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "840:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "508:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "501:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "955:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "972:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "965:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "890:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "914:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "898:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "898:7:0"
													},
													"referencedDeclaration": 5,
													"src": "898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:9:0"
									},
									"scope": 73,
									"src": "881:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1052:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1062:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1086:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1086:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1104:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1086:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1086:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "1008:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1018:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1018:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1052:0:0"
									},
									"scope": 73,
									"src": "999:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1181:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1199:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1191:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1207:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1191:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1239:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1250:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1231:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1231:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1290:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1314:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1314:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1339:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1331:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1314:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1314:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1137:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1163:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1147:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1147:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1181:0:0"
									},
									"scope": 73,
									"src": "1128:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1412:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1422:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1439:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1422:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1422:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1372:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1394:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1378:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1378:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1412:0:0"
									},
									"scope": 73,
									"src": "1363:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "478:971:0",
							"usedErrors": []
						},
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1558:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 75,
								"nodeType": "StructuredDocumentation",
								"src": "1583:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 275,
							"linearizedBaseContracts": [
								275
							],
							"name": "Strings",
							"nameLocation": "1626:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 78,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "1665:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 275,
									"src": "1640:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 76,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "1640:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 77,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1680:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1871:632:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 86,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "2073:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2073:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 92,
												"nodeType": "IfStatement",
												"src": "2069:51:0",
												"trueBody": {
													"id": 91,
													"nodeType": "Block",
													"src": "2085:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2106:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 85,
															"id": 90,
															"nodeType": "Return",
															"src": "2099:10:0"
														}
													]
												}
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "2137:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "2129:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"id": 95,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 81,
													"src": "2144:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2129:20:0"
											},
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "2167:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "2159:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 97,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 99,
												"nodeType": "VariableDeclarationStatement",
												"src": "2159:14:0"
											},
											{
												"body": {
													"id": 110,
													"nodeType": "Block",
													"src": "2201:57:0",
													"statements": [
														{
															"expression": {
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2215:8:0",
																"subExpression": {
																	"id": 103,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2215:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 105,
															"nodeType": "ExpressionStatement",
															"src": "2215:8:0"
														},
														{
															"expression": {
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 106,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "2237:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2245:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 109,
															"nodeType": "ExpressionStatement",
															"src": "2237:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 100,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2190:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2198:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2190:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "WhileStatement",
												"src": "2183:75:0"
											},
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2280:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 156,
														"src": "2267:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 112,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2267:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"arguments": [
														{
															"id": 116,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2299:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2289:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 114,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2293:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2289:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2267:39:0"
											},
											{
												"body": {
													"id": 149,
													"nodeType": "Block",
													"src": "2335:131:0",
													"statements": [
														{
															"expression": {
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 122,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2349:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2359:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2349:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "2349:11:0"
														},
														{
															"expression": {
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 126,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 113,
																		"src": "2374:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 128,
																	"indexExpression": {
																		"id": 127,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "2381:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2374:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 133,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2404:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 136,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 81,
																									"src": "2417:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 137,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "2425:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "2417:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 135,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2409:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 134,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "2409:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2409:19:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2404:24:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2398:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 131,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "2398:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 141,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2398:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2391:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 129,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2391:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2374:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 144,
															"nodeType": "ExpressionStatement",
															"src": "2374:56:0"
														},
														{
															"expression": {
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 145,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2444:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2453:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2444:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 148,
															"nodeType": "ExpressionStatement",
															"src": "2444:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "2323:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2332:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2323:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 150,
												"nodeType": "WhileStatement",
												"src": "2316:150:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2489:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2482:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 151,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2482:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2482:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 85,
												"id": 155,
												"nodeType": "Return",
												"src": "2475:21:0"
											}
										]
									},
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "1705:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1809:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1817:15:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1856:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 83,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1856:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:15:0"
									},
									"scope": 275,
									"src": "1800:703:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "2682:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 165,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2696:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2705:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2696:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "IfStatement",
												"src": "2692:54:0",
												"trueBody": {
													"id": 170,
													"nodeType": "Block",
													"src": "2708:38:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2729:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 164,
															"id": 169,
															"nodeType": "Return",
															"src": "2722:13:0"
														}
													]
												}
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "2763:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "2755:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2755:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"id": 174,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 160,
													"src": "2770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:20:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "2793:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "2785:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 176,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 179,
												"initialValue": {
													"hexValue": "30",
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2802:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2785:18:0"
											},
											{
												"body": {
													"id": 190,
													"nodeType": "Block",
													"src": "2831:57:0",
													"statements": [
														{
															"expression": {
																"id": 184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "2845:8:0",
																"subExpression": {
																	"id": 183,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2845:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 185,
															"nodeType": "ExpressionStatement",
															"src": "2845:8:0"
														},
														{
															"expression": {
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 186,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "2867:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2876:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "2867:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 189,
															"nodeType": "ExpressionStatement",
															"src": "2867:10:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 180,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2820:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2820:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "WhileStatement",
												"src": "2813:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 194,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2923:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 192,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															198,
															274
														],
														"referencedDeclaration": 274,
														"src": "2904:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2904:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 164,
												"id": 196,
												"nodeType": "Return",
												"src": "2897:33:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "2509:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2617:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2637:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2629:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:15:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "2667:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 162,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2667:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2666:15:0"
									},
									"scope": 275,
									"src": "2608:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "3150:351:0",
										"statements": [
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "3173:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "3160:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 208,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3192:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 213,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "3196:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3192:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3205:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3192:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3182:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 210,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3186:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3160:47:0"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 219,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3217:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 221,
														"indexExpression": {
															"hexValue": "30",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3224:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3217:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3229:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "3217:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3217:15:0"
											},
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 225,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3242:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 227,
														"indexExpression": {
															"hexValue": "31",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3249:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3242:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "3242:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "3242:15:0"
											},
											{
												"body": {
													"id": 259,
													"nodeType": "Block",
													"src": "3312:87:0",
													"statements": [
														{
															"expression": {
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 245,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "3326:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 247,
																	"indexExpression": {
																		"id": 246,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 232,
																		"src": "3333:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3326:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 248,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "3338:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 249,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "3351:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3359:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "3351:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3338:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "3326:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 254,
															"nodeType": "ExpressionStatement",
															"src": "3326:37:0"
														},
														{
															"expression": {
																"id": 257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "3377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3377:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 258,
															"nodeType": "ExpressionStatement",
															"src": "3377:11:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3300:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3304:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 260,
												"initializationExpression": {
													"assignments": [
														232
													],
													"declarations": [
														{
															"constant": false,
															"id": 232,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3280:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 260,
															"src": "3272:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 231,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 238,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3284:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 234,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3288:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3284:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3297:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3284:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3272:26:0"
												},
												"loopExpression": {
													"expression": {
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "3307:3:0",
														"subExpression": {
															"id": 242,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "3309:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 244,
													"nodeType": "ExpressionStatement",
													"src": "3307:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3267:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 262,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "3416:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3425:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3428:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3408:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "3408:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 270,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3487:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3480:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 268,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3480:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3480:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 207,
												"id": 272,
												"nodeType": "Return",
												"src": "3473:21:0"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "2943:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "3069:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3089:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3081:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "3104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:31:0"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 274,
												"src": "3135:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 205,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:15:0"
									},
									"scope": 275,
									"src": "3060:441:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "1618:1885:0",
							"usedErrors": []
						},
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3612:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "3637:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "4152:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "4228:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4245:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4245:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "4238:17:0"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4175:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4185:2:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "4219:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4218:9:0"
									},
									"scope": 296,
									"src": "4166:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "4335:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4352:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4352:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "4345:15:0"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4277:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4285:2:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "4319:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4319:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4318:16:0"
									},
									"scope": 296,
									"src": "4268:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "4134:235:0",
							"usedErrors": []
						},
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4480:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 299,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "5030:7:0"
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "5030:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "4506:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 399,
							"linearizedBaseContracts": [
								399,
								296
							],
							"name": "Ownable",
							"nameLocation": "5019:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "5060:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 399,
									"src": "5044:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 301,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5044:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 308,
									"name": "OwnershipTransferred",
									"nameLocation": "5079:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "5116:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "5100:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5147:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "5131:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5099:57:0"
									},
									"src": "5073:84:0"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "5273:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 313,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "5302:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5302:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 312,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "5283:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5283:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "5283:32:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "5163:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 318,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5270:2:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5273:0:0"
									},
									"scope": 399,
									"src": "5259:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "5453:30:0",
										"statements": [
											{
												"expression": {
													"id": 324,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "5470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 323,
												"id": 325,
												"nodeType": "Return",
												"src": "5463:13:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "5328:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "5407:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5412:2:0"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "5444:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:9:0"
									},
									"scope": 399,
									"src": "5398:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "5592:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 331,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "5610:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 333,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "5621:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5621:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5610:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5635:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5602:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "5602:68:0"
											},
											{
												"id": 339,
												"nodeType": "PlaceholderStatement",
												"src": "5680:1:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "5489:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 341,
									"name": "onlyOwner",
									"nameLocation": "5580:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5589:2:0"
									},
									"src": "5571:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "6084:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6113:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6113:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 347,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "6094:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6094:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "6094:30:0"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "5694:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 345,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 344,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 341,
												"src": "6074:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6074:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6039:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6056:2:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6084:0:0"
									},
									"scope": 399,
									"src": "6030:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "6350:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 364,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "6368:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6388:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6380:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 365,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6380:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6380:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6368:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6392:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6360:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "6360:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 358,
															"src": "6462:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 373,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "6443:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6443:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "6443:28:0"
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "6137:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 360,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 341,
												"src": "6340:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6340:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6289:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6315:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "6307:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:18:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6350:0:0"
									},
									"scope": 399,
									"src": "6280:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "6695:124:0",
										"statements": [
											{
												"assignments": [
													385
												],
												"declarations": [
													{
														"constant": false,
														"id": 385,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "6713:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 397,
														"src": "6705:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 384,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6705:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"id": 386,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "6724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6705:25:0"
											},
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 388,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "6740:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 389,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "6749:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6740:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "6740:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 393,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "6793:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6803:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 392,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "6772:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "EmitStatement",
												"src": "6767:45:0"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "6484:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6641:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6668:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "6660:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6659:18:0"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6695:0:0"
									},
									"scope": 399,
									"src": "6632:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "5001:1820:0",
							"usedErrors": []
						},
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6930:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 401,
								"nodeType": "StructuredDocumentation",
								"src": "6955:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 695,
							"linearizedBaseContracts": [
								695
							],
							"name": "Address",
							"nameLocation": "7031:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "7681:311:0",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "7886:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "7878:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"nodeType": "VariableDeclarationStatement",
												"src": "7878:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7909:52:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7923:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "7943:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "7931:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7923:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 404,
														"isOffset": false,
														"isSlot": false,
														"src": "7943:7:0",
														"valueSize": 1
													},
													{
														"declaration": 410,
														"isOffset": false,
														"isSlot": false,
														"src": "7923:4:0",
														"valueSize": 1
													}
												],
												"id": 412,
												"nodeType": "InlineAssembly",
												"src": "7900:61:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 413,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "7977:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7984:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7977:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 408,
												"id": 416,
												"nodeType": "Return",
												"src": "7970:15:0"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "7045:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "7624:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7643:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "7635:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7634:17:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "7675:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7675:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7674:6:0"
									},
									"scope": 695,
									"src": "7615:377:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "8980:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9006:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$695",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$695",
																				"typeString": "library Address"
																			}
																		],
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8998:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8998:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8998:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8998:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "9023:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8998:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9031:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8990:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8990:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "8990:73:0"
											},
											{
												"assignments": [
													438,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9080:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "9075:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9075:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9123:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 439,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "9093:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9093:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "9115:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9093:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9093:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9074:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 447,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "9144:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9153:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9136:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "9136:78:0"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "7998:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "8918:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8944:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "8928:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8928:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8963:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "8955:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8927:43:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8980:0:0"
									},
									"scope": 695,
									"src": "8909:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "10052:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "10082:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 464,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "10090:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10096:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 462,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															469,
															489
														],
														"referencedDeclaration": 489,
														"src": "10069:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10069:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 461,
												"id": 467,
												"nodeType": "Return",
												"src": "10062:67:0"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "9227:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9972:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9993:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "9985:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10014:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "10001:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10001:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9984:35:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "10038:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10038:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10037:14:0"
									},
									"scope": 695,
									"src": "9963:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "10505:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 482,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "10544:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 483,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "10552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10558:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 485,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "10561:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 481,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															509,
															559
														],
														"referencedDeclaration": 559,
														"src": "10522:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 480,
												"id": 487,
												"nodeType": "Return",
												"src": "10515:59:0"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "10142:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "10367:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10397:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10426:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10413:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10413:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10454:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10440:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10379:93:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "10491:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10491:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10490:14:0"
									},
									"scope": 695,
									"src": "10358:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "11086:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "11125:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "11133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 504,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "11139:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11146:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 501,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															509,
															559
														],
														"referencedDeclaration": 559,
														"src": "11103:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11103:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 500,
												"id": 507,
												"nodeType": "Return",
												"src": "11096:94:0"
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "10587:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10952:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10991:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "10983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "11007:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11007:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11042:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "11034:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10973:80:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "11072:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11072:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11071:14:0"
									},
									"scope": 695,
									"src": "10943:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "11624:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 526,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11650:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$695",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$695",
																				"typeString": "library Address"
																			}
																		],
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11642:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 524,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11642:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11642:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "11642:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 529,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "11667:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11642:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11674:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11634:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "11634:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 536,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "11744:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 535,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "11733:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11733:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11753:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11725:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11725:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "11725:60:0"
											},
											{
												"assignments": [
													542,
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11802:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "11797:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 541,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11797:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11824:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 558,
														"src": "11811:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 543,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11811:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"arguments": [
														{
															"id": 549,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "11864:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 545,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "11838:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11838:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "11857:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11838:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11838:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11796:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "11903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 554,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "11912:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 555,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "11924:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 552,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "11886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11886:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 522,
												"id": 557,
												"nodeType": "Return",
												"src": "11879:58:0"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "11203:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "11454:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11493:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11485:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11522:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11509:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 513,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11544:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11573:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11559:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11475:116:0"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "11610:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11610:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11609:14:0"
									},
									"scope": 695,
									"src": "11445:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "12221:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "12257:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "12265:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12271:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 569,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															576,
															611
														],
														"referencedDeclaration": 611,
														"src": "12238:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12238:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 568,
												"id": 574,
												"nodeType": "Return",
												"src": "12231:80:0"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "11950:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "12130:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12157:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "12149:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "12165:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12148:35:0"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "12207:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12206:14:0"
									},
									"scope": 695,
									"src": "12121:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "12660:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 590,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "12689:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 589,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "12678:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12678:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12698:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12670:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 594,
												"nodeType": "ExpressionStatement",
												"src": "12670:67:0"
											},
											{
												"assignments": [
													596,
													598
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12754:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "12749:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 595,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12749:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12776:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "12763:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 597,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12763:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"arguments": [
														{
															"id": 601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "12808:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 599,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "12790:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12790:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12790:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12748:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "12847:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 606,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "12856:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "12868:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 604,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "12830:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12830:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 587,
												"id": 609,
												"nodeType": "Return",
												"src": "12823:58:0"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "12324:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "12511:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12547:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "12539:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "12563:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12563:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12604:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "12590:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12590:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12529:93:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "12646:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12646:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12645:14:0"
									},
									"scope": 695,
									"src": "12502:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "13164:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 622,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "13202:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "13210:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13216:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 621,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															628,
															663
														],
														"referencedDeclaration": 663,
														"src": "13181:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13181:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 620,
												"id": 626,
												"nodeType": "Return",
												"src": "13174:84:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "12894:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "13076:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13105:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "13097:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13126:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "13113:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13096:35:0"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "13150:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 618,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13150:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13149:14:0"
									},
									"scope": 695,
									"src": "13067:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "13606:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 642,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "13635:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 641,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "13624:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13624:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13644:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 640,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13616:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "13616:69:0"
											},
											{
												"assignments": [
													648,
													650
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13702:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "13697:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 647,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13697:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13724:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 662,
														"src": "13711:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 649,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13711:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [
														{
															"id": 653,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "13758:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 651,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "13738:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "13738:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13738:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13696:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "13797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 658,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "13806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 659,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "13818:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 656,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "13780:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13780:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 639,
												"id": 661,
												"nodeType": "Return",
												"src": "13773:58:0"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "13271:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "13460:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13498:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "13490:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13527:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "13514:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13514:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13555:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "13541:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13541:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13480:93:0"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "13592:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13591:14:0"
									},
									"scope": 695,
									"src": "13451:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "14218:532:0",
										"statements": [
											{
												"condition": {
													"id": 675,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "14232:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 691,
													"nodeType": "Block",
													"src": "14289:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 679,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "14373:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "14373:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14393:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14373:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 689,
																"nodeType": "Block",
																"src": "14681:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 686,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 670,
																					"src": "14706:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 685,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "14699:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14699:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 688,
																		"nodeType": "ExpressionStatement",
																		"src": "14699:20:0"
																	}
																]
															},
															"id": 690,
															"nodeType": "IfStatement",
															"src": "14369:365:0",
															"trueBody": {
																"id": 684,
																"nodeType": "Block",
																"src": "14396:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "14516:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "14538:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "14567:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "14561:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14561:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "14542:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "14610:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "14614:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "14606:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "14606:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "14627:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14599:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14599:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14599:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 668,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14567:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 668,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "14614:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 683,
																		"nodeType": "InlineAssembly",
																		"src": "14507:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 692,
												"nodeType": "IfStatement",
												"src": "14228:516:0",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "14241:42:0",
													"statements": [
														{
															"expression": {
																"id": 676,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "14262:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 674,
															"id": 677,
															"nodeType": "Return",
															"src": "14255:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "13844:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "14067:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14098:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "14093:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14093:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "14128:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "14115:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 667,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14162:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "14148:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14083:97:0"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "14204:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14203:14:0"
									},
									"scope": 695,
									"src": "14058:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "7023:7729:0",
							"usedErrors": []
						},
						{
							"id": 696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14891:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 697,
								"nodeType": "StructuredDocumentation",
								"src": "14916:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 712,
							"linearizedBaseContracts": [
								712
							],
							"name": "IERC721Receiver",
							"nameLocation": "15079:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "15101:485:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "15600:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15634:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "15626:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15626:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "15652:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15682:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "15674:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15714:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "15699:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 705,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15699:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15616:108:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "15743:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 708,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15742:8:0"
									},
									"scope": 712,
									"src": "15591:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1988,
							"src": "15069:684:0",
							"usedErrors": []
						},
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15890:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "15915:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 723,
							"linearizedBaseContracts": [
								723
							],
							"name": "IERC165",
							"nameLocation": "16205:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "16219:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "16573:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "16598:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "16591:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 716,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "16591:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16590:20:0"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "16634:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 719,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16634:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16633:6:0"
									},
									"scope": 723,
									"src": "16564:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1988,
							"src": "16195:447:0",
							"usedErrors": []
						},
						{
							"id": 724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16777:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "17408:7:0"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "17408:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 725,
								"nodeType": "StructuredDocumentation",
								"src": "16803:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 745,
							"linearizedBaseContracts": [
								745,
								723
							],
							"name": "ERC165",
							"nameLocation": "17398:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										722
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "17574:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "17591:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 738,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "17611:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$723_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 737,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17606:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17606:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$723",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "17606:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "17591:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 735,
												"id": 742,
												"nodeType": "Return",
												"src": "17584:47:0"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "17422:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "17492:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 732,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17550:8:0"
									},
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "17517:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "17510:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 729,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17509:20:0"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "17568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 733,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17567:6:0"
									},
									"scope": 745,
									"src": "17483:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1988,
							"src": "17380:260:0",
							"usedErrors": []
						},
						{
							"id": 746,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17763:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 748,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 723,
										"src": "17878:7:0"
									},
									"id": 749,
									"nodeType": "InheritanceSpecifier",
									"src": "17878:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 747,
								"nodeType": "StructuredDocumentation",
								"src": "17789:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 859,
							"linearizedBaseContracts": [
								859,
								723
							],
							"name": "IERC721",
							"nameLocation": "17867:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "17892:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 758,
									"name": "Transfer",
									"nameLocation": "17991:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18016:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18000:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18038:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18022:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "18042:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17999:67:0"
									},
									"src": "17985:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "18073:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 767,
									"name": "Approval",
									"nameLocation": "18178:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18203:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "18187:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18187:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18226:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "18210:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18252:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "18236:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18186:74:0"
									},
									"src": "18172:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "18267:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 776,
									"name": "ApprovalForAll",
									"nameLocation": "18395:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18426:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18410:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18449:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18433:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18464:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "18459:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18409:64:0"
									},
									"src": "18389:85:0"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "18480:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 784,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "18570:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18588:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "18580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18579:15:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "18626:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "18618:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18617:17:0"
									},
									"scope": 859,
									"src": "18561:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "18641:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "18786:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18802:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "18794:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18793:17:0"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "18842:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "18834:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18834:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18833:15:0"
									},
									"scope": 859,
									"src": "18777:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "18855:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19559:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19593:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "19585:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19615:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "19607:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19635:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "19627:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19575:73:0"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19657:0:0"
									},
									"scope": 859,
									"src": "19550:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "19664:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "20182:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20212:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "20204:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20234:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "20226:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20254:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "20246:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20194:73:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20276:0:0"
									},
									"scope": 859,
									"src": "20173:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "20283:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "20749:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20765:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "20757:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20777:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "20769:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20756:29:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20794:0:0"
									},
									"scope": 859,
									"src": "20740:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "20801:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "20954:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "20966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20965:17:0"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "21014:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "21006:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21005:18:0"
									},
									"scope": 859,
									"src": "20945:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "21030:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "21353:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "21379:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "21371:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "21394:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "21389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 832,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21389:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21370:34:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21413:0:0"
									},
									"scope": 859,
									"src": "21344:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "21420:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 846,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "21572:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21597:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "21589:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "21612:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "21604:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21588:33:0"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "21645:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 843,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21644:6:0"
									},
									"scope": 859,
									"src": "21563:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "21657:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "22227:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "22253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22283:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "22275:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "22303:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "22295:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "22320:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22243:102:0"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22354:0:0"
									},
									"scope": 859,
									"src": "22218:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1988,
							"src": "17857:4500:0",
							"usedErrors": []
						},
						{
							"id": 860,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22518:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 862,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 859,
										"src": "22707:7:0"
									},
									"id": 863,
									"nodeType": "InheritanceSpecifier",
									"src": "22707:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 861,
								"nodeType": "StructuredDocumentation",
								"src": "22544:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 884,
							"linearizedBaseContracts": [
								884,
								859,
								723
							],
							"name": "IERC721Metadata",
							"nameLocation": "22688:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "22721:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 869,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "22793:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22797:2:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "22823:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 866,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22823:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22822:15:0"
									},
									"scope": 884,
									"src": "22784:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "22844:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "22918:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22924:2:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "22950:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22949:15:0"
									},
									"scope": 884,
									"src": "22909:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "22971:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 883,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "23075:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "23092:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "23084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23083:17:0"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "23124:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23124:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23123:15:0"
									},
									"scope": 884,
									"src": "23066:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1988,
							"src": "22678:463:0",
							"usedErrors": []
						},
						{
							"id": 885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23262:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 887,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "23560:7:0"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "23560:7:0"
								},
								{
									"baseName": {
										"id": 889,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 745,
										"src": "23569:6:0"
									},
									"id": 890,
									"nodeType": "InheritanceSpecifier",
									"src": "23569:6:0"
								},
								{
									"baseName": {
										"id": 891,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 859,
										"src": "23577:7:0"
									},
									"id": 892,
									"nodeType": "InheritanceSpecifier",
									"src": "23577:7:0"
								},
								{
									"baseName": {
										"id": 893,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "23586:15:0"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "23586:15:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 886,
								"nodeType": "StructuredDocumentation",
								"src": "23294:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1707,
							"linearizedBaseContracts": [
								1707,
								884,
								859,
								745,
								723,
								296
							],
							"name": "ERC721",
							"nameLocation": "23550:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 897,
									"libraryName": {
										"id": 895,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 695,
										"src": "23614:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23608:26:0",
									"typeName": {
										"id": 896,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "23626:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"id": 900,
									"libraryName": {
										"id": 898,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 275,
										"src": "23645:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "23639:26:0",
									"typeName": {
										"id": 899,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "23657:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 902,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "23704:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "23689:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 901,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "23689:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 904,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "23751:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "23736:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 903,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "23736:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 908,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "23847:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "23811:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 907,
										"keyType": {
											"id": 905,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "23819:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "23811:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 906,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23830:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 912,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "23941:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "23905:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 911,
										"keyType": {
											"id": 909,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "23913:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "23905:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 910,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "23924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 916,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "24042:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "24006:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 915,
										"keyType": {
											"id": 913,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24014:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "24006:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24025:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 922,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "24165:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1707,
									"src": "24112:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 921,
										"keyType": {
											"id": 917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24120:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24112:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 920,
											"keyType": {
												"id": 918,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24139:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24131:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 919,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "24150:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "24359:57:0",
										"statements": [
											{
												"expression": {
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 930,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "24369:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 931,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "24377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24369:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "24369:13:0"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 934,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "24392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 935,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "24402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24392:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "24392:17:0"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "24190:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 939,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "24329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "24315:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24315:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "24350:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "24336:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24336:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24314:44:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24359:0:0"
									},
									"scope": 1707,
									"src": "24303:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										722,
										744
									],
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "24591:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "24620:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 952,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 859,
																			"src": "24640:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$859_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$859_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 951,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "24635:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24635:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$859",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "24635:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "24620:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "24676:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 958,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "24696:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$884_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$884_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 957,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "24691:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24691:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$884",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "24691:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "24676:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "24620:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 965,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "24764:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 963,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "24740:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1707_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 744,
															"src": "24740:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24740:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "24620:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 949,
												"id": 968,
												"nodeType": "Return",
												"src": "24601:175:0"
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "24422:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "24492:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 946,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 944,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 745,
												"src": "24559:6:0"
											},
											{
												"id": 945,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 723,
												"src": "24567:7:0"
											}
										],
										"src": "24550:25:0"
									},
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "24517:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "24510:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 941,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "24510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24509:20:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "24585:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 947,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24584:6:0"
									},
									"scope": 1707,
									"src": "24483:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										784
									],
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "24923:124:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "24941:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24958:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24950:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 981,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24950:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24950:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "24941:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24962:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24933:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "24933:74:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 989,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "25024:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 991,
													"indexExpression": {
														"id": 990,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "25034:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25024:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 978,
												"id": 992,
												"nodeType": "Return",
												"src": "25017:23:0"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "24789:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24851:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 975,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24896:8:0"
									},
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "24869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24861:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24860:15:0"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "24914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24913:9:0"
									},
									"scope": 1707,
									"src": "24842:205:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "25185:154:0",
										"statements": [
											{
												"assignments": [
													1004
												],
												"declarations": [
													{
														"constant": false,
														"id": 1004,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "25203:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "25195:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1003,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25195:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"baseExpression": {
														"id": 1005,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "25211:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1007,
													"indexExpression": {
														"id": 1006,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "25219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25211:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25195:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1010,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "25245:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25262:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25254:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1011,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25254:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25254:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25245:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25266:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 1009,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25237:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25237:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "25237:73:0"
											},
											{
												"expression": {
													"id": 1019,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "25327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1002,
												"id": 1020,
												"nodeType": "Return",
												"src": "25320:12:0"
											}
										]
									},
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "25053:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "25113:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 999,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25158:8:0"
									},
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25129:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "25121:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25120:17:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "25176:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25175:9:0"
									},
									"scope": 1707,
									"src": "25104:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										869
									],
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "25470:29:0",
										"statements": [
											{
												"expression": {
													"id": 1029,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 902,
													"src": "25487:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1030,
												"nodeType": "Return",
												"src": "25480:12:0"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "25345:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "25410:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1025,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25437:8:0"
									},
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25414:2:0"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "25455:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1026,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25455:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25454:15:0"
									},
									"scope": 1707,
									"src": "25401:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										875
									],
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "25634:31:0",
										"statements": [
											{
												"expression": {
													"id": 1039,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 904,
													"src": "25651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1040,
												"nodeType": "Return",
												"src": "25644:14:0"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "25505:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "25572:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1035,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25601:8:0"
									},
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25578:2:0"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "25619:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25619:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25618:15:0"
									},
									"scope": 1707,
									"src": "25563:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										883
									],
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "25819:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1053,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "25845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1052,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "25837:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25837:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25855:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 1051,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25829:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25829:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "25829:76:0"
											},
											{
												"assignments": [
													1059
												],
												"declarations": [
													{
														"constant": false,
														"id": 1059,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "25930:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "25916:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1058,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "25916:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1062,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1060,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "25940:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25940:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25916:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1065,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "25973:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25967:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1063,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "25967:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25967:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "25967:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25991:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "25967:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26051:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "25967:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1074,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "26019:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1075,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1045,
																				"src": "26028:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 157,
																			"src": "26028:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26028:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1072,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "26002:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "26002:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26002:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25995:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1070,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "25995:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25995:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1082,
												"nodeType": "Return",
												"src": "25960:93:0"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "25671:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "25740:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1047,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25786:8:0"
									},
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25757:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "25749:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25748:17:0"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "25804:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1048,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25803:15:0"
									},
									"scope": 1707,
									"src": "25731:329:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "26367:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26384:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 1089,
												"id": 1091,
												"nodeType": "Return",
												"src": "26377:9:0"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "26066:230:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "26310:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26318:2:0"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "26352:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26351:15:0"
									},
									"scope": 1707,
									"src": "26301:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										820
									],
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "26520:331:0",
										"statements": [
											{
												"assignments": [
													1103
												],
												"declarations": [
													{
														"constant": false,
														"id": 1103,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "26538:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1135,
														"src": "26530:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1102,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26530:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "26561:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1104,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "26546:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1707_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "26546:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26546:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26530:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "26587:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1111,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "26593:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26587:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26600:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26579:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26579:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "26579:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1117,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "26668:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26668:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1119,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "26684:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "26668:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1122,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "26710:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "26717:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26717:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1121,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "26693:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26693:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "26668:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26744:58:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26647:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26647:165:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "26647:165:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1131,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "26832:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "26836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1130,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "26823:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26823:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "26823:21:0"
											}
										]
									},
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "26399:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "26459:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1100,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26511:8:0"
									},
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26475:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "26467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "26479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26466:29:0"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26520:0:0"
									},
									"scope": 1707,
									"src": "26450:401:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										828
									],
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "26997:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1147,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "27023:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1146,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "27015:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27015:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27033:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27007:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27007:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "27007:73:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1152,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "27098:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 1154,
													"indexExpression": {
														"id": 1153,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "27114:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27098:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1155,
												"nodeType": "Return",
												"src": "27091:31:0"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "26857:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "26921:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26970:8:0"
									},
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26941:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "26933:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26932:17:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "26988:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26987:9:0"
									},
									"scope": 1707,
									"src": "26912:217:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										836
									],
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "27280:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1167,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "27309:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27309:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "27323:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1170,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "27333:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1166,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "27290:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27290:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "27290:52:0"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "27135:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "27205:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27271:8:0"
									},
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27231:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "27223:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "27246:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "27241:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27222:33:0"
									},
									"returnParameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27280:0:0"
									},
									"scope": 1707,
									"src": "27196:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										846
									],
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "27518:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1185,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 922,
															"src": "27535:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1187,
														"indexExpression": {
															"id": 1186,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "27554:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27535:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1189,
													"indexExpression": {
														"id": 1188,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "27561:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27535:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1190,
												"nodeType": "Return",
												"src": "27528:42:0"
											}
										]
									},
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "27355:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27424:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27494:8:0"
									},
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "27441:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27464:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "27456:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27440:33:0"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "27512:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27512:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27511:6:0"
									},
									"scope": 1707,
									"src": "27415:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										812
									],
									"body": {
										"id": 1218,
										"nodeType": "Block",
										"src": "27758:211:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1205,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "27847:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27847:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1207,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "27861:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1204,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "27828:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27828:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27871:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27820:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27820:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "27820:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "27944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1214,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "27950:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "27954:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1212,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "27934:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27934:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "27934:28:0"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "27583:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 1219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "27648:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27749:8:0"
									},
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "27670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "27692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "27720:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "27712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27660:73:0"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27758:0:0"
									},
									"scope": 1707,
									"src": "27639:330:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										802
									],
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "28158:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "28185:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "28191:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1233,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "28195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28204:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1230,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1238,
															1268
														],
														"referencedDeclaration": 1268,
														"src": "28168:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28168:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "28168:39:0"
											}
										]
									},
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "27975:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "28044:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1228,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28149:8:0"
									},
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28078:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "28070:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28100:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "28092:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28120:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "28112:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28060:73:0"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28158:0:0"
									},
									"scope": 1707,
									"src": "28035:179:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										858
									],
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "28431:169:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1253,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "28468:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28468:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1255,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "28482:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1252,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "28449:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28449:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28492:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28441:103:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "28441:103:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "28568:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1243,
															"src": "28574:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "28578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1264,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "28587:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1260,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "28554:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28554:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1266,
												"nodeType": "ExpressionStatement",
												"src": "28554:39:0"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "28220:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "28289:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28422:8:0"
									},
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28323:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "28315:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28345:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "28337:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28365:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "28357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28395:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "28382:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28382:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28305:101:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28431:0:0"
									},
									"scope": 1707,
									"src": "28280:320:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "29603:166:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1281,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "29623:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1282,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "29629:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1283,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "29633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1280,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "29613:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29613:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "29613:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1288,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1271,
																	"src": "29682:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1289,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "29688:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1290,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "29692:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1291,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "29701:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1287,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "29659:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29659:48:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29709:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1286,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29651:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29651:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "29651:111:0"
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "28606:851:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "29471:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29502:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "29494:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29524:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "29516:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29516:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29544:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "29536:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "29574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "29561:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29561:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29484:101:0"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29603:0:0"
									},
									"scope": 1707,
									"src": "29462:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "30143:54:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1305,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "30160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1307,
														"indexExpression": {
															"id": 1306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "30168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "30160:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30188:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30180:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1308,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30180:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30180:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30160:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1313,
												"nodeType": "Return",
												"src": "30153:37:0"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "29775:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "30081:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30097:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "30089:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30088:17:0"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "30137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1302,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30136:6:0"
									},
									"scope": 1707,
									"src": "30072:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "30454:245:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1327,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1320,
																	"src": "30480:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1326,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "30472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30472:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30490:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 1325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30464:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "30464:73:0"
											},
											{
												"assignments": [
													1333
												],
												"declarations": [
													{
														"constant": false,
														"id": 1333,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "30555:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "30547:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1332,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30547:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1338,
												"initialValue": {
													"arguments": [
														{
															"id": 1336,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "30578:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1334,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "30563:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1707_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "30563:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30563:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30547:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1339,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "30604:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1340,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1333,
																		"src": "30615:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "30604:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1343,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "30636:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1342,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "30624:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30624:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 1345,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "30648:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "30624:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "30604:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1333,
																		"src": "30676:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1350,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1318,
																		"src": "30683:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1348,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "30659:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30659:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "30604:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1353,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "30603:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1354,
												"nodeType": "Return",
												"src": "30596:96:0"
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "30203:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "30364:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "30391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "30383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "30408:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "30400:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30382:34:0"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "30448:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30447:6:0"
									},
									"scope": 1707,
									"src": "30355:344:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "31094:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1359,
															"src": "31114:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "31118:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31127:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1364,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1371,
															1400
														],
														"referencedDeclaration": 1400,
														"src": "31104:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31104:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "31104:26:0"
											}
										]
									},
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "30705:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "31038:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31056:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "31048:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "31060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31047:29:0"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31094:0:0"
									},
									"scope": 1707,
									"src": "31029:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "31473:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "31489:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "31493:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1381,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "31483:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31483:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "31483:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "31563:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "31555:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1388,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "31555:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "31555:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1392,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "31567:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1393,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "31571:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1394,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1378,
																	"src": "31580:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1387,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1695,
																"src": "31532:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31532:54:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31600:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 1386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31511:151:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "31511:151:0"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "31143:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "31367:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31394:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "31386:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31386:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31414:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "31406:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31406:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "31444:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "31431:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31376:79:0"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31473:0:0"
									},
									"scope": 1707,
									"src": "31358:311:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "32052:311:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "32070:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32084:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "32076:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32076:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "32070:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32088:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32062:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "32062:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "32141:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 1420,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "32150:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1419,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "32142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32142:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32160:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 1418,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "32133:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32133:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1425,
												"nodeType": "ExpressionStatement",
												"src": "32133:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32223:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32223:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32223:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1431,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "32235:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1432,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "32239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32202:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32202:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "32202:45:0"
											},
											{
												"expression": {
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "32258:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1437,
														"indexExpression": {
															"id": 1436,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "32268:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32258:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32275:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32258:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "32258:18:0"
											},
											{
												"expression": {
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1441,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "32286:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1443,
														"indexExpression": {
															"id": 1442,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "32294:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32286:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1444,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "32305:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32286:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "32286:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32332:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1448,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32332:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32332:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1452,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "32344:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "32348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1447,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "32323:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32323:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1455,
												"nodeType": "EmitStatement",
												"src": "32318:38:0"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "31675:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "32000:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32014:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "32006:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32006:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32026:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "32018:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32005:29:0"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32052:0:0"
									},
									"scope": 1707,
									"src": "31991:372:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "32629:299:0",
										"statements": [
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "32647:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "32639:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1463,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "32639:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"arguments": [
														{
															"id": 1467,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "32670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1465,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "32655:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1707_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1022,
														"src": "32655:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32655:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32639:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "32710:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32717:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32717:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1476,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "32729:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1470,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "32689:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32689:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "32689:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32792:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32784:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1480,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32784:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32784:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1484,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "32796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "32775:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32775:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1486,
												"nodeType": "ExpressionStatement",
												"src": "32775:29:0"
											},
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1487,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "32815:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1489,
														"indexExpression": {
															"id": 1488,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "32825:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32815:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32835:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32815:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "32815:21:0"
											},
											{
												"expression": {
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "32846:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 1493,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "32853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1494,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "32861:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32853:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1497,
												"nodeType": "ExpressionStatement",
												"src": "32846:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1499,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "32894:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32909:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32901:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "32901:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32901:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "32913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1498,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "32885:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32885:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "EmitStatement",
												"src": "32880:41:0"
											}
										]
									},
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "32369:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "32589:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "32595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32594:17:0"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32629:0:0"
									},
									"scope": 1707,
									"src": "32580:348:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "33361:451:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1521,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "33394:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1519,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "33379:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1707_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1022,
																	"src": "33379:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33379:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1523,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "33406:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33379:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33412:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															},
															"value": "ERC721: transfer of token that is not own"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
																"typeString": "literal_string \"ERC721: transfer of token that is not own\""
															}
														],
														"id": 1518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33371:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "33371:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "33474:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33488:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33480:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33480:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33480:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33474:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33492:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33466:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "33466:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "33563:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "33569:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "33573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "33542:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33542:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "33542:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1545,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33652:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33652:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1549,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "33664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1544,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "33643:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33643:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "33643:29:0"
											},
											{
												"expression": {
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1552,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "33683:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1554,
														"indexExpression": {
															"id": 1553,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "33693:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33683:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33702:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "33683:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "33683:20:0"
											},
											{
												"expression": {
													"id": 1562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1558,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "33713:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1560,
														"indexExpression": {
															"id": 1559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "33723:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33713:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "33713:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1563,
												"nodeType": "ExpressionStatement",
												"src": "33713:18:0"
											},
											{
												"expression": {
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1564,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "33741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1566,
														"indexExpression": {
															"id": 1565,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "33749:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33741:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1567,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "33760:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33741:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1569,
												"nodeType": "ExpressionStatement",
												"src": "33741:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1571,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "33787:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1572,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "33793:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1573,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "33797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1570,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "33778:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33778:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1575,
												"nodeType": "EmitStatement",
												"src": "33773:32:0"
											}
										]
									},
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "32934:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "33261:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "33280:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33310:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "33302:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33302:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "33322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33270:73:0"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33361:0:0"
									},
									"scope": 1707,
									"src": "33252:560:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "33987:107:0",
										"statements": [
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1585,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "33997:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1587,
														"indexExpression": {
															"id": 1586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "34013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33997:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1588,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "34024:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33997:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "33997:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1594,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "34065:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1592,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "34050:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1707_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1022,
																"src": "34050:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34050:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1596,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "34075:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1597,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "34079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1591,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "34041:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34041:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "EmitStatement",
												"src": "34036:51:0"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "33818:100:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "33932:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33949:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "33941:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33961:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "33953:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33940:29:0"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33987:0:0"
									},
									"scope": 1707,
									"src": "33923:171:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "34352:184:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1612,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "34370:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1613,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1606,
																"src": "34379:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34370:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34389:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34362:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34362:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "34362:55:0"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1618,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "34427:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1621,
															"indexExpression": {
																"id": 1619,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1604,
																"src": "34446:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "34427:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1622,
														"indexExpression": {
															"id": 1620,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "34453:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "34427:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1623,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "34465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "34427:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "34427:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1627,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "34503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1628,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "34510:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1629,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "34520:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1626,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "34488:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34488:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "EmitStatement",
												"src": "34483:46:0"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "34100:124:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "34238:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "34274:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "34266:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34266:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "34297:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "34289:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "34320:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "34315:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34315:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34256:78:0"
									},
									"returnParameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34352:0:0"
									},
									"scope": 1707,
									"src": "34229:307:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1694,
										"nodeType": "Block",
										"src": "35245:622:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "35259:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 418,
														"src": "35259:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35259:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1692,
													"nodeType": "Block",
													"src": "35825:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "35846:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1646,
															"id": 1691,
															"nodeType": "Return",
															"src": "35839:11:0"
														}
													]
												},
												"id": 1693,
												"nodeType": "IfStatement",
												"src": "35255:606:0",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "35276:543:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1669,
																		"nodeType": "Block",
																		"src": "35391:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1667,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1663,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1661,
																						"src": "35416:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1664,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 712,
																								"src": "35426:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$712_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1665,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 711,
																							"src": "35426:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "35426:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "35416:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1646,
																				"id": 1668,
																				"nodeType": "Return",
																				"src": "35409:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1670,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1662,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1661,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "35383:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1670,
																				"src": "35376:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1660,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "35376:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "35375:15:0"
																	},
																	"src": "35367:115:0"
																},
																{
																	"block": {
																		"id": 1686,
																		"nodeType": "Block",
																		"src": "35511:298:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1674,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1672,
																							"src": "35533:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1675,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "35533:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1676,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "35550:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "35533:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1684,
																					"nodeType": "Block",
																					"src": "35660:135:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "35691:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "35728:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "35732:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "35724:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "35724:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "35747:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "35741:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "35741:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "35717:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "35717:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "35717:38:0"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1672,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "35732:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1672,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "35747:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 1683,
																							"nodeType": "InlineAssembly",
																							"src": "35682:95:0"
																						}
																					]
																				},
																				"id": 1685,
																				"nodeType": "IfStatement",
																				"src": "35529:266:0",
																				"trueBody": {
																					"id": 1682,
																					"nodeType": "Block",
																					"src": "35553:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1679,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35582:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1678,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "35575:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1680,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35575:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1681,
																							"nodeType": "ExpressionStatement",
																							"src": "35575:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1687,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1673,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1672,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "35503:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1687,
																				"src": "35490:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1671,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "35490:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "35489:21:0"
																	},
																	"src": "35483:326:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1654,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "35331:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35331:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1656,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "35345:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1657,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "35351:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1658,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "35360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1651,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1638,
																				"src": "35310:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1650,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 712,
																			"src": "35294:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$712_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "35294:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$712",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 711,
																	"src": "35294:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35294:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1688,
															"nodeType": "TryStatement",
															"src": "35290:519:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "34542:542:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "35098:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35138:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "35130:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35160:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "35152:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35180:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "35172:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "35210:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "35197:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "35197:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35120:101:0"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1695,
												"src": "35239:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35239:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35238:6:0"
									},
									"scope": 1707,
									"src": "35089:778:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1705,
										"nodeType": "Block",
										"src": "36543:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "35873:545:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "36432:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36470:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "36462:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36462:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36492:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "36484:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36512:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "36504:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36452:73:0"
									},
									"returnParameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36543:0:0"
									},
									"scope": 1707,
									"src": "36423:122:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "23541:13006:0",
							"usedErrors": []
						},
						{
							"id": 1708,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36706:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1710,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "36875:7:0"
									},
									"id": 1711,
									"nodeType": "InheritanceSpecifier",
									"src": "36875:7:0"
								},
								{
									"baseName": {
										"id": 1712,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "36884:6:0"
									},
									"id": 1713,
									"nodeType": "InheritanceSpecifier",
									"src": "36884:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1709,
								"nodeType": "StructuredDocumentation",
								"src": "36733:105:0",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 1734,
							"linearizedBaseContracts": [
								1734,
								1707,
								884,
								859,
								745,
								723,
								296
							],
							"name": "ERC721Burnable",
							"nameLocation": "36857:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "37110:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1721,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "37199:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37199:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1723,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "37213:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1720,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "37180:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37180:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37223:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															},
															"value": "ERC721Burnable: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															}
														],
														"id": 1719,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37172:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37172:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "37172:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "37290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1728,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "37284:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37284:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "ExpressionStatement",
												"src": "37284:14:0"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "36897:162:0",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "37073:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "37078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37078:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37077:17:0"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37110:0:0"
									},
									"scope": 1734,
									"src": "37064:241:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1988,
							"src": "36839:468:0",
							"usedErrors": []
						},
						{
							"id": 1735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37470:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1737,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "37604:6:0"
									},
									"id": 1738,
									"nodeType": "InheritanceSpecifier",
									"src": "37604:6:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1736,
								"nodeType": "StructuredDocumentation",
								"src": "37496:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1860,
							"linearizedBaseContracts": [
								1860,
								1707,
								884,
								859,
								745,
								723,
								296
							],
							"name": "ERC721URIStorage",
							"nameLocation": "37584:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1741,
									"libraryName": {
										"id": 1739,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 275,
										"src": "37623:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "37617:26:0",
									"typeName": {
										"id": 1740,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "37635:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1745,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "37723:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1860,
									"src": "37688:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1744,
										"keyType": {
											"id": 1742,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37696:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "37688:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1743,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "37707:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1084
									],
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "37888:575:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1756,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "37914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1755,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "37906:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37906:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37924:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37898:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "37898:78:0"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "38001:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "37987:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1761,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "37987:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1766,
												"initialValue": {
													"baseExpression": {
														"id": 1763,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "38013:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1765,
													"indexExpression": {
														"id": 1764,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "38024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "38013:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37987:45:0"
											},
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "38056:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1806,
														"src": "38042:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1767,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "38042:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1771,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1769,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1093,
														"src": "38063:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38063:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38042:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1774,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1768,
																	"src": "38152:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38146:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "38146:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38146:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "38146:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38146:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1782,
												"nodeType": "IfStatement",
												"src": "38142:70:0",
												"trueBody": {
													"id": 1781,
													"nodeType": "Block",
													"src": "38171:41:0",
													"statements": [
														{
															"expression": {
																"id": 1779,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1762,
																"src": "38192:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1780,
															"nodeType": "Return",
															"src": "38185:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1785,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "38320:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38314:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1783,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "38314:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38314:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "38314:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "38340:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "38314:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1800,
												"nodeType": "IfStatement",
												"src": "38310:106:0",
												"trueBody": {
													"id": 1799,
													"nodeType": "Block",
													"src": "38343:73:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1794,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1768,
																				"src": "38388:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1795,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1762,
																				"src": "38394:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1792,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "38371:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "38371:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38371:33:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "38364:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1790,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "38364:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38364:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1798,
															"nodeType": "Return",
															"src": "38357:48:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1803,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "38448:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1801,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "38433:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1860_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1084,
														"src": "38433:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38433:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1753,
												"id": 1805,
												"nodeType": "Return",
												"src": "38426:30:0"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "37740:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "37809:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37855:8:0"
									},
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37826:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "37818:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37817:17:0"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "37873:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1751,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37873:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37872:15:0"
									},
									"scope": 1860,
									"src": "37800:663:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "38691:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1817,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "38717:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1816,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "38709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38709:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38727:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38701:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38701:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "38701:75:0"
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1822,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "38786:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1824,
														"indexExpression": {
															"id": 1823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "38797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "38786:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1825,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "38808:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "38786:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "38786:31:0"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "38469:136:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "38619:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38640:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "38632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "38663:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "38649:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1811,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38649:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38631:42:0"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38691:0:0"
									},
									"scope": 1860,
									"src": "38610:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1508
									],
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "39099:142:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1839,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "39121:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1836,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "39109:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1860_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1508,
														"src": "39109:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39109:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1841,
												"nodeType": "ExpressionStatement",
												"src": "39109:20:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1844,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "39150:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1846,
																	"indexExpression": {
																		"id": 1845,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "39161:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "39150:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39144:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1842,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "39144:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39144:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "39144:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "39181:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "39144:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1857,
												"nodeType": "IfStatement",
												"src": "39140:95:0",
												"trueBody": {
													"id": 1856,
													"nodeType": "Block",
													"src": "39184:51:0",
													"statements": [
														{
															"expression": {
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "39198:26:0",
																"subExpression": {
																	"baseExpression": {
																		"id": 1851,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "39205:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1853,
																	"indexExpression": {
																		"id": 1852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1832,
																		"src": "39216:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "39205:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1855,
															"nodeType": "ExpressionStatement",
															"src": "39198:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "38830:206:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "39050:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1834,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "39090:8:0"
									},
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39064:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "39056:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39056:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39055:17:0"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39099:0:0"
									},
									"scope": 1860,
									"src": "39041:200:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1988,
							"src": "37566:1677:0",
							"usedErrors": []
						},
						{
							"id": 1861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "39279:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1862,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1707,
										"src": "39330:6:0"
									},
									"id": 1863,
									"nodeType": "InheritanceSpecifier",
									"src": "39330:6:0"
								},
								{
									"baseName": {
										"id": 1864,
										"name": "ERC721URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1860,
										"src": "39338:16:0"
									},
									"id": 1865,
									"nodeType": "InheritanceSpecifier",
									"src": "39338:16:0"
								},
								{
									"baseName": {
										"id": 1866,
										"name": "ERC721Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1734,
										"src": "39356:14:0"
									},
									"id": 1867,
									"nodeType": "InheritanceSpecifier",
									"src": "39356:14:0"
								},
								{
									"baseName": {
										"id": 1868,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 399,
										"src": "39372:7:0"
									},
									"id": 1869,
									"nodeType": "InheritanceSpecifier",
									"src": "39372:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1987,
							"linearizedBaseContracts": [
								1987,
								399,
								1734,
								1860,
								1707,
								884,
								859,
								745,
								723,
								296
							],
							"name": "MoonCats",
							"nameLocation": "39318:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1873,
									"libraryName": {
										"id": 1870,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "39392:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "39386:36:0",
									"typeName": {
										"id": 1872,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1871,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "39405:16:0"
										},
										"referencedDeclaration": 5,
										"src": "39405:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 1876,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "39453:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1987,
									"src": "39428:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1875,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1874,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "39428:16:0"
										},
										"referencedDeclaration": 5,
										"src": "39428:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "39517:2:0",
										"statements": []
									},
									"id": 1884,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d6f6f6e43617473",
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "39496:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1897e11aca86c7b44ee23a1211c2df4240a44b33aeec34df19e8c02416e47048",
														"typeString": "literal_string \"MoonCats\""
													},
													"value": "MoonCats"
												},
												{
													"hexValue": "4d43415453",
													"id": 1880,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "39508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_309983902315b0e11a19add53c9e361c672302818e10d85686b6a2e537d2f009",
														"typeString": "literal_string \"MCATS\""
													},
													"value": "MCATS"
												}
											],
											"id": 1881,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1878,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1707,
												"src": "39489:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "39489:27:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39486:2:0"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39517:0:0"
									},
									"scope": 1987,
									"src": "39475:44:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "39589:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1892,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "39607:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "39607:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39620:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2000000000000000000_by_1",
																	"typeString": "int_const 2000000000000000000"
																},
																"value": "2"
															},
															"src": "39607:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79203220676c6d7220616c6c6f77656420746f206265207472616e7366657265642e",
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39629:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da0149cb360fb4e4f8471d86b0cc492e1d1d006bd39175f1934f6cae8e4c884c",
																"typeString": "literal_string \"Only 2 glmr allowed to be transfered.\""
															},
															"value": "Only 2 glmr allowed to be transfered."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da0149cb360fb4e4f8471d86b0cc492e1d1d006bd39175f1934f6cae8e4c884c",
																"typeString": "literal_string \"Only 2 glmr allowed to be transfered.\""
															}
														],
														"id": 1891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "39599:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39599:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1898,
												"nodeType": "ExpressionStatement",
												"src": "39599:70:0"
											},
											{
												"assignments": [
													1900
												],
												"declarations": [
													{
														"constant": false,
														"id": 1900,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "39696:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1920,
														"src": "39688:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "39688:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1904,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1901,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "39706:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "39706:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39706:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39688:43:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1905,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "39741:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "39741:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39741:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "39741:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "39788:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "39792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1910,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1371,
															1400
														],
														"referencedDeclaration": 1371,
														"src": "39778:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39778:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "39778:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1916,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "39823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1917,
															"name": "uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1888,
															"src": "39832:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1915,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "39810:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39810:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "39810:26:0"
											}
										]
									},
									"functionSelector": "d204c45e",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "39534:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39551:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "39543:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "39569:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "39555:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39555:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39542:31:0"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39589:0:0"
									},
									"scope": 1987,
									"src": "39525:318:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1508,
										1859
									],
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "39925:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "39947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1929,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "39935:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoonCats_$1987_$",
																"typeString": "type(contract super MoonCats)"
															}
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1859,
														"src": "39935:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39935:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "39935:20:0"
											}
										]
									},
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "39858:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1927,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1925,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1707,
												"src": "39899:6:0"
											},
											{
												"id": 1926,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1860,
												"src": "39907:16:0"
											}
										],
										"src": "39890:34:0"
									},
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39872:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "39864:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39863:17:0"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39925:0:0"
									},
									"scope": 1987,
									"src": "39849:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1084,
										1807
									],
									"body": {
										"id": 1951,
										"nodeType": "Block",
										"src": "40110:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1948,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "40142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1946,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "40127:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MoonCats_$1987_$",
																"typeString": "type(contract super MoonCats)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1807,
														"src": "40127:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40127:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1945,
												"id": 1950,
												"nodeType": "Return",
												"src": "40120:30:0"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 1952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "39977:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1942,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1940,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1707,
												"src": "40048:6:0"
											},
											{
												"id": 1941,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1860,
												"src": "40056:16:0"
											}
										],
										"src": "40039:34:0"
									},
									"parameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39994:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "39986:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39985:17:0"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "40091:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1943,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40091:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40090:15:0"
									},
									"scope": 1987,
									"src": "39968:189:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1985,
										"nodeType": "Block",
										"src": "40200:175:0",
										"statements": [
											{
												"assignments": [
													1956
												],
												"declarations": [
													{
														"constant": false,
														"id": 1956,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "40218:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "40210:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1955,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40210:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1959,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1957,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "40226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40226:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40210:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1961,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1956,
																"src": "40251:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1962,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "40260:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "40260:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40251:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1960,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40243:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40243:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1966,
												"nodeType": "ExpressionStatement",
												"src": "40243:28:0"
											},
											{
												"assignments": [
													1968
												],
												"declarations": [
													{
														"constant": false,
														"id": 1968,
														"mutability": "mutable",
														"name": "to",
														"nameLocation": "40297:2:0",
														"nodeType": "VariableDeclaration",
														"scope": 1985,
														"src": "40281:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 1967,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40281:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1974,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1971,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "40310:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "40310:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "40302:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 1969,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "40302:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40302:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40281:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1980,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "40351:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_MoonCats_$1987",
																			"typeString": "contract MoonCats"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_MoonCats_$1987",
																			"typeString": "contract MoonCats"
																		}
																	],
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40343:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1978,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "40343:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40343:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "40343:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "40331:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "40331:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40331:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "40331:34:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "40172:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40180:2:0"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40200:0:0"
									},
									"scope": 1987,
									"src": "40163:212:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1988,
							"src": "39309:1069:0",
							"usedErrors": []
						}
					],
					"src": "141:40237:0"
				},
				"id": 0
			}
		}
	}
}